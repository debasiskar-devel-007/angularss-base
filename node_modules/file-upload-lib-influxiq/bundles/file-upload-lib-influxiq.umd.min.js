!function(e,a){"object"==typeof exports&&"undefined"!=typeof module?a(exports,require("rxjs/operators"),require("@angular/router"),require("@angular/platform-browser"),require("@angular/forms"),require("@angular/cdk/a11y"),require("@angular/cdk/drag-drop"),require("@angular/cdk/portal"),require("@angular/cdk/scrolling"),require("@angular/cdk/stepper"),require("@angular/cdk/table"),require("@angular/cdk/tree"),require("@angular/material/autocomplete"),require("@angular/material/badge"),require("@angular/material/bottom-sheet"),require("@angular/material/button"),require("@angular/material/button-toggle"),require("@angular/material/card"),require("@angular/material/checkbox"),require("@angular/material/chips"),require("@angular/material/stepper"),require("@angular/material/datepicker"),require("@angular/material/dialog"),require("@angular/material/divider"),require("@angular/material/expansion"),require("@angular/material/grid-list"),require("@angular/material/icon"),require("@angular/material/input"),require("@angular/material/list"),require("@angular/material/menu"),require("@angular/material/core"),require("@angular/material/paginator"),require("@angular/material/progress-bar"),require("@angular/material/progress-spinner"),require("@angular/material/radio"),require("@angular/material/select"),require("@angular/material/sidenav"),require("@angular/material/slider"),require("@angular/material/slide-toggle"),require("@angular/material/snack-bar"),require("@angular/material/sort"),require("@angular/material/table"),require("@angular/material/tabs"),require("@angular/material/toolbar"),require("@angular/material/tooltip"),require("@angular/material/tree"),require("@angular/common/http"),require("listing-angular7"),require("@angular/core")):"function"==typeof define&&define.amd?define("file-upload-lib-influxiq",["exports","rxjs/operators","@angular/router","@angular/platform-browser","@angular/forms","@angular/cdk/a11y","@angular/cdk/drag-drop","@angular/cdk/portal","@angular/cdk/scrolling","@angular/cdk/stepper","@angular/cdk/table","@angular/cdk/tree","@angular/material/autocomplete","@angular/material/badge","@angular/material/bottom-sheet","@angular/material/button","@angular/material/button-toggle","@angular/material/card","@angular/material/checkbox","@angular/material/chips","@angular/material/stepper","@angular/material/datepicker","@angular/material/dialog","@angular/material/divider","@angular/material/expansion","@angular/material/grid-list","@angular/material/icon","@angular/material/input","@angular/material/list","@angular/material/menu","@angular/material/core","@angular/material/paginator","@angular/material/progress-bar","@angular/material/progress-spinner","@angular/material/radio","@angular/material/select","@angular/material/sidenav","@angular/material/slider","@angular/material/slide-toggle","@angular/material/snack-bar","@angular/material/sort","@angular/material/table","@angular/material/tabs","@angular/material/toolbar","@angular/material/tooltip","@angular/material/tree","@angular/common/http","listing-angular7","@angular/core"],a):a(e["file-upload-lib-influxiq"]={},e.rxjs.operators,e.ng.router,e.ng.platformBrowser,e.ng.forms,e.ng.cdk.a11y,e.ng.cdk["drag-drop"],e.ng.cdk.portal,e.ng.cdk.scrolling,e.ng.cdk.stepper,e.ng.cdk.table,e.ng.cdk.tree,e.ng.material.autocomplete,e.ng.material.badge,e.ng.material["bottom-sheet"],e.ng.material.button,e.ng.material["button-toggle"],e.ng.material.card,e.ng.material.checkbox,e.ng.material.chips,e.ng.material.stepper,e.ng.material.datepicker,e.ng.material.dialog,e.ng.material.divider,e.ng.material.expansion,e.ng.material["grid-list"],e.ng.material.icon,e.ng.material.input,e.ng.material.list,e.ng.material.menu,e.ng.material.core,e.ng.material.paginator,e.ng.material["progress-bar"],e.ng.material["progress-spinner"],e.ng.material.radio,e.ng.material.select,e.ng.material.sidenav,e.ng.material.slider,e.ng.material["slide-toggle"],e.ng.material["snack-bar"],e.ng.material.sort,e.ng.material.table,e.ng.material.tabs,e.ng.material.toolbar,e.ng.material.tooltip,e.ng.material.tree,e.ng.common.http,e.listingAngular7,e.ng.core)}(this,function(e,r,a,t,i,o,n,l,s,u,p,d,g,c,m,f,b,h,v,y,M,k,x,D,q,w,F,I,S,A,R,T,U,B,C,P,z,L,j,H,O,_,E,N,$,V,G,K,X){"use strict";var Y=(J.prototype.upload=function(e,a){var t=new FormData;return t.append("file",a.file),t.append("type",a.type),t.append("path",a.path),t.append("prefix",a.prefix),this.httpClient.post(e,t,{reportProgress:!0,observe:"events"}).pipe(r.map(function(e){switch(e.type){case G.HttpEventType.UploadProgress:var a=Math.round(100*e.loaded/e.total);return 0<=a&&a<=100?{status:"progress",data:{totalData:e.total,loadedData:e.loaded,percentage:a}}:{status:"complete",data:null};case G.HttpEventType.Response:return"success"==e.body.status?{status:"complete",data:e.body}:{status:"error",data:"An error occord."};default:return{status:"waiting",data:""}}}))},J.decorators=[{type:X.Injectable,args:[{providedIn:"root"}]}],J.ctorParameters=function(){return[{type:G.HttpClient}]},J.ngInjectableDef=X.defineInjectable({factory:function(){return new J(X.inject(G.HttpClient))},token:J,providedIn:"root"}),J);function J(e){this.httpClient=e,this.BASE_URL="http://3.15.236.141:5005/uploads",this.httpOptions={headers:new G.HttpHeaders({"Content-Type":"application/x-www-form-urlencoded","access-token":"TEST"})}}var Q=(W.prototype.onNoClick=function(){this.dialogRef.close()},W.prototype.ngOnInit=function(){},W.decorators=[{type:X.Component,args:[{selector:"lib-dialog-box",template:'<h1 mat-dialog-title>Are you sure ??</h1>\n<div mat-dialog-actions>\n  <button mat-button [mat-dialog-close]="false" (click)="onNoClick()">No Thanks</button>\n  <button mat-button [mat-dialog-close]="true" cdkFocusInitial>Yes</button>\n</div>',styles:[""]}]}],W.ctorParameters=function(){return[{type:x.MatDialogRef},{type:undefined,decorators:[{type:X.Inject,args:[x.MAT_DIALOG_DATA]}]}]},W);function W(e,a){this.dialogRef=e,this.data=a}var Z=(ee.prototype.onNoClick=function(){this.dialogRef.close()},ee.prototype.ngOnInit=function(){console.log(this.data)},ee.decorators=[{type:X.Component,args:[{selector:"lib-preview-files",template:'<h2 mat-dialog-title>File Preview</h2>\n<mat-dialog-content class="mat-typography">\n  <img mat-card-image [src]="this.data.imgURL" *ngIf="this.data.imgURL">\n</mat-dialog-content>\n<mat-dialog-actions align="end">\n  <button mat-button mat-dialog-close>Cancel</button>\n</mat-dialog-actions>',styles:["img{max-width:100%;max-height:64vh}"]}]}],ee.ctorParameters=function(){return[{type:x.MatDialogRef},{type:undefined,decorators:[{type:X.Inject,args:[x.MAT_DIALOG_DATA]}]}]},ee);function ee(e,a){this.dialogRef=e,this.data=a}var ae=(Object.defineProperty(te.prototype,"config",{set:function(e){this.configData=e},enumerable:!0,configurable:!0}),te.prototype.ngOnInit=function(){},te.prototype.selectFiles=function(e){for(var a=0;a<e.length;a++){var t=this.files.length+a,r=e[a],i=this.checkingValidation(r);i.status?r.valid={status:!0}:r.valid={status:!1,message:i.message},r.upload={status:"selected"},r.viewUrl="https://media.giphy.com/media/jAYUbVXgESSti/giphy.gif",this.files.push(r),this.viewTh(t)}},te.prototype.viewTh=function(r){var i=this;setTimeout(function(){var t=new FileReader;i.files[r],t.readAsDataURL(i.files[r]),t.onload=function(e){var a=t.result;i.files[r].viewUrl=a}},2e3)},te.prototype.checkingValidation=function(e){var a={status:!0,message:null},t=e.type.split("/");return 0==this.configData.format.includes(t[1])?(a.status=!1,a.message=t[1]+" format not supported.",a):e.size/1e3>this.configData.size?(a.status=!1,a.message="File size too large. Maximum file size limit: "+this.configData.size+" KB.",a):1==a.status?a:void 0},te.prototype.uploadAll=function(e){void 0===e&&(e=null);for(var a=0;a<this.files.length;a++)1==this.files[a].valid.status&&"complete"!=this.files[a].upload.status&&this.uploading(a)},te.prototype.uploading=function(t){var r=this,e={file:this.files[t],type:"bulk-upload",path:"files",prefix:"image_"},a=this.configData.baseUrl+this.configData.endpoint+"?path="+this.configData.path+"&prefix="+this.configData.prefix+"&type="+this.configData.type+"&rand="+t;this.fileUploadService.upload(a,e).subscribe(function(e){var a=e;switch(a.status){case"complete":r.files[t].upload=a,r.configData.files=r.files,r.openSnackBar("Successfully Uploaded !!","Undo");break;case"error":r.files[t].upload=a.data,r.openSnackBar(a.data,"");break;default:r.files[t].upload=a}},function(e){r.files[t]={status:"error"},r.openSnackBar("An error occurred !!","Retry")})},te.prototype.removeFiles=function(a){var t=this;void 0===a&&(a=null),this.openDialog(),this.dialogRef.afterClosed().subscribe(function(e){e&&(t.files.splice(a,1),t.openSnackBar("Successfully Remove !!",""))})},te.prototype.openSnackBar=function(e,a){this._snackBar.open(e,a,{duration:2e3})},te.prototype.openDialog=function(){this.dialogRef=this.dialog.open(Q,{width:"250px",data:{message:"Message"}})},te.prototype.deleteAll=function(){this.files.splice(0,this.files.length)},te.prototype.previewFiles=function(e){var t=this;if(null!=this.files[e].type.match(/image\/*/)){var r=new FileReader;this.files[e],r.readAsDataURL(this.files[e]),r.onload=function(e){var a=r.result;t.dialog.open(Z,{data:{imgURL:a}})}}else console.log("Preview not supported.")},te.decorators=[{type:X.Component,args:[{selector:"lib-file-upload",template:'\x3c!-- File Upload --\x3e\n<div class="uploadfilecontainer" (click)="fileInput.click()" libDragDrop (onFileDropped)="selectFiles($event)">\n    <input hidden type="file" #fileInput (change)="selectFiles($event.target.files)" multiple>\n    <div class="uploadtextwrapper">\n        <h2>Drag and Drop Files</h2>\n        <p>Supported Formats:\n            <ng-container *ngFor="let val of configData.format; let i = index">\n                {{ val }}<ng-container *ngIf="i + 1 < configData.format.length">,</ng-container>\n            </ng-container>\n        </p>\n        <p>MAX Size: {{ configData.size }} KB</p>\n    </div>\n</div>\n\n<div class="button-group" *ngIf="files.length > 0">\n    <button mat-raised-button color="primary" (click)="uploadAll();">Upload All</button>\n    <button mat-raised-button color="warn" (click)="deleteAll();">Delete All</button>\n</div>\n\n<div class="files-view">\n    \x3c!-- View Files --\x3e\n    <mat-card class="example-card" *ngFor="let file of files; let i = index;">\n        <span class="viewUrlwrapper">\n            <img mat-card-image [src]="file.viewUrl" alt="{{ file.name }}" />\n        </span>\n        <span class="viewUrlcontent">\n            <mat-card-header>\n                <mat-card-title>{{ file.name }}</mat-card-title>\n                <mat-card-subtitle>Type: {{ file.type }}, Size:\n                    <ng-container *ngIf="file.size / 1000 > 999">\n                        {{ file.size / 1000 / 1000 | number: \'.1-2\' }} MB\n                    </ng-container>\n                    <ng-container *ngIf="file.size / 1000 < 1000">\n                        {{ file.size / 1000 | number: \'.1-2\' }} KB\n                    </ng-container>\n                </mat-card-subtitle>\n                <mat-card-subtitle class="error" *ngIf="file.valid.status == false">{{ file.valid.message }}\n                </mat-card-subtitle>\n            </mat-card-header>\n\n            <mat-card-content>\n                <mat-progress-bar mode="determinate" *ngIf="file.upload.status == \'progress\'"\n                    value="{{ file.upload.data.percentage }}"></mat-progress-bar>\n                <mat-progress-bar mode="indeterminate" *ngIf="file.upload.status == \'waiting\'"></mat-progress-bar>\n            </mat-card-content>\n\n            <mat-card-actions>\n                <button mat-raised-button matTooltip="Preview" aria-label="Preview" (click)="previewFiles(i);">Preview</button>\n\n                <button mat-raised-button color="primary" *ngIf="file.valid.status == true && file.upload.status != \'complete\'" matTooltip="Upload" aria-label="Upload" (click)="uploading(i);">Upload</button>\n                <button mat-raised-button disabled *ngIf="file.upload.status == \'complete\'">Upload Complete</button>\n\n                <button mat-raised-button color="warn" matTooltip="Remove" aria-label="Remove" (click)="removeFiles(i);">Remove</button>\n            </mat-card-actions>\n        </span>\n    </mat-card>\n</div>',styles:[".uploadfilecontainer{background-repeat:no-repeat;background-size:100px;background-position:center;height:200px;width:80%;margin:20px auto;border:2px dashed #1c8adb;border-radius:10px;text-align:center;display:flex;justify-content:center;align-items:center}.uploadfilecontainer:hover{cursor:pointer;background-color:#9ecbec!important;opacity:.8}.files-view{background-repeat:no-repeat;background-size:100px;background-position:center;height:200px;width:80%;margin:20px auto;border-radius:10px}.button-group{background-repeat:no-repeat;background-size:100px;background-position:center;height:40px;width:80%;margin:20px auto;border-radius:10px}.error.mat-card-subtitle{color:#a00}.example-card{margin:6px auto auto;max-width:100%}.example-header-image{background-image:url(https://material.angular.io/assets/img/examples/shiba1.jpg);background-size:cover}.progress-bar{margin-top:24px}.file-div{background-color:#dedddc;margin-top:6px}"]}]}],te.ctorParameters=function(){return[{type:i.FormBuilder},{type:Y},{type:a.ActivatedRoute},{type:a.Router},{type:H.MatSnackBar},{type:x.MatDialog}]},te.propDecorators={config:[{type:X.Input}]},te);function te(e,a,t,r,i,o){this.formBuilder=e,this.fileUploadService=a,this.ActivatedRoute=t,this.router=r,this._snackBar=i,this.dialog=o,this.formData=new FormData,this.files=[],this.filesProcess=[],this.totalFile=0}var re=(ie.decorators=[{type:X.NgModule,args:[{exports:[o.A11yModule,u.CdkStepperModule,p.CdkTableModule,d.CdkTreeModule,n.DragDropModule,g.MatAutocompleteModule,c.MatBadgeModule,m.MatBottomSheetModule,f.MatButtonModule,b.MatButtonToggleModule,h.MatCardModule,v.MatCheckboxModule,y.MatChipsModule,M.MatStepperModule,k.MatDatepickerModule,x.MatDialogModule,D.MatDividerModule,q.MatExpansionModule,w.MatGridListModule,F.MatIconModule,I.MatInputModule,S.MatListModule,A.MatMenuModule,R.MatNativeDateModule,T.MatPaginatorModule,U.MatProgressBarModule,B.MatProgressSpinnerModule,C.MatRadioModule,R.MatRippleModule,P.MatSelectModule,z.MatSidenavModule,L.MatSliderModule,j.MatSlideToggleModule,H.MatSnackBarModule,O.MatSortModule,_.MatTableModule,E.MatTabsModule,N.MatToolbarModule,$.MatTooltipModule,V.MatTreeModule,l.PortalModule,s.ScrollingModule]}]}],ie);function ie(){}var oe=(ne.prototype.onDragOver=function(e){e.preventDefault(),e.stopPropagation(),this.background="#9ecbec",this.opacity="0.8"},ne.prototype.onDragLeave=function(e){e.preventDefault(),e.stopPropagation(),this.background="#f5fcff",this.opacity="1"},ne.prototype.ondrop=function(e){e.preventDefault(),e.stopPropagation(),this.background="#f5fcff",this.opacity="1";var a=e.dataTransfer.files;0<a.length&&this.onFileDropped.emit(a)},ne.decorators=[{type:X.Directive,args:[{selector:"[libDragDrop]"}]}],ne.propDecorators={onFileDropped:[{type:X.Output}],background:[{type:X.HostBinding,args:["style.background-color"]}],opacity:[{type:X.HostBinding,args:["style.opacity"]}],onDragOver:[{type:X.HostListener,args:["dragover",["$event"]]}],onDragLeave:[{type:X.HostListener,args:["dragleave",["$event"]]}],ondrop:[{type:X.HostListener,args:["drop",["$event"]]}]},ne);function ne(){this.onFileDropped=new X.EventEmitter,this.background="#f5fcff",this.opacity="1"}var le=(se.prototype.ngOnInit=function(){},se.decorators=[{type:X.Component,args:[{selector:"lib-alert-message",template:'<span class="example-pizza-party">\n  An error occurred.\n</span>',styles:[".example-pizza-party{color:#ff69b4}"]}]}],se.ctorParameters=function(){return[]},se);function se(){}var ue=(pe.decorators=[{type:X.NgModule,args:[{declarations:[ae,oe,le,Q,Z],imports:[t.BrowserModule,re,i.FormsModule,i.ReactiveFormsModule,G.HttpClientModule,K.ListingModule],exports:[ae],entryComponents:[le,Q,Z]}]}],pe);function pe(){}e.FileUploadService=Y,e.FileUploadComponent=ae,e.FileUploadModule=ue,e.ɵe=re,e.ɵb=le,e.ɵc=Q,e.ɵd=Z,e.ɵa=oe,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=file-upload-lib-influxiq.umd.min.js.map