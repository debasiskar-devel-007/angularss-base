{"version":3,"file":"blogs.js.map","sources":["ng://blogs/lib/blogs.service.ts","ng://blogs/lib/blogs.component.ts","ng://blogs/lib/atoms/textbox.ts","ng://blogs/lib/field-builder/field-builder.component.ts","ng://blogs/lib/atoms/radio.ts","ng://blogs/lib/atoms/file.ts","ng://blogs/lib/atoms/dropdown.ts","ng://blogs/lib/atoms/checkbox.ts","ng://blogs/lib/material-module.ts","ng://blogs/lib/blogs.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlogsService {\n\n  constructor() { }\n}\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'lib-Blogs',\n  template: `\n  <form (ngSubmit)=\"onSubmit.emit(this.form.value)\" [formGroup]=\"form\" class=\"form-horizontal\">\n  <div *ngFor=\"let field of fields\">\n      <field-builder [field]=\"field\" [form]=\"form\"></field-builder>\n  </div>\n  <div class=\"form-row\"></div>\n  <div class=\"form-group row\">\n    <div class=\"col-md-3\"></div>\n    <div class=\"col-md-9\">\n      <button type=\"submit\" [disabled]=\"!form.valid\" class=\"btn btn-primary\">Save</button>\n      <strong >Saved all values</strong>\n    </div>\n  </div>\n</form>\n\n\n\n\n<mat-checkbox>Check me!</mat-checkbox>\n  `,\n  styles: []\n})\nexport class BlogsComponent implements OnInit {\n  \n  @Output() onSubmit = new EventEmitter();\n  @Input() fields: any[] = [];\n  form: FormGroup;\n  constructor() { }\n\n  ngOnInit() {\n    let fieldsCtrls = {};\n    for (let f of this.fields) {\n      if (f.type != 'checkbox') {\n        fieldsCtrls[f.name] = new FormControl(f.value || '', Validators.required)\n      } else {\n        let opts = {};\n        for (let opt of f.options) {\n          opts[opt.key] = new FormControl(opt.value);\n        }\n        fieldsCtrls[f.name] = new FormGroup(opts)\n      }\n    }\n    this.form = new FormGroup(fieldsCtrls);\n  }\n}","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n// text,email,tel,textarea,password, \n@Component({\n    selector: 'textbox',\n    template: `\n      <div [formGroup]=\"form\">\n        <input *ngIf=\"!field.multiline\" [attr.type]=\"field.type\" class=\"form-control\"  [id]=\"field.name\" [name]=\"field.name\" [formControlName]=\"field.name\">\n        <textarea *ngIf=\"field.multiline\" [class.is-invalid]=\"isDirty && !isValid\" [formControlName]=\"field.name\" [id]=\"field.name\"\n        rows=\"9\" class=\"form-control\" [placeholder]=\"field.placeholder\"></textarea>\n      </div> \n\n    `\n})\nexport class TextBoxComponent {\n    @Input() field:any = {};\n    @Input() form:FormGroup;\n    get isValid() { return this.form.controls[this.field.name].valid; }\n    get isDirty() { return this.form.controls[this.field.name].dirty; }\n  \n    constructor() {\n\n    }\n}","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'field-builder',\n  template: `\n  <div class=\"form-group row\" [formGroup]=\"form\">\n    <label class=\"col-md-3 form-control-label\" [attr.for]=\"field.label\">\n      {{field.label}}\n      <strong class=\"text-danger\" *ngIf=\"field.required\">*</strong>\n    </label>\n    <div class=\"col-md-9\" [ngSwitch]=\"field.type\">\n      <textbox *ngSwitchCase=\"'text'\" [field]=\"field\" [form]=\"form\"></textbox>\n      <dropdown *ngSwitchCase=\"'dropdown'\" [field]=\"field\" [form]=\"form\"></dropdown>\n      <checkbox *ngSwitchCase=\"'checkbox'\" [field]=\"field\" [form]=\"form\"></checkbox>\n      <radio *ngSwitchCase=\"'radio'\" [field]=\"field\" [form]=\"form\"></radio>\n      <file *ngSwitchCase=\"'file'\" [field]=\"field\" [form]=\"form\"></file>\n      <div class=\"alert alert-danger my-1 p-2 fadeInDown animated\" *ngIf=\"!isValid && isDirty\">{{field.label}} is required</div>\n    </div>\n  </div>\n  `\n})\nexport class FieldBuilderComponent implements OnInit {\n  @Input() field:any;\n  @Input() form:any;\n  \n  get isValid() { return this.form.controls[this.field.name].valid; }\n  get isDirty() { return this.form.controls[this.field.name].dirty; }\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'radio',\n    template: `\n      <div [formGroup]=\"form\">\n        <div class=\"form-check\" *ngFor=\"let opt of field.options\">\n          <input class=\"form-check-input\" type=\"radio\" [value]=\"opt.key\" >\n          <label class=\"form-check-label\">\n            {{opt.label}}\n          </label>\n        </div>\n      </div> \n    `\n})\nexport class RadioComponent {\n    @Input() field:any = {};\n    @Input() form:FormGroup;\n}","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n// text,email,tel,textarea,password, \n@Component({\n    selector: 'file',\n    template: `\n      <div [formGroup]=\"form\">\n        <div *ngIf=\"!field.value\" class=\"drop-container dropzone\" dropZone (hovered)=\"toggleHover($event)\"\n          (dropped)=\"field.onUpload($event)\">\n          <p class=\"m-0\">\n            Drag a file here or\n            <label class=\"upload-button\">\n              <input type=\"file\" multiple=\"\" (change)=\"field.onUpload($event.target.files)\"> browse\n            </label>\n            to upload.\n          </p>\n        </div>\n        <div *ngIf=\"field.value\">\n          <!-- <button type=\"button\" class=\"btn btn-primary\">Change</button> -->\n          <div class=\"card\">\n            <img class=\"card-img-top\" [src]=\"field.value\">\n          </div>\n        </div>\n      </div> \n    `,\n    styles:[\n      `\n      .drop-container {\n        background: #fff;\n        border-radius: 6px;\n        height: 150px;\n        width: 100%;\n        box-shadow: 1px 2px 20px hsla(0,0%,4%,.1);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        border: 2px dashed #c0c4c7;\n      }\n      p {\n        font-size: 16px;\n        font-weight: 400;\n        color: #c0c4c7; \n      }\n      .upload-button {\n        display: inline-block;\n        border: none;\n        outline: none;\n        cursor: pointer;\n        color: #5754a3;\n      }\n      .upload-button input {\n        display: none;\n      }\n      .dropzone { \n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex-direction: column; \n        border-radius: 5px;\n        background: white;\n        margin: 10px 0;\n      }\n      .dropzone.hovering {\n          border: 2px solid #f16624;\n          color: #dadada !important;\n      }\n      progress::-webkit-progress-value {\n        transition: width 0.1s ease;\n      }\n      `\n    ]\n})\nexport class FileComponent {\n    @Input() field:any = {};\n    @Input() form:FormGroup;\n    get isValid() { return this.form.controls[this.field.name].valid; }\n    get isDirty() { return this.form.controls[this.field.name].dirty; }\n  \n    constructor() {\n\n    }\n\n    ngOnChange(){\n      console.log(this.field.value);\n      // this.field.value.\n    }\n    toggleHover(val){\n\n    }\n}","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'dropdown',\n    template: `\n      <div [formGroup]=\"form\">\n        <select class=\"form-control\" [id]=\"field.name\" [formControlName]=\"field.name\">\n          <option *ngFor=\"let opt of field.options\" [value]=\"opt.key\">{{opt.label}}</option>\n        </select>\n      </div> \n    `\n})\nexport class DropDownComponent {\n    @Input() field:any = {};\n    @Input() form:FormGroup;\n\n    constructor() {\n\n    }\n}","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n    selector: 'checkbox',\n    template: `\n      <div [formGroup]=\"form\">\n        <div [formGroupName]=\"field.name\" >\n          <div *ngFor=\"let opt of field.options\" class=\"form-check form-check\">\n          <label class=\"form-check-label\">\n             <input [formControlName]=\"opt.key\" class=\"form-check-input\" type=\"checkbox\" id=\"inlineCheckbox1\" value=\"option1\" />\n             {{opt.label}}</label>\n          </div>\n        </div>\n\n      </div> \n    `\n})\nexport class CheckBoxComponent {\n    @Input() field:any = {};\n    @Input() form:FormGroup;\n    get isValid() { return this.form.controls[this.field.name].valid; }\n    get isDirty() { return this.form.controls[this.field.name].dirty; }\n}","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n Use of this source code is governed by an MIT-style license that\n can be found in the LICENSE file at http://angular.io/license */\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { BlogsComponent } from './blogs.component';\nimport { TextBoxComponent } from './atoms/textbox';\nimport { FieldBuilderComponent } from './field-builder/field-builder.component';\nimport { RadioComponent } from './atoms/radio';\nimport { FileComponent } from './atoms/file';\nimport { DropDownComponent } from './atoms/dropdown';\nimport { CheckBoxComponent } from './atoms/checkbox';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DemoMaterialModule } from './material-module';\n\n@NgModule({\n  declarations: [BlogsComponent, \n    TextBoxComponent,\n    FieldBuilderComponent,\n    RadioComponent,\n    FileComponent,\n    DropDownComponent,\n    CheckBoxComponent],\n  imports: [\n  \n    CommonModule,\n    ReactiveFormsModule,\n    DemoMaterialModule\n  ],\n  exports: [BlogsComponent],\n  providers:[],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class BlogsModule { }\n"],"names":["tslib_1.__values"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;IAOE;KAAiB;;gBALlB,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;;;uBAJD;CAEA;;;;;;;IC8BE;QAHU,aAAQ,GAAG,IAAI,YAAY,EAAE,CAAC;QAC/B,WAAM,GAAU,EAAE,CAAC;KAEX;;;;IAEjB,iCAAQ;;;IAAR;;;YACM,WAAW,GAAG,EAAE;;YACpB,KAAc,IAAA,KAAAA,SAAA,IAAI,CAAC,MAAM,CAAA,gBAAA,4BAAE;gBAAtB,IAAI,CAAC,WAAA;gBACR,IAAI,CAAC,CAAC,IAAI,IAAI,UAAU,EAAE;oBACxB,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,WAAW,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAA;iBAC1E;qBAAM;;wBACD,IAAI,GAAG,EAAE;;wBACb,KAAgB,IAAA,KAAAA,SAAA,CAAC,CAAC,OAAO,CAAA,gBAAA,4BAAE;4BAAtB,IAAI,GAAG,WAAA;4BACV,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;yBAC5C;;;;;;;;;oBACD,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,CAAA;iBAC1C;aACF;;;;;;;;;QACD,IAAI,CAAC,IAAI,GAAG,IAAI,SAAS,CAAC,WAAW,CAAC,CAAC;KACxC;;gBA7CF,SAAS,SAAC;oBACT,QAAQ,EAAE,WAAW;oBACrB,QAAQ,EAAE,ykBAmBT;iBAEF;;;;;2BAGE,MAAM;yBACN,KAAK;;IAmBR,qBAAC;CA9CD;;;;;;ACHA;AAIA;IAiBI;QALS,UAAK,GAAO,EAAE,CAAC;KAOvB;IALD,sBAAI,qCAAO;;;;QAAX,cAAgB,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,EAAE;;;OAAA;IACnE,sBAAI,qCAAO;;;;QAAX,cAAgB,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,EAAE;;;OAAA;;gBAftE,SAAS,SAAC;oBACP,QAAQ,EAAE,SAAS;oBACnB,QAAQ,EAAE,6cAOT;iBACJ;;;;;wBAEI,KAAK;uBACL,KAAK;;IAOV,uBAAC;CApBD;;;;;;ACJA;IA4BE;KAAiB;IAHjB,sBAAI,0CAAO;;;;QAAX,cAAgB,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,EAAE;;;OAAA;IACnE,sBAAI,0CAAO;;;;QAAX,cAAgB,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,EAAE;;;OAAA;;;;IAInE,wCAAQ;;;IAAR;KACC;;gBA7BF,SAAS,SAAC;oBACT,QAAQ,EAAE,eAAe;oBACzB,QAAQ,EAAE,83BAeT;iBACF;;;;;wBAEE,KAAK;uBACL,KAAK;;IAUR,4BAAC;CA/BD;;;;;;ACFA;IAGA;QAca,UAAK,GAAO,EAAE,CAAC;KAE3B;;gBAhBA,SAAS,SAAC;oBACP,QAAQ,EAAE,OAAO;oBACjB,QAAQ,EAAE,gUAST;iBACJ;;;wBAEI,KAAK;uBACL,KAAK;;IACV,qBAAC;CAhBD;;;;;;ACHA;AAIA;IA2EI;QALS,UAAK,GAAO,EAAE,CAAC;KAOvB;IALD,sBAAI,kCAAO;;;;QAAX,cAAgB,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,EAAE;;;OAAA;IACnE,sBAAI,kCAAO;;;;QAAX,cAAgB,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,EAAE;;;OAAA;;;;IAMnE,kCAAU;;;IAAV;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;;KAE/B;;;;;IACD,mCAAW;;;;IAAX,UAAY,GAAG;KAEd;;gBArFJ,SAAS,SAAC;oBACP,QAAQ,EAAE,MAAM;oBAChB,QAAQ,EAAE,6vBAmBT;6BAEC,2jCA2CC;iBAEN;;;;;wBAEI,KAAK;uBACL,KAAK;;IAeV,oBAAC;CAtFD;;;;;;ACJA;IAiBI;QAHS,UAAK,GAAO,EAAE,CAAC;KAKvB;;gBAhBJ,SAAS,SAAC;oBACP,QAAQ,EAAE,UAAU;oBACpB,QAAQ,EAAE,4QAMT;iBACJ;;;;;wBAEI,KAAK;uBACL,KAAK;;IAKV,wBAAC;CAjBD;;;;;;ACHA;IAGA;QAgBa,UAAK,GAAO,EAAE,CAAC;KAI3B;IAFG,sBAAI,sCAAO;;;;QAAX,cAAgB,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,EAAE;;;OAAA;IACnE,sBAAI,sCAAO;;;;QAAX,cAAgB,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,EAAE;;;OAAA;;gBAnBtE,SAAS,SAAC;oBACP,QAAQ,EAAE,UAAU;oBACpB,QAAQ,EAAE,+bAWT;iBACJ;;;wBAEI,KAAK;uBACL,KAAK;;IAGV,wBAAC;CApBD;;;;;;ACHA;IA2CA;KA8CkC;;gBA9CjC,QAAQ,SAAC;oBACR,OAAO,EAAE;wBACP,UAAU;wBACV,gBAAgB;wBAChB,cAAc;wBACd,aAAa;wBACb,cAAc;wBACd,qBAAqB;wBACrB,cAAc;wBACd,oBAAoB;wBACpB,eAAe;wBACf,qBAAqB;wBACrB,aAAa;wBACb,iBAAiB;wBACjB,cAAc;wBACd,gBAAgB;wBAChB,mBAAmB;wBACnB,eAAe;wBACf,gBAAgB;wBAChB,kBAAkB;wBAClB,iBAAiB;wBACjB,aAAa;wBACb,cAAc;wBACd,aAAa;wBACb,aAAa;wBACb,mBAAmB;wBACnB,kBAAkB;wBAClB,oBAAoB;wBACpB,wBAAwB;wBACxB,cAAc;wBACd,eAAe;wBACf,eAAe;wBACf,gBAAgB;wBAChB,eAAe;wBACf,oBAAoB;wBACpB,iBAAiB;wBACjB,aAAa;wBACb,cAAc;wBACd,aAAa;wBACb,gBAAgB;wBAChB,gBAAgB;wBAChB,aAAa;wBACb,YAAY;wBACZ,eAAe;qBAChB;iBACF;;IACgC,yBAAC;CA9ClC;;;;;;AC3CA;IAYA;KAkB4B;;gBAlB3B,QAAQ,SAAC;oBACR,YAAY,EAAE,CAAC,cAAc;wBAC3B,gBAAgB;wBAChB,qBAAqB;wBACrB,cAAc;wBACd,aAAa;wBACb,iBAAiB;wBACjB,iBAAiB,CAAC;oBACpB,OAAO,EAAE;wBAEP,YAAY;wBACZ,mBAAmB;wBACnB,kBAAkB;qBACnB;oBACD,OAAO,EAAE,CAAC,cAAc,CAAC;oBACzB,SAAS,EAAC,EAAE;oBACZ,OAAO,EAAE,CAAC,sBAAsB,CAAC;iBAClC;;IAC0B,kBAAC;CAlB5B;;;;;;;;;;;;;;"}
