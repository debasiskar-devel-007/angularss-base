{"version":3,"file":"testimonial.js.map","sources":["ng://testimonial/lib/testimonial.service.ts","ng://testimonial/lib/testimonial.component.ts","ng://testimonial/lib/Components/addedit/addedit.component.ts","ng://testimonial/lib/Modules/material-module.ts","ng://testimonial/lib/testimonial.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpClientModule } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, catchError, tap } from 'rxjs/operators';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TestimonialService {\r\n  public lengthis;\r\n  public percentageis;\r\n  public inprogress;\r\n  public progress: any = [];\r\n  public uploadtype;\r\n  public uploaderror: any = '';\r\n  public accesstoken: any = this.cookieService.get('jwtToken');;\r\n  public fileservername: any = [];\r\n  public serverUrl: any = '';\r\n  public addendpointUrl: any;\r\n  public updateendpointUrl: any;\r\n  public deletesingle_endpointUrl: any;\r\n  public updatestatus_single_endpointUrl: any;\r\n  public deletemultiple_endpointUrl: any;\r\n  public updatestatus_multiple_endpointUrl: any;\r\n  public getdata_endpointUrl: any = 'datalist';\r\n\r\n  constructor(private _http: HttpClient, private _authHttp: HttpClient,private cookieService : CookieService) { }\r\n\r\n  isTokenExpired() {\r\n    // const helper = new JwtHelperService();\r\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\r\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\r\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\r\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\r\n    // console.log('id_token isExpired:',isIdTokenExpired)\r\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\r\n  }\r\n\r\n  addData(endpoint: any, requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  UpdateData(endpoint: any, requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  getData(endpoint: any, requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  deleteSingleData(endpoint: any, requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  deleteMultipleData(endpoint: any, requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  UpdateStatusForSingleData(endpoint: any, requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  UpdateStatusForMultipleData(endpoint: any, requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + endpoint + 'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  CustomRequest(endpoint: any, requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input, Inject } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'lib-testimonial',\r\n  templateUrl: 'testimonial.component.html',\r\n  styleUrls: ['testimonial.component.css']\r\n})\r\nexport class TestimonialComponent implements OnInit {\r\n\r\n  // ==============================================declaration============================================\r\n  public testimonialListConfig: any;\r\n  public loader: boolean = true;\r\n  // =====================================================================================================\r\n\r\n\r\n\r\n\r\n  // ================================================Input For Lib Listing================================\r\n  @Input()\r\n  set config(receivedData: any) {\r\n   \r\n    this.testimonialListConfig = {\r\n      apiUrl: receivedData.apiBaseUrl,\r\n      listEndPoint: receivedData.listEndPoint,\r\n      datasource: receivedData.datasource,\r\n      tableName: receivedData.tableName,\r\n      listArray_skip: [\"_id\", \"userId\", \"created_at\", \"id\", \"updated_at\",\"image\"],\r\n      listArray_modify_header: { \"name\": \"Customer/User Name\", \"email\": \"Customer/User Email\", \"description\": \"Testimonial\", \"priority\": \"Priority\", \"status\": \"Status\" },\r\n      admintablenameTableName: \"admin\",\r\n      statusarr: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }],\r\n      updateurl: receivedData.updateEndpoint,\r\n      editUrl: receivedData.editUrl,\r\n      jwtToken: receivedData.jwtToken,\r\n      deleteEndPoint: receivedData.deleteEndPoint,\r\n      view: receivedData.view,\r\n      search_settings:{\r\n        textsearch: [{ label: \"customer name...\", field: 'name' },{ label: \"customer email...\", field: 'email' }],\r\n        selectsearch: [{ label: 'Search By Status', field: 'status', values: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }] }],\r\n      },\r\n       /*Showing Image in the Modal*/\r\n       pendingmodelapplicationarray_detail_datatype: [{\r\n        key: \"image\",\r\n        value: 'image',\r\n        fileurl: 'https://s3.us-east-2.amazonaws.com/crmfiles.influxhostserver/testimonial/'             // Image path \r\n      }],\r\n    }\r\n    this.loader = false;\r\n  }\r\n  // ====================================================================================================\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\r\n\r\n","import { Component, OnInit, Input, Inject } from '@angular/core';\r\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms'\r\nimport { TestimonialService } from '../../testimonial.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nexport interface DialogData {\r\n  msg: string;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'lib-addedit',\r\n  templateUrl: './addedit.component.html',\r\n  styleUrls: ['./addedit.component.css']\r\n})\r\nexport class AddeditComponent implements OnInit {\r\n\r\n\r\n  /**ckeditor start here*/\r\n  public Editor = ClassicEditor;  //for ckeditor\r\n  editorConfig = {\r\n    placeholder: 'Write testimonial...',\r\n  };\r\n  public model = {\r\n    editorData: ''\r\n  };\r\n  /**ckeditor end here*/\r\n\r\n\r\n  //  ========================================Declaration Section======================================\r\n  buttonText = \"SUBMIT\";\r\n  testimonialForm: FormGroup;\r\n  public loader: boolean = false;\r\n  configData;\r\n  successMessage: string = \"Submitted Successfully\";\r\n  dialogRef: any;\r\n  imageConfigData:any;\r\n  ErrCode:boolean = false;\r\n  flag: boolean;\r\n  img_var: any;\r\n  header_name: any;\r\n  image_name: any;\r\n  image_type: any;\r\n  // ==================================================================================================\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder, private testiService: TestimonialService,\r\n    private router: Router, public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    this.loader = false;\r\n    this.generateForm();\r\n    // --------------------------------checking the cases------------------------ \r\n    switch (this.configData.action) {\r\n      case 'add':\r\n        /* Button text */\r\n        this.buttonText = \"SUBMIT\";\r\n        this.flag = false;\r\n        this.header_name = \"Add Testimonial\";\r\n        break;\r\n      case 'edit':\r\n        /* Button text */\r\n        this.buttonText = \"UPDATE\";\r\n        this.successMessage = \"One row updated\";\r\n        this.setDefaultValue(this.configData.defaultData);\r\n        this.header_name = \"EDIT\";\r\n        this.flag = true;\r\n        break;\r\n    }\r\n    // --------------------------------------------------------------------------\r\n\r\n  }\r\n\r\n  @Input()\r\n  set config(getConfig: any) {\r\n    this.configData = getConfig;\r\n  }\r\n\r\n  @Input()\r\n  set imageUpload(getConfig: any) {\r\n    this.imageConfigData = getConfig;\r\n  }\r\n\r\n  // =====================================Form Validation/generation===================================\r\n  generateForm() {\r\n    this.testimonialForm = this.formBuilder.group({\r\n      name: ['', [Validators.required]],\r\n      email: ['', [Validators.required,Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/\r\n      )]],\r\n      testimonial: ['', [Validators.required]],\r\n      priority: ['', Validators.required],\r\n      status: [true,],\r\n      testimonial_img : ['',],\r\n      userId: [this.configData.userData.id, null]\r\n    })\r\n    \r\n  }\r\n  // =================================================================================================\r\n\r\n\r\n\r\n  // ==========================================SUBMIT=================================================\r\n\r\n\r\n  onSubmit() {\r\n    // Testimonial File Upload Works \r\n    if (this.imageConfigData.files) {\r\n            \r\n      if (this.imageConfigData.files.length > 1) { this.ErrCode = true; return; }\r\n      this.testimonialForm.value.testimonial_img =\r\n        {\r\n          \"basepath\": this.imageConfigData.files[0].upload.data.basepath + '/' + this.imageConfigData.path + '/',\r\n          \"image\": this.imageConfigData.files[0].upload.data.data.fileservername,\r\n          \"name\": this.imageConfigData.files[0].name,\r\n          \"type\": this.imageConfigData.files[0].type\r\n        };\r\n    } else {\r\n      this.testimonialForm.value.testimonial_img = false;\r\n    }\r\n\r\n\r\n     this.testimonialForm.controls['testimonial'].markAsTouched();\r\n    this.loader = true;\r\n    /* stop here if form is invalid */\r\n    if (this.testimonialForm.invalid) {\r\n      return;\r\n    } else {\r\n      if (this.testimonialForm.value.status) {\r\n        this.testimonialForm.value.status = parseInt(\"1\");\r\n      } else {\r\n        this.testimonialForm.value.status = parseInt(\"0\");;\r\n      }\r\n\r\n      /* start process to submited data */\r\n      let postData: any = {\r\n        source: this.configData.source,\r\n        data: Object.assign(this.testimonialForm.value, this.configData.condition)\r\n      };\r\n      this.testiService.addData(this.configData.endpoint, postData).subscribe((response: any) => {\r\n        if (response.status == \"success\") {\r\n          this.openDialog(this.successMessage);\r\n          setTimeout(() => {\r\n            this.dialogRef.close();\r\n          }, 2000);\r\n          this.router.navigate([this.configData.callBack]);\r\n        } else {\r\n          alert(\"Some error occurred. Please try angain.\");\r\n        }\r\n      }, (error) => {\r\n        alert(\"Some error occurred. Please try angain.\");\r\n      });\r\n    }\r\n  }\r\n  // =================================================================================================\r\n\r\n\r\n\r\n\r\n  // ================================================Default value======================================\r\n  setDefaultValue(defaultValue) {\r\n    this.testimonialForm.patchValue({\r\n      name: defaultValue.name,\r\n      email: defaultValue.email,\r\n      testimonial: defaultValue.testimonial,\r\n      priority: defaultValue.priority,\r\n      status: defaultValue.status,\r\n      userId: null,\r\n      testimonial_img: defaultValue.testimonial_img\r\n    });\r\n    this.img_var = defaultValue.testimonial_img.basepath + defaultValue.testimonial_img.image;\r\n    this.image_name = defaultValue.testimonial_img.name;\r\n    this.image_type = defaultValue.testimonial_img.type\r\n  }\r\n  // ==================================================================================================\r\n\r\n\r\n  // =========================================MODAL functions==========================================\r\n  openDialog(x: any): void {\r\n    this.dialogRef = this.dialog.open(Modal, {\r\n      width: '250px',\r\n      data: { msg: x }\r\n    });\r\n\r\n    this.dialogRef.afterClosed().subscribe(result => {\r\n\r\n    });\r\n  }\r\n  // =====================================================================================================\r\n\r\n\r\n  inputBlur(val: any) {\r\n    this.testimonialForm.controls[val].markAsUntouched();\r\n  }\r\n// ==========================================Clear MAT tag===================================\r\n  clear_image() {\r\n    this.flag = false;\r\n  }\r\n  // ========================================================================================\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ============================================MODAL COMPONENT===========================================\r\n@Component({\r\n  selector: 'app-modal',\r\n  templateUrl: 'modal.html',\r\n})\r\nexport class Modal {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<Modal>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n// ======================================================================================================\r\n","import {NgModule} from '@angular/core';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\n\r\n//import { MatFileUploadModule } from 'angular-material-fileupload';\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n    //MatFileUploadModule\r\n  ]\r\n})\r\nexport class DemoMaterialModule {}\r\n\r\n\r\n/**  Copyright 2019 Google Inc. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license */","import { NgModule } from '@angular/core';\r\nimport { TestimonialComponent } from './testimonial.component';\r\nimport { AddeditComponent , Modal } from './Components/addedit/addedit.component';\r\nimport { DemoMaterialModule } from './Modules/material-module';\r\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { ListingModule } from 'listing-angular7';\r\nimport { FileUploadModule } from 'file-upload';\r\n\r\n@NgModule({\r\n  declarations: [TestimonialComponent, AddeditComponent ,Modal],\r\n  imports: [\r\n    DemoMaterialModule,\r\n    CKEditorModule,\r\n    HttpClientModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    BrowserModule,\r\n    ListingModule,\r\n    FileUploadModule\r\n  ],\r\n  exports: [TestimonialComponent,AddeditComponent] ,\r\n  entryComponents:[Modal ]\r\n})\r\nexport class TestimonialModule { }\r\n"],"names":[],"mappings":"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"}
