{"version":3,"sources":["ng://testimonial-lib-influxiq/lib/testimonial.service.ts","ng://testimonial-lib-influxiq/lib/testimonial.component.ts","ng://testimonial-lib-influxiq/lib/Components/addedit/addedit.component.ts","ng://testimonial-lib-influxiq/lib/Modules/material-module.ts","ng://testimonial-lib-influxiq/lib/testimonial.module.ts"],"names":["TestimonialService","prototype","isTokenExpired","addData","endpoint","requestdata","httpOptions","headers","HttpHeaders","Content-Type","Authorization","this","accesstoken","_http","post","serverUrl","JSON","stringify","pipe","map","res","UpdateData","getData","deleteSingleData","deleteMultipleData","UpdateStatusForSingleData","UpdateStatusForMultipleData","CustomRequest","Injectable","args","providedIn","HttpClient","CookieService","_authHttp","cookieService","progress","uploaderror","get","fileservername","getdata_endpointUrl","TestimonialComponent","Object","defineProperty","receivedData","testimonialListConfig","apiUrl","apiBaseUrl","listEndPoint","datasource","tableName","listArray_skip","listArray_modify_header","name copy","email","description html","priority","status","admintablenameTableName","statusarr","val","name","updateurl","updateEndpoint","editUrl","jwtToken","deleteEndPoint","view","search_settings","textsearch","label","field","selectsearch","values","pendingmodelapplicationarray_detail_datatype","key","value","fileurl","detail_header","loader","ngOnInit","Component","selector","template","Input","AddeditComponent","generateForm","configData","action","buttonText","flag","header_name","successMessage","setDefaultValue","defaultData","getConfig","imageConfigData","testimonialForm","formBuilder","group","Validators","required","pattern","description","testimonial_img","video_url","video_name","video_desc","userId","userData","id","onSubmit","_this","files","length","ErrCode","basepath","upload","data","path","image","type","controls","markAsTouched","invalid","parseInt","postData","source","assign","condition","testiService","subscribe","response","openDialog","setTimeout","dialogRef","close","router","navigate","callBack","alert","error","defaultValue","patchValue","img_var","image_name","image_type","x","dialog","open","Modal","width","msg","afterClosed","result","preview_video","PreviewComponent","height","youtube_suffix","inputBlur","markAsUntouched","clear_image","FormBuilder","Router","MatDialog","DomSanitizer","sanitizer","Editor","ClassicEditor","editorConfig","placeholder","model","editorData","editorconfig","extraAllowedContent","onNoClick","MatDialogRef","Inject","MAT_DIALOG_DATA","safeSrc","bypassSecurityTrustResourceUrl","DemoMaterialModule","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","TestimonialModule","declarations","imports","CKEditorModule","HttpClientModule","RouterModule","FormsModule","ReactiveFormsModule","CommonModule","BrowserModule","ListingModule","FileUploadModule","entryComponents"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpClientModule } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { CookieService } from 'ngx-cookie-service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TestimonialService {\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress: any = [];\n  public uploadtype;\n  public uploaderror: any = '';\n  public accesstoken: any = this.cookieService.get('jwtToken');;\n  public fileservername: any = [];\n  public serverUrl: any = '';\n  public addendpointUrl: any;\n  public updateendpointUrl: any;\n  public deletesingle_endpointUrl: any;\n  public updatestatus_single_endpointUrl: any;\n  public deletemultiple_endpointUrl: any;\n  public updatestatus_multiple_endpointUrl: any;\n  public getdata_endpointUrl: any = 'datalist';\n\n  constructor(private _http: HttpClient, private _authHttp: HttpClient,private cookieService : CookieService) { }\n\n  isTokenExpired() {\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n  }\n\n  addData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  getData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteSingleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteMultipleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForSingleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForMultipleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint + 'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  CustomRequest(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n}\n","import { Component, OnInit, Input, Inject } from '@angular/core';\n\n\n@Component({\n  selector: 'lib-testimonial',\n  templateUrl: 'testimonial.component.html',\n  styleUrls: ['testimonial.component.css']\n})\nexport class TestimonialComponent implements OnInit {\n\n  // ==============================================declaration============================================\n  public testimonialListConfig: any;\n  public loader: boolean = true;\n  // =====================================================================================================\n\n\n\n\n  // ================================================Input For Lib Listing================================\n  @Input()\n  set config(receivedData: any) {\n   \n    this.testimonialListConfig = {\n      apiUrl: receivedData.apiBaseUrl,\n      listEndPoint: receivedData.listEndPoint,\n      datasource: receivedData.datasource,\n      tableName: receivedData.tableName,\n      listArray_skip: [\"_id\", \"userId\", \"created_at\", \"id\", \"updated_at\",\"image\",\"description\",\"name\"],\n      listArray_modify_header: { \"name copy\": \"Customer/User Name\", \"email\": \"Customer/User Email\", \"description html\": \"Testimonial\", \"priority\": \"Priority\", \"status\": \"Status\" },\n      admintablenameTableName: \"admin\",\n      statusarr: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }],\n      updateurl: receivedData.updateEndpoint,\n      editUrl: receivedData.editUrl,\n      jwtToken: receivedData.jwtToken,\n      deleteEndPoint: receivedData.deleteEndPoint,\n      view: receivedData.view,\n      search_settings:{\n        textsearch: [{ label: \"customer name...\", field: 'name' },{ label: \"customer email...\", field: 'email' }],\n        selectsearch: [{ label: 'Search By Status', field: 'status', values: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }] }],\n      },\n       /*Showing Image in the Modal*/\n       pendingmodelapplicationarray_detail_datatype: [{\n        key: \"image\",\n        value: 'image',\n        fileurl: 'https://s3.us-east-2.amazonaws.com/crmfiles.influxhostserver/testimonial/'             // Image path \n      }],\n      detail_header:['_id']\n    }\n    this.loader = false;\n  }\n  // ====================================================================================================\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms'\nimport { TestimonialService } from '../../testimonial.service';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n\nexport interface DialogData {\n  msg: string;\n}\nexport interface PreviewDialog{\n  msg:any; \n}\n\n@Component({\n  selector: 'lib-addedit',\n  templateUrl: './addedit.component.html',\n  styleUrls: ['./addedit.component.css']\n})\nexport class AddeditComponent implements OnInit {\n\n\n  /**ckeditor start here*/\n  public Editor = ClassicEditor;  //for ckeditor\n  editorConfig = {\n    placeholder: 'Write testimonial...',\n  };\n  public model = {\n    editorData: ''\n  };\n  /**ckeditor end here*/\n\n\n  //  ========================================Declaration Section======================================\n  public buttonText = \"SUBMIT\"; \n  public testimonialForm: FormGroup;\n  public loader: boolean = false;\n  public configData;\n  public successMessage: string = \"Submitted Successfully\";\n  public dialogRef: any;\n  public imageConfigData:any;\n  public ErrCode:boolean = false;\n  public flag: boolean;\n  public img_var: any;\n  public header_name: any;\n  public image_name: any;\n  public image_type: any;\n  public youtube_suffix:any=\"https://www.youtube.com/embed/\";  \n  public editorconfig : any = {};\n  // ==================================================================================================\n\n\n  constructor(private formBuilder: FormBuilder, private testiService: TestimonialService,\n    private router: Router, public dialog: MatDialog , private sanitizer: DomSanitizer) {\n      this.editorconfig.extraAllowedContent = '*[class](*),span;ul;li;table;td;style;*[id];*(*);*{*}';\n     }\n\n  ngOnInit() {\n    this.loader = false;\n    this.generateForm();\n    // --------------------------------checking the cases------------------------ \n    switch (this.configData.action) {\n      case 'add':\n        /* Button text */\n        this.buttonText = \"SUBMIT\";\n        this.flag = false;\n        this.header_name = \"Add Testimonial\";\n        break;\n      case 'edit':\n        /* Button text */\n        this.buttonText = \"UPDATE\";\n        this.successMessage = \"One row updated\";\n        this.setDefaultValue(this.configData.defaultData);\n        this.header_name = \"EDIT\";\n        this.flag = true;\n        break;\n    }\n    // --------------------------------------------------------------------------\n\n  }\n\n  @Input()\n  set config(getConfig: any) {\n    this.configData = getConfig;\n  }\n\n  @Input()\n  set imageUpload(getConfig: any) {\n    this.imageConfigData = getConfig;\n  }\n\n  // =====================================Form Validation/generation===================================\n  generateForm() {\n    this.testimonialForm = this.formBuilder.group({\n      name: ['', [Validators.required]],\n      email: ['', [Validators.required,Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/\n      )]],\n      description: ['', [Validators.required]],\n      priority: ['', Validators.required],\n      status: [true,],\n      testimonial_img : ['',],\n      video_url:[],\n      video_name:[],\n      video_desc:[],\n      userId: [this.configData.userData.id, null]\n    })\n    \n  }\n  // =================================================================================================\n\n\n\n  // ==========================================SUBMIT=================================================\n\n\n  onSubmit() {\n    // Testimonial File Upload Works \n    if (this.imageConfigData.files) {\n            \n      if (this.imageConfigData.files.length > 1) { this.ErrCode = true; return; }\n      this.testimonialForm.value.testimonial_img =\n        {\n          \"basepath\": this.imageConfigData.files[0].upload.data.basepath + '/' + this.imageConfigData.path + '/',\n          \"image\": this.imageConfigData.files[0].upload.data.data.fileservername,\n          \"name\": this.imageConfigData.files[0].name,\n          \"type\": this.imageConfigData.files[0].type\n        };\n    } else {\n      this.testimonialForm.value.testimonial_img = false;\n    }\n\n\n     this.testimonialForm.controls['description'].markAsTouched();\n    this.loader = true;\n    /* stop here if form is invalid */\n    if (this.testimonialForm.invalid) {\n      return;\n    } else {\n      if (this.testimonialForm.value.status) {\n        this.testimonialForm.value.status = parseInt(\"1\");\n      } else {\n        this.testimonialForm.value.status = parseInt(\"0\");;\n      }\n\n      /* start process to submited data */\n      let postData: any = {\n        source: this.configData.source,\n        data: Object.assign(this.testimonialForm.value, this.configData.condition)\n      };\n      this.testiService.addData(this.configData.endpoint, postData).subscribe((response: any) => {\n        if (response.status == \"success\") {\n          this.openDialog(this.successMessage);\n          setTimeout(() => {\n            this.dialogRef.close();\n          }, 2000);\n          this.router.navigate([this.configData.callBack]);\n        } else {\n          alert(\"Some error occurred. Please try angain.\");\n        }\n      }, (error) => {\n        alert(\"Some error occurred. Please try angain.\");\n      });\n    }\n  }\n  // =================================================================================================\n\n\n\n\n  // ================================================Default value======================================\n  setDefaultValue(defaultValue) {\n    this.testimonialForm.patchValue({\n      name: defaultValue.name,\n      email: defaultValue.email,\n      description: defaultValue.description,\n      priority: defaultValue.priority,\n      status: defaultValue.status,\n      userId: null,\n      testimonial_img: defaultValue.testimonial_img,\n      video_url:defaultValue.video_url,\n      video_name:defaultValue.video_name,\n      video_desc:defaultValue.video_desc\n    });\n    this.img_var = defaultValue.testimonial_img.basepath + defaultValue.testimonial_img.image;\n    this.image_name = defaultValue.testimonial_img.name;\n    this.image_type = defaultValue.testimonial_img.type\n  }\n  // ==================================================================================================\n\n\n  // =========================================MODAL functions==========================================\n  openDialog(x: any): void {\n    this.dialogRef = this.dialog.open(Modal, {\n      width: '250px',\n      data: { msg: x }\n    });\n\n    this.dialogRef.afterClosed().subscribe(result => {\n\n    });\n  }\n  // =====================================================================================================\n\n\n\n//  =====================preview video================\n  preview_video()\n  {    \n    this.dialogRef = this.dialog.open(PreviewComponent, {\n      width: '850px',\n      height:'500px',\n      \n      data: { msg: this.youtube_suffix +this.testimonialForm.value.video_url }\n    });\n\n    this.dialogRef.afterClosed().subscribe(result => {\n\n    });\n  }\n// ===================================================\n\n\n\n\n  inputBlur(val: any) {\n    this.testimonialForm.controls[val].markAsUntouched();\n  }\n\n\n\n\n\n// ==========================================Clear MAT tag===================================\n  clear_image() {\n    this.flag = false;\n  }\n  // ========================================================================================\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n// ============================================MODAL COMPONENT===========================================\n@Component({\n  selector: 'app-modal',\n  templateUrl: 'modal.html',\n})\nexport class Modal {\n\n  constructor(\n    public dialogRef: MatDialogRef<Modal>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n// ======================================================================================================\n\n\n\n// preview cmponent\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: 'preview.html',\n})\nexport class PreviewComponent {\n  safeSrc: SafeResourceUrl;\n  constructor(\n    public dialogRef: MatDialogRef<PreviewComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: PreviewDialog , private sanitizer: DomSanitizer) {    \n      this.safeSrc =  this.sanitizer.bypassSecurityTrustResourceUrl(data.msg);\n    }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n    \n}","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n//import { MatFileUploadModule } from 'angular-material-fileupload';\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n    //MatFileUploadModule\n  ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license */","import { NgModule } from '@angular/core';\nimport { TestimonialComponent } from './testimonial.component';\nimport { AddeditComponent , Modal, PreviewComponent } from './Components/addedit/addedit.component';\nimport { DemoMaterialModule } from './Modules/material-module';\nimport { CKEditorModule } from 'ngx-ckeditor';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ListingModule } from 'listing-angular7';\nimport { FileUploadModule } from 'file-upload-lib-influxiq';\n\n@NgModule({\n  declarations: [TestimonialComponent, AddeditComponent ,Modal, PreviewComponent],\n  imports: [\n    DemoMaterialModule,\n    CKEditorModule,\n    HttpClientModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    BrowserModule,\n    ListingModule,\n    FileUploadModule\n  ],\n  exports: [TestimonialComponent,AddeditComponent] ,\n  entryComponents:[Modal, PreviewComponent ]\n  \n})\nexport class TestimonialModule {\n\n  \n }\n"]}