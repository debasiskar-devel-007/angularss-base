{"version":3,"sources":["ng://category-management/lib/category-management.service.ts","ng://category-management/lib/category-management.component.ts","ng://category-management/lib/Module/material-module.ts","ng://category-management/lib/component/list-category/list-category.component.ts","ng://category-management/lib/component/add-edit-category/add-edit-category.component.ts","ng://category-management/lib/category-management.module.ts"],"names":["HttpHeaders","Content-Type","CategoryManagementService","prototype","isTokenExpired","addData","endpoint","requestdata","httpOptions","headers","access-token","this","accesstoken","_http","post","serverUrl","JSON","stringify","pipe","map","res","UpdateData","getData","deleteSingleData","deleteMultipleData","UpdateStatusForSingleData","UpdateStatusForMultipleData","CustomRequest","Injectable","args","providedIn","HttpClient","_authHttp","progress","uploaderror","fileservername","getdata_endpointUrl","CategoryManagementComponent","Object","defineProperty","receivedCategoryData","categoryData","ngOnInit","Component","selector","template","Input","console","log","MaterialModule","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","ListCategoryComponent","categoryListingConfig","apiUrl","apiBaseUrl","listEndPoint","datasource","tableName","listArray_skip","listArray_modify_header","title","description","priority","roll","status","admintablenameTableName","updateurl","updateEndpoint","editUrl","jwtToken","deleteEndPoint","loader","addNewCategory","router","navigate","Router","httpRequest","AddEditCategoryComponent","getConfig","configData","generateForm","action","buttonText","setDefaultValue","defaultData","categoryForm","formBuilder","group","Validators","required","maxLength","max","role","userId","userData","id","categoryFormSubmit","_this","invalid","value","postData","source","data","assign","condition","subscribe","response","resetCategoryForm","callBack","alert","error","reset","defaultValue","setValue","FormBuilder","ActivatedRoute","usersData","CategoryManagementModule","declarations","imports","BrowserModule","FormsModule","ReactiveFormsModule","HttpClientModule","ListingModule"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpClientModule } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\n\n/* set common header */\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CategoryManagementService {\n\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress: any = [];\n  public uploadtype;\n  public uploaderror: any = '';\n  public accesstoken: any = '';\n  public fileservername: any = [];\n  public serverUrl: any = '';\n  public addendpointUrl: any;\n  public updateendpointUrl: any;\n  public deletesingle_endpointUrl: any;\n  public updatestatus_single_endpointUrl: any;\n  public deletemultiple_endpointUrl: any;\n  public updatestatus_multiple_endpointUrl: any;\n  public getdata_endpointUrl: any = 'datalist';\n\n  constructor(private _http: HttpClient, private _authHttp: HttpClient) { }\n\n  isTokenExpired() {\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n  }\n\n  addData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  getData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteSingleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteMultipleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForSingleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForMultipleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint + 'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  CustomRequest(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n}\n","import { Component, OnInit, ViewChild, Input, Inject,\n        ComponentFactoryResolver, ComponentRef, Directive,\n        ViewContainerRef } from '@angular/core';\n\n@Component({\n  selector: 'lib-category-management',\n  templateUrl: 'category-management.component.html',\n  styleUrls: [ './style.css' ]\n})\n\nexport class CategoryManagementComponent implements OnInit {\n\n  public categoryData: any;\n  @Input()\n  set config(receivedCategoryData: any) {\n    this.categoryData = receivedCategoryData;\n  }\n\n  constructor() { \n    console.log('Step 3 =================================== Component LIB');\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class MaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license */","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { CategoryManagementService } from '../../category-management.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'lib-list-category',\n  templateUrl: './list-category.component.html',\n  styleUrls: ['./list-category.component.css']\n})\n\nexport class ListCategoryComponent implements OnInit {\n\n  public categoryData: any;\n  public categoryListingConfig: any;\n  public loader: boolean = true;\n\n  @Input()\n  set config(receivedCategoryData: any) {\n    this.categoryListingConfig = {\n      apiUrl: receivedCategoryData.apiBaseUrl,\n      listEndPoint: \"datalist\",\n      datasource: receivedCategoryData.datasource,\n      tableName: receivedCategoryData.tableName,\n      listArray_skip: [ \"_id\", \"userId\", \"created_at\", \"id\", \"updated_at\" ],\n      listArray_modify_header: { \"title\": \"Title\", \"description\": \"Description\", \"priority\": \"Priority\", \"roll\": \"Roll\", \"status\": \"Status\" },\n      admintablenameTableName: \"admin\",\n      updateurl: receivedCategoryData.updateEndpoint,\n      editUrl: receivedCategoryData.editUrl,\n      jwtToken: receivedCategoryData.jwtToken,\n      deleteEndPoint: receivedCategoryData.deleteEndPoint\n    }\n    this.loader = false; \n  }\n\n  constructor(private httpRequest: CategoryManagementService, private router: Router) {\n    console.log('Step 4 =================================== Component LIB');\n  }\n\n  ngOnInit() {\n  }\n\n  addNewCategory() {\n    this.router.navigate(['/category-management/create-new']);\n  }\n\n}\n","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { CategoryManagementService } from '../../category-management.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'lib-add-edit-category',\n  templateUrl: './add-edit-category.component.html',\n  styleUrls: ['./add-edit-category.component.css']\n})\n\nexport class AddEditCategoryComponent implements OnInit {\n\n  public categoryForm: FormGroup;\n  public usersData: any = null;\n  public buttonText: any = 'Create';\n  public configData: any;\n  public loader: boolean = false;\n  \n  @Input()\n  set config(getConfig: any) {\n    this.configData = getConfig;\n  }\n\n  constructor(private formBuilder: FormBuilder, private httpRequest: CategoryManagementService,\n    private ActivatedRoute: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.loader = false;\n    \n    /* Generate form */\n    this.generateForm();\n\n    /* Checking */\n    switch(this.configData.action) {\n      case 'add':\n        /* Button text */\n        this.buttonText = \"Create\";\n        break;\n      case 'edit':\n        /* Button text */\n        this.buttonText = \"Update\";\n        this.setDefaultValue(this.configData.defaultData);\n        break;\n    }\n  }\n\n  /* Create form controll */\n  generateForm() {\n    /* Category create form validation */\n    this.categoryForm = this.formBuilder.group({\n      title:        [ null, [ Validators.required, Validators.maxLength(150) ] ],\n      description:  [ null, [ Validators.required, Validators.maxLength(1000) ] ],\n      priority:     [ 1, [ Validators.required, Validators.max(100) ] ],\n      role:         [ 'public', null ],\n      status:       [ false, null ],\n      userId:       [ this.configData.userData.id, null ]\n    });\n  }\n\n  /* Category form submit */\n  categoryFormSubmit() {\n    this.loader = true;\n\n    /* stop here if form is invalid */\n    if (this.categoryForm.invalid) {\n      return;\n    } else {\n      if(this.categoryForm.value.status) {\n        this.categoryForm.value.status = 1;\n      } else {\n        this.categoryForm.value.status = 0;\n      }\n\n      /* start process to submited data */\n      let postData: any = { \n                            source: this.configData.source,\n                            data: Object.assign(this.categoryForm.value, this.configData.condition)\n                          };\n      this.httpRequest.addData(this.configData.endpoint, postData).subscribe((response: any) => {\n        if(response.status == \"success\") {\n          this.resetCategoryForm();\n\n          this.router.navigate([this.configData.callBack]);\n        } else {\n          alert(\"Some error occord. Please try angain.\");\n        }\n      }, (error) => {\n        alert(\"Some error occord. Please try angain.\");\n      });\n    }\n  }\n\n  /* reset Category form */\n  resetCategoryForm() {\n    this.categoryForm.reset();\n  }\n\n  /* Set default category form value */\n  setDefaultValue(defaultValue) {\n    this.categoryForm.setValue({  \n      title:        defaultValue.title,\n      description:  defaultValue.description,\n      priority:     defaultValue.priority,\n      role:         defaultValue.role,\n      status:       defaultValue.status,\n      userId:       null\n    });\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from './Module/material-module';\nimport { CategoryManagementComponent } from './category-management.component';\nimport { ListCategoryComponent } from './component/list-category/list-category.component';\nimport { AddEditCategoryComponent } from './component/add-edit-category/add-edit-category.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ListingModule } from \"listing-angular7\";\n\n@NgModule({\n  declarations: [\n    CategoryManagementComponent,\n    ListCategoryComponent,\n    AddEditCategoryComponent\n  ],\n  imports: [\n    BrowserModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    ListingModule,\n  ],\n  exports: [\n    CategoryManagementComponent,\n    AddEditCategoryComponent\n  ]\n})\nexport class CategoryManagementModule { }\n"]}