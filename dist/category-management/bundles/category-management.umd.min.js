!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("rxjs/operators"),require("@angular/platform-browser"),require("@angular/cdk/a11y"),require("@angular/cdk/drag-drop"),require("@angular/cdk/portal"),require("@angular/cdk/scrolling"),require("@angular/cdk/stepper"),require("@angular/cdk/table"),require("@angular/cdk/tree"),require("@angular/material/autocomplete"),require("@angular/material/badge"),require("@angular/material/bottom-sheet"),require("@angular/material/button"),require("@angular/material/button-toggle"),require("@angular/material/card"),require("@angular/material/checkbox"),require("@angular/material/chips"),require("@angular/material/stepper"),require("@angular/material/datepicker"),require("@angular/material/dialog"),require("@angular/material/divider"),require("@angular/material/expansion"),require("@angular/material/grid-list"),require("@angular/material/icon"),require("@angular/material/input"),require("@angular/material/list"),require("@angular/material/menu"),require("@angular/material/core"),require("@angular/material/paginator"),require("@angular/material/progress-bar"),require("@angular/material/progress-spinner"),require("@angular/material/radio"),require("@angular/material/select"),require("@angular/material/sidenav"),require("@angular/material/slider"),require("@angular/material/slide-toggle"),require("@angular/material/snack-bar"),require("@angular/material/sort"),require("@angular/material/table"),require("@angular/material/tabs"),require("@angular/material/toolbar"),require("@angular/material/tooltip"),require("@angular/material/tree"),require("@angular/core"),require("@angular/forms"),require("@angular/router"),require("@angular/common/http"),require("listing-angular7")):"function"==typeof define&&define.amd?define("category-management",["exports","rxjs/operators","@angular/platform-browser","@angular/cdk/a11y","@angular/cdk/drag-drop","@angular/cdk/portal","@angular/cdk/scrolling","@angular/cdk/stepper","@angular/cdk/table","@angular/cdk/tree","@angular/material/autocomplete","@angular/material/badge","@angular/material/bottom-sheet","@angular/material/button","@angular/material/button-toggle","@angular/material/card","@angular/material/checkbox","@angular/material/chips","@angular/material/stepper","@angular/material/datepicker","@angular/material/dialog","@angular/material/divider","@angular/material/expansion","@angular/material/grid-list","@angular/material/icon","@angular/material/input","@angular/material/list","@angular/material/menu","@angular/material/core","@angular/material/paginator","@angular/material/progress-bar","@angular/material/progress-spinner","@angular/material/radio","@angular/material/select","@angular/material/sidenav","@angular/material/slider","@angular/material/slide-toggle","@angular/material/snack-bar","@angular/material/sort","@angular/material/table","@angular/material/tabs","@angular/material/toolbar","@angular/material/tooltip","@angular/material/tree","@angular/core","@angular/forms","@angular/router","@angular/common/http","listing-angular7"],t):t(e["category-management"]={},e.rxjs.operators,e.ng.platformBrowser,e.ng.cdk.a11y,e.ng.cdk["drag-drop"],e.ng.cdk.portal,e.ng.cdk.scrolling,e.ng.cdk.stepper,e.ng.cdk.table,e.ng.cdk.tree,e.ng.material.autocomplete,e.ng.material.badge,e.ng.material["bottom-sheet"],e.ng.material.button,e.ng.material["button-toggle"],e.ng.material.card,e.ng.material.checkbox,e.ng.material.chips,e.ng.material.stepper,e.ng.material.datepicker,e.ng.material.dialog,e.ng.material.divider,e.ng.material.expansion,e.ng.material["grid-list"],e.ng.material.icon,e.ng.material.input,e.ng.material.list,e.ng.material.menu,e.ng.material.core,e.ng.material.paginator,e.ng.material["progress-bar"],e.ng.material["progress-spinner"],e.ng.material.radio,e.ng.material.select,e.ng.material.sidenav,e.ng.material.slider,e.ng.material["slide-toggle"],e.ng.material["snack-bar"],e.ng.material.sort,e.ng.material.table,e.ng.material.tabs,e.ng.material.toolbar,e.ng.material.tooltip,e.ng.material.tree,e.ng.core,e.ng.forms,e.ng.router,e.ng.common.http,e.listingAngular7)}(this,function(e,a,t,r,o,n,i,l,s,u,c,g,p,d,m,f,h,y,b,M,k,x,q,v,C,F,D,T,I,S,j,w,H,_,N,P,L,U,O,B,R,A,V,J,E,z,G,K,Q){"use strict";new K.HttpHeaders({"Content-Type":"application/json"});var W=(X.prototype.isTokenExpired=function(){},X.prototype.addData=function(e,t){var r={headers:new K.HttpHeaders({"Content-Type":"application/json","access-token":this.accesstoken})};return this._http.post(this.serverUrl+e,JSON.stringify(t),r).pipe(a.map(function(e){return e}))},X.prototype.UpdateData=function(e,t){var r={headers:new K.HttpHeaders({"Content-Type":"application/json","access-token":this.accesstoken})};return this._http.post(this.serverUrl+e,JSON.stringify(t),r).pipe(a.map(function(e){return e}))},X.prototype.getData=function(e,t){var r={headers:new K.HttpHeaders({"Content-Type":"application/json","access-token":this.accesstoken})};return this._http.post(this.serverUrl+e,JSON.stringify(t),r).pipe(a.map(function(e){return e}))},X.prototype.deleteSingleData=function(e,t){var r={headers:new K.HttpHeaders({"Content-Type":"application/json","access-token":this.accesstoken})};return this._http.post(this.serverUrl+e,JSON.stringify(t),r).pipe(a.map(function(e){return e}))},X.prototype.deleteMultipleData=function(e,t){var r={headers:new K.HttpHeaders({"Content-Type":"application/json","access-token":this.accesstoken})};return this._http.post(this.serverUrl+e,JSON.stringify(t),r).pipe(a.map(function(e){return e}))},X.prototype.UpdateStatusForSingleData=function(e,t){var r={headers:new K.HttpHeaders({"Content-Type":"application/json","access-token":this.accesstoken})};return this._http.post(this.serverUrl+e,JSON.stringify(t),r).pipe(a.map(function(e){return e}))},X.prototype.UpdateStatusForMultipleData=function(e,t){var r={headers:new K.HttpHeaders({"Content-Type":"application/json","access-token":this.accesstoken})};return this._http.post(this.serverUrl+e+"many",JSON.stringify(t),r).pipe(a.map(function(e){return e}))},X.prototype.CustomRequest=function(e,t){var r={headers:new K.HttpHeaders({"Content-Type":"application/json","access-token":this.accesstoken})};return this._http.post(this.serverUrl+e,JSON.stringify(t),r).pipe(a.map(function(e){return e}))},X.decorators=[{type:E.Injectable,args:[{providedIn:"root"}]}],X.ctorParameters=function(){return[{type:K.HttpClient},{type:K.HttpClient}]},X.ngInjectableDef=E.defineInjectable({factory:function(){return new X(E.inject(K.HttpClient),E.inject(K.HttpClient))},token:X,providedIn:"root"}),X);function X(e,t){this._http=e,this._authHttp=t,this.progress=[],this.uploaderror="",this.accesstoken="",this.fileservername=[],this.serverUrl="",this.getdata_endpointUrl="datalist"}var Y=(Object.defineProperty(Z.prototype,"config",{set:function(e){this.categoryData=e},enumerable:!0,configurable:!0}),Z.prototype.ngOnInit=function(){},Z.decorators=[{type:E.Component,args:[{selector:"lib-category-management",template:'<lib-list-category [config]="categoryData"></lib-list-category>',styles:[""]}]}],Z.ctorParameters=function(){return[]},Z.propDecorators={config:[{type:E.Input}]},Z);function Z(){console.log("Step 3 =================================== Component LIB")}var $=(ee.decorators=[{type:E.NgModule,args:[{exports:[r.A11yModule,l.CdkStepperModule,s.CdkTableModule,u.CdkTreeModule,o.DragDropModule,c.MatAutocompleteModule,g.MatBadgeModule,p.MatBottomSheetModule,d.MatButtonModule,m.MatButtonToggleModule,f.MatCardModule,h.MatCheckboxModule,y.MatChipsModule,b.MatStepperModule,M.MatDatepickerModule,k.MatDialogModule,x.MatDividerModule,q.MatExpansionModule,v.MatGridListModule,C.MatIconModule,F.MatInputModule,D.MatListModule,T.MatMenuModule,I.MatNativeDateModule,S.MatPaginatorModule,j.MatProgressBarModule,w.MatProgressSpinnerModule,H.MatRadioModule,I.MatRippleModule,_.MatSelectModule,N.MatSidenavModule,P.MatSliderModule,L.MatSlideToggleModule,U.MatSnackBarModule,O.MatSortModule,B.MatTableModule,R.MatTabsModule,A.MatToolbarModule,V.MatTooltipModule,J.MatTreeModule,n.PortalModule,i.ScrollingModule]}]}],ee);function ee(){}var te=(Object.defineProperty(re.prototype,"config",{set:function(e){this.categoryListingConfig={apiUrl:e.apiBaseUrl,listEndPoint:"datalist",datasource:e.datasource,tableName:e.tableName,listArray_skip:["_id","userId","created_at","id","updated_at"],listArray_modify_header:{title:"Title",description:"Description",priority:"Priority",roll:"Roll",status:"Status"},admintablenameTableName:"admin",updateurl:e.updateEndpoint,editUrl:e.editUrl,jwtToken:e.jwtToken,deleteEndPoint:e.deleteEndPoint},this.loader=!1},enumerable:!0,configurable:!0}),re.prototype.ngOnInit=function(){},re.prototype.addNewCategory=function(){this.router.navigate(["/category-management/create-new"])},re.decorators=[{type:E.Component,args:[{selector:"lib-list-category",template:'<mat-card *ngIf="loader==true">\n  <mat-spinner class="spinner"></mat-spinner>\n</mat-card>\n\n<mat-card *ngIf="loader==false">\n  <lib-listing class="formfilterdiv" *ngIf="categoryListingConfig.datasource !=null && categoryListingConfig.datasource.length > 0"\n      [datasource]="categoryListingConfig.datasource"\n      [skip]="categoryListingConfig.listArray_skip"\n      [modify_header_array]="categoryListingConfig.listArray_modify_header"\n      [sourcedata]="categoryListingConfig.tableName"\n      [statusarr]="categoryListingConfig.statusArray"\n      [jwttoken]="categoryListingConfig.jwtToken" \n      [apiurl]="categoryListingConfig.apiUrl"\n      [editroute]="categoryListingConfig.editUrl"\n      [deleteendpoint]="categoryListingConfig.deleteEndPoint">\n  </lib-listing>\n\n  <h2 *ngIf="categoryListingConfig.datasource.length == 0">No record found.</h2>\n</mat-card>\n',styles:["h2{margin:auto}mat-card{background-color:#e3e2e1}.example-card{max-width:400px}.example-header-image{background-image:url(https://material.angular.io/assets/img/examples/shiba1.jpg);background-size:cover;border:2px solid #e0dada}.add-new-button{float:right}.spinner{text-align:center;margin:auto;height:100px}mat-toolbar{width:100%}"]}]}],re.ctorParameters=function(){return[{type:W},{type:G.Router}]},re.propDecorators={config:[{type:E.Input}]},re);function re(e,t){this.httpRequest=e,this.router=t,this.loader=!0,console.log("Step 4 =================================== Component LIB")}var ae=(Object.defineProperty(oe.prototype,"config",{set:function(e){this.configData=e},enumerable:!0,configurable:!0}),oe.prototype.ngOnInit=function(){switch(this.loader=!1,this.generateForm(),this.configData.action){case"add":this.buttonText="Create";break;case"edit":this.buttonText="Update",this.setDefaultValue(this.configData.defaultData)}},oe.prototype.generateForm=function(){this.categoryForm=this.formBuilder.group({title:[null,[z.Validators.required,z.Validators.maxLength(150)]],description:[null,[z.Validators.required,z.Validators.maxLength(1e3)]],priority:[1,[z.Validators.required,z.Validators.max(100)]],role:["public",null],status:[!1,null],userId:[this.configData.userData.id,null]})},oe.prototype.categoryFormSubmit=function(){var t=this;if(this.loader=!0,!this.categoryForm.invalid){this.categoryForm.value.status?this.categoryForm.value.status=1:this.categoryForm.value.status=0;var e={source:this.configData.source,data:Object.assign(this.categoryForm.value,this.configData.condition)};this.httpRequest.addData(this.configData.endpoint,e).subscribe(function(e){"success"==e.status?(t.resetCategoryForm(),t.router.navigate([t.configData.callBack])):alert("Some error occord. Please try angain.")},function(e){alert("Some error occord. Please try angain.")})}},oe.prototype.resetCategoryForm=function(){this.categoryForm.reset()},oe.prototype.setDefaultValue=function(e){this.categoryForm.setValue({title:e.title,description:e.description,priority:e.priority,role:e.role,status:e.status,userId:null})},oe.decorators=[{type:E.Component,args:[{selector:"lib-add-edit-category",template:'<mat-card *ngIf="loader==true">\n  <mat-spinner class="spinner"></mat-spinner>\n</mat-card>\n\n<mat-card *ngIf="loader==false">\n  <form class="example-form" [formGroup]="categoryForm" autocomplete="off">\n    <div class="example-container">\n      <mat-form-field>\n        <input matInput formControlName="title" placeholder="Title">\n\n        \x3c!-- error message start --\x3e\n        <mat-error *ngIf="categoryForm.controls[\'title\']?.touched && categoryForm.controls[\'title\'].errors && categoryForm.controls[\'title\'].errors.required">Title is required.</mat-error>\n        <mat-error *ngIf="categoryForm.controls[\'title\']?.touched && categoryForm.controls[\'title\'].errors && categoryForm.controls[\'title\'].errors.maxlength">Title is not more then 150 charector.</mat-error>\n        \x3c!-- error message end --\x3e\n      </mat-form-field>\n    \n      <mat-form-field hintLabel="Max 1000 characters">\n        <textarea matInput formControlName="description" #description maxlength="1000" placeholder="Description"></textarea>\n        <mat-hint align="end">{{ description.value?.length || 0 }}/1000</mat-hint>\n\n        \x3c!-- error message start --\x3e\n        <mat-error *ngIf="categoryForm.controls[\'description\']?.touched && categoryForm.controls[\'description\'].errors && categoryForm.controls[\'description\'].errors.required">Title is required.</mat-error>\n        <mat-error *ngIf="categoryForm.controls[\'description\']?.touched && categoryForm.controls[\'description\'].errors && categoryForm.controls[\'description\'].errors.maxlength">Title is not more then 1000 charector.</mat-error>\n        \x3c!-- error message end --\x3e\n      </mat-form-field>\n    \n      <mat-form-field>\n        <input matInput formControlName="priority" placeholder="Priority" type="number">\n\n        \x3c!-- error message start --\x3e\n        <mat-error *ngIf="categoryForm.controls[\'priority\']?.touched && categoryForm.controls[\'priority\'].errors && categoryForm.controls[\'priority\'].errors.required">Title is required.</mat-error>\n        <mat-error *ngIf="categoryForm.controls[\'priority\']?.touched && categoryForm.controls[\'priority\'].errors && categoryForm.controls[\'priority\'].errors.max">Title is not more then 100.</mat-error>\n        \x3c!-- error message start --\x3e\n      </mat-form-field>\n    \n      <mat-form-field>\n        <mat-select formControlName="role" placeholder="Role">\n          <mat-option value="public">Public</mat-option>\n          <mat-option value="private">Private</mat-option>\n        </mat-select>\n        <mat-hint align="end">Here\'s the dropdown arrow ^</mat-hint>\n      </mat-form-field>\n\n      <mat-checkbox formControlName="status">Active</mat-checkbox>\n    </div>\n  </form>\n\n  <br />\n  \n  <button (click)="categoryFormSubmit();" mat-button [disabled]="!categoryForm.valid">{{ buttonText }}</button>\n  <button mat-button (click)="resetCategoryForm();">Reset</button>\n</mat-card>',styles:[".example-container{display:flex;flex-direction:column}.example-container>*{width:100%}mat-card{background-color:#e3e2e1}.example-card{max-width:400px}.example-header-image{background-image:url(https://material.angular.io/assets/img/examples/shiba1.jpg);background-size:cover;border:2px solid #e0dada}.spinner{text-align:center;margin:auto}.input-field{background-color:#fff;width:100%}"]}]}],oe.ctorParameters=function(){return[{type:z.FormBuilder},{type:W},{type:G.ActivatedRoute},{type:G.Router}]},oe.propDecorators={config:[{type:E.Input}]},oe);function oe(e,t,r,a){this.formBuilder=e,this.httpRequest=t,this.ActivatedRoute=r,this.router=a,this.usersData=null,this.buttonText="Create",this.loader=!1}var ne=(ie.decorators=[{type:E.NgModule,args:[{declarations:[Y,te,ae],imports:[t.BrowserModule,$,z.FormsModule,z.ReactiveFormsModule,K.HttpClientModule,Q.ListingModule],exports:[Y,ae]}]}],ie);function ie(){}e.CategoryManagementService=W,e.CategoryManagementComponent=Y,e.CategoryManagementModule=ne,e.ɵc=$,e.ɵb=ae,e.ɵa=te,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=category-management.umd.min.js.map