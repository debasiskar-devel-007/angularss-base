{"version":3,"sources":["ng://login-lib-influxiq/lib/login.service.ts","node_modules/tslib/tslib.es6.js","ng://login-lib-influxiq/lib/api.service.ts","ng://login-lib-influxiq/lib/login.component.ts","ng://login-lib-influxiq/lib/material-module.ts","ng://login-lib-influxiq/lib/sign-up/sign-up.component.ts","ng://login-lib-influxiq/lib/forget-password/forget-password.component.ts","ng://login-lib-influxiq/lib/reset-password/reset-password.component.ts","ng://login-lib-influxiq/lib/prevroute.ts","ng://login-lib-influxiq/lib/login.module.ts"],"names":["LoginService","Injectable","args","providedIn","__values","o","m","Symbol","iterator","i","call","next","length","value","done","__read","n","r","e","ar","push","error","ApiService","prototype","setServerUrl","this","subjectForServerUrl","clearServerUrl","getServerUrl","asObservable","setaddEndpoint","subjectForaddEndpointUrl","clearaddEndpoint","getaddEndpoint","setuploadEndpont","subjectForuploadEndpointUrl","clearuploadEndpoint","getuploadEndpoint","setupdateEndpoint","subjectForupdateEndpointUrl","clearupdateEndpoint","getupdateEndpoint","setdeletesingleEndpoint","subjectFordeletesingleEndpointUrl","cleardeletesingleEndpoint","getdeletesingleEndpoint","setupdatestatus_singleEndpoint","subjectForupdatestatusSingleEndpointUrl","clearupdatestatus_singleEndpoint","getupdatestatus_singleEndpoint","setgetdataEndpoint","subjectForGetdataEndpointUrl","cleargetdataEndpoint","getdataEndpoint","isTokenExpired","addData","requestdata","console","log","httpOptions","headers","HttpHeaders","Content-Type","Authorization","accesstoken","_http","post","serverUrl","addendpointUrl","JSON","stringify","pipe","map","res","uploadFile","access-token","uploadEndpointUrl","UpdateData","updateendpointUrl","getData","getdata_endpointUrl","addLogin","Object","assign","secret","cookieService","get","forgetPassword","deleteSingleData","deletesingle_endpointUrl","deleteMultipleData","UpdateStatusForSingleData","updatestatus_single_endpointUrl","UpdateStatusForMultipleData","CustomRequest","endpoint","jwtTokenGet","HttpClient","CookieService","_authHttp","_this","progress","uploaderror","fileservername","Subject","subscriptionServer","subscribe","message","result","subscriptionaddEndpoint","subscriptionuploadEndpoint","subscriptionupdateEndpoint","subscriptiondeletesingleEndpoint","subscriptionupdatestatusSingleEndpoint","subscriptionGetdataEndpoint","defineProperty","LoginComponent","forLoaderVal","loader","fromTitleVal","fromTitleValue","logoVal","logoValue","buttonNameVal","buttonNameValue","fullUrlVal","serverURL","endpointVal","endpointValue","v","cookieSetValue","routeingUrlval","signUpRouteingUrlValue","forgetRouteingUrlValue","routerStatusval","routerStatusValue","defaultUrlVal","defaultUrlValue","ngOnInit","apiService","setTimeout","loginFormSubmit","x","loginForm","controls","markAsTouched","valid","data","response","status","router","url","set","token","key1","item","type","_c","tslib_1.__values","entries","cookies","_d","_e","keys","values","_f","_g","_h","key","navigateByUrl","routerNav","redirect_url","formDirective","resetForm","msg","inputUntouched","val","markAsUntouched","forgetpassword","path","signup","customFunction","link","Component","selector","template","FormBuilder","Router","ActivatedRoute","ViewChild","FormGroupDirective","Input","fb","http","route","project_name","previousUrl","undefined","currentUrl","events","event","NavigationEnd","params","group","email","Validators","compose","required","pattern","password","DemoMaterialModule","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","SignUpComponent","formTitleVal","formTitleValue","serverUrlVal","serverUrlValue","modaleLogoVal","typeval","typevalue","addEndpointVal","addEndpointValue","loginRouteingUrlValue","signUpFormSubmit","signUpForm","allData","source","dialog","open","successModalComponent","width","Url","login","MatDialog","firstname","lastname","onNoClick","dialogRef","close","MatDialogRef","Inject","MAT_DIALOG_DATA","ForgetPasswordComponent","domainUrlVal","domainUrlValue","addEndpointval","forgetPasswordSubmit","forgetPasswordForm","domainUrl","openSnackBar","snackBar","openFromComponent","snackBarComponent","duration","durationInSeconds","MatSnackBar","ResetPasswordComponent","fromTitleNameVal","fromTitleNameValue","machpassword","passwordkye","confirmpasswordkye","passwordInput","confirmpasswordInput","setErrors","notEquivalent","resetPasswordSubmit","resetPasswordForm","accesscode","snackBarResetComponent","confirmPassword","validator","prevroute","getPreviousUrl","LoginModule","declarations","imports","FormsModule","ReactiveFormsModule","BrowserAnimationsModule","CommonModule","HttpClientModule","providers","bootstrap","schemas","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","entryComponents"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor() { }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { ElementRef, EventEmitter, Injectable, Input, ViewChild } from '@angular/core';\nimport { switchMap, map, takeWhile } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n// for setting observables to get serverurl and endpointurl from app\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport{CookieService} from 'ngx-cookie-service';\n\n\n@Injectable({   \n  providedIn: 'root'\n})\nexport class ApiService {\n\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress: any = [];\n  public uploadtype;\n  public uploaderror: any = '';\n  public accesstoken:any=this.cookieService.get('jwtToken');\n  // public accesstoken:any='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIiLCJleHAiOjE1NjgzNTgyMTAsImlhdCI6MTU2ODI3MTgxMH0.2ltvxVKwfX1uwMOwQ2Zzgp1K2jiaCDj051Wyho0Iw-Q';\n  fileservername: any = [];\n  serverUrl: any;\n  addendpointUrl: any;\n  uploadEndpointUrl:any; //souresh\n  updateendpointUrl: any;\n  deletesingle_endpointUrl: any;\n  updatestatus_single_endpointUrl: any;\n  deletemultiple_endpointUrl: any;\n  updatestatus_multiple_endpointUrl: any;\n  getdata_endpointUrl: any;\n  private subjectForServerUrl = new Subject<any>();\n  private subjectForaddEndpointUrl = new Subject<any>();\n  private subjectForuploadEndpointUrl = new Subject<any>();  //added by souresh\n  private subjectForupdateEndpointUrl = new Subject<any>();\n  private subjectFordeletesingleEndpointUrl = new Subject<any>();\n  private subjectForupdatestatusSingleEndpointUrl = new Subject<any>();\n  private subjectForGetdataEndpointUrl = new Subject<any>();\n  public subscriptionServer: Subscription;\n  public subscriptionaddEndpoint: Subscription;\n  public subscriptionuploadEndpoint: Subscription;   //added by souresh\n  public subscriptionupdateEndpoint: Subscription;\n  public subscriptiondeletesingleEndpoint: Subscription;\n  public subscriptionupdatestatusSingleEndpoint: Subscription;\n  public subscriptionGetdataEndpoint: Subscription;\n\n  constructor(private _http: HttpClient,\n    private _authHttp: HttpClient,private cookieService :CookieService) {\n    this.subscriptionServer = this.getServerUrl().subscribe(message => {\n     let result: any;\n      result = message;\n      if (result != null) {\n        this.serverUrl = result;\n      } else {\n        this.serverUrl = null;\n      }\n    });\n    this.subscriptionaddEndpoint = this.getaddEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.addendpointUrl = result;\n      } else {\n        this.addendpointUrl = null;\n      }\n    });\n    /*********added by souresh***********/\n    this.subscriptionuploadEndpoint=this.getuploadEndpoint().subscribe(message=>{\n      let result:any;\n      result=message;\n        if(result!=null){\n          this.uploadEndpointUrl = result;\n        } else{\n          this.uploadEndpointUrl = null;\n        }\n    })\n    /************souresh end here**************/\n    this.subscriptionupdateEndpoint = this.getupdateEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.updateendpointUrl = result;\n      } else {\n        this.updateendpointUrl = null;\n      }\n    });\n    this.subscriptiondeletesingleEndpoint = this.getdeletesingleEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.deletesingle_endpointUrl = result;\n      } else {\n        this.deletesingle_endpointUrl = null;\n      }\n    });\n    this.subscriptionupdatestatusSingleEndpoint = this.getupdatestatus_singleEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.updatestatus_single_endpointUrl = result;\n      } else {\n        this.updatestatus_single_endpointUrl = null;\n      }\n    });\n    this.subscriptionGetdataEndpoint = this.getdataEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.getdata_endpointUrl = result;\n      } else {\n        this.getdata_endpointUrl = null;\n      }\n    });\n\n    \n  }\n\n  setServerUrl(value: any) {\n    this.subjectForServerUrl.next(value);\n  }\n  public clearServerUrl() {\n    this.subjectForServerUrl.next(null);\n  }\n  public getServerUrl(): Observable<any> {\n    return this.subjectForServerUrl.asObservable();\n  }\n\n  setaddEndpoint(value: any) {\n    this.subjectForaddEndpointUrl.next(value);\n  }\n  public clearaddEndpoint() {\n    this.subjectForaddEndpointUrl.next(null);\n  }\n  public getaddEndpoint(): Observable<any> {\n    return this.subjectForaddEndpointUrl.asObservable();\n  }\n/*****added by souresh******/\n  setuploadEndpont(value:any){\n    this.subjectForuploadEndpointUrl.next(value);\n  }\n  public clearuploadEndpoint(){\n    this.subjectForuploadEndpointUrl.next(null);\n  }\n  public getuploadEndpoint(): Observable <any> {\n    return this.subjectForuploadEndpointUrl.asObservable();\n  }\n   /********souresh end here********/\n\n\n  setupdateEndpoint(value: any) {\n    this.subjectForupdateEndpointUrl.next(value);\n  }\n  public clearupdateEndpoint() {\n    this.subjectForupdateEndpointUrl.next(null);\n  }\n  public getupdateEndpoint(): Observable<any> {\n    return this.subjectForupdateEndpointUrl.asObservable();\n  }\n\n  setdeletesingleEndpoint(value: any) {\n    this.subjectFordeletesingleEndpointUrl.next(value);\n  }\n  public cleardeletesingleEndpoint() {\n    this.subjectFordeletesingleEndpointUrl.next(null);\n  }\n  public getdeletesingleEndpoint(): Observable<any> {\n    return this.subjectFordeletesingleEndpointUrl.asObservable();\n  }\n\n  setupdatestatus_singleEndpoint(value: any) {\n    this.subjectForupdatestatusSingleEndpointUrl.next(value);\n  }\n  public clearupdatestatus_singleEndpoint() {\n    this.subjectForupdatestatusSingleEndpointUrl.next(null);\n  }\n  public getupdatestatus_singleEndpoint(): Observable<any> {\n    return this.subjectForupdatestatusSingleEndpointUrl.asObservable();\n  }\n\n  setgetdataEndpoint(value: any) {\n    this.subjectForGetdataEndpointUrl.next(value);\n  }\n  public cleargetdataEndpoint() {\n    this.subjectForGetdataEndpointUrl.next(null);\n  }\n  public getdataEndpoint(): Observable<any> {\n    return this.subjectForGetdataEndpointUrl.asObservable();\n  }\n\n\n\n  isTokenExpired() {\n\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n  }\n\n  addData(requestdata: any) {\n    console.log('in adddata apiservice');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken          //hard code written access-token(temp)\n      })\n    };\n\n    // console.log('httpoptions',httpOptions,this.serverUrl,requestdata);\n    var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n  /*******added by souresh************/\n  uploadFile(requestdata:any){\n    const httpOptions={\n        headers: new HttpHeaders({\n          'Content-Type':'application/json',\n          'access-token':this.accesstoken          //hard code written access-token(temp)\n        })\n    };\n    var result=this._http.post(this.serverUrl + this.uploadEndpointUrl,JSON.stringify(requestdata),httpOptions).pipe(map(res=>res));\n    return result;\n  }\n  /*******souresh end here********/\n  UpdateData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken          //hard code written access-token(temp)\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.updateendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  getData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.getdata_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n/*************** Added by himadri start here ***************/ \n  addLogin(requestdata: any) {\n    console.log('in addLogin apiservice');\n    const returnedTarget = Object.assign(requestdata,{'secret':this.cookieService.get('secret')});\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n        // 'Authorization': this.accesstoken          //hard code written access-token(temp)\n      })\n    };\n\n    // console.log(this.serverUrl,requestdata);\n    var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n  /*************** Added by himadri end here ***************/ \n\n/*************** Added by himadri start here ***************/ \nforgetPassword(requestdata: any) {\n  console.log('in forgetPassword apiservice');\n  const httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n      // 'Authorization': this.accesstoken          //hard code written access-token(temp)\n    })\n  };\n\n  // console.log(this.serverUrl,requestdata);\n  var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n  return result;\n}\n/*************** Added by himadri end here ***************/ \n\n\n  deleteSingleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.deletesingle_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteMultipleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.deletesingle_endpointUrl+'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForSingleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.updatestatus_single_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForMultipleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.updatestatus_single_endpointUrl+'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n  CustomRequest(requestdata: any, endpoint:any ) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl +endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  jwtTokenGet() {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':'application/json'\n      })\n    };\n    var result = this._http.get(this.serverUrl +'gettemptoken').pipe(map(res => res));\n    return result;\n  }\n\n\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators, MinLengthValidator, FormGroupDirective } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\nimport { ApiService } from './api.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n\n\n\n@Component({\n  selector: 'lib-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  public message: any = '';\n  //   FormGroupDirective: It is a directive that binds an existing FormGroup to a DOM element.\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\n\n  public fromTitleValue: any = '';\n  public serverURL: any = '';\n  public signUpRouteingUrlValue: any = '';\n  public forgetRouteingUrlValue: any = '';\n  public routerStatusValue: any = '';\n  public endpointValue: any;\n  public logoValue: any = '';\n  public cookieSetValue: any = '';\n  public buttonNameValue: any = '';\n  public defaultUrlValue = '';\n  private loader: any = null;\n\n  @Input()\n  set forLoader(forLoaderVal: any) {\n    this.loader = (forLoaderVal) || '<no name set>';\n    this.loader = forLoaderVal;\n    // console.log('++++',this.loader)\n    console.log('++++-----',this.loader)\n  }\n\n  @Input()         // Set the project name\n  set fromTitle(fromTitleVal: any) {\n    this.fromTitleValue = (fromTitleVal) || '<no name set>';\n    this.fromTitleValue = fromTitleVal;\n\n  }\n  @Input()      // set the from logo\n  set logo(logoVal : any) {\n    this.logoValue = logoVal;\n  }\n@Input()\nset buttonName (buttonNameVal :any){\n  this.buttonNameValue = (buttonNameVal) || '<no name set>';\n  this.buttonNameValue = buttonNameVal\n}\n\n  @Input()        // setting the server url from project\n  set fullUrl(fullUrlVal: any) {\n    this.serverURL = (fullUrlVal) || '<no name set>';\n    this.serverURL = fullUrlVal;\n\n  }\n  @Input()\n\n  set endpoint(endpointVal: any) {\n    this.endpointValue = endpointVal;\n  }\n\n@Input()\n\npublic set cookieSet(v : any) {\n  this.cookieSetValue = v;\n}\n\n\n\n  @Input()          // setting the navigate By Sign Up Url from project\n  set signUpRouteingUrl(routeingUrlval: any) {\n    this.signUpRouteingUrlValue = (routeingUrlval) || '<no name set>';\n    this.signUpRouteingUrlValue = routeingUrlval;\n    // console.log(this.signUpRouteingUrlValue)\n  }\n\n\n  @Input()          // setting the navigate By Forget Password Url from project\n  set forgetRouteingUrl(routeingUrlval: any) {\n    this.forgetRouteingUrlValue = (routeingUrlval) || '<no name set>';\n    this.forgetRouteingUrlValue = routeingUrlval;\n    // console.log(this.forgetRouteingUrlValue)\n  }\n\n  @Input()          // setting the navigate By Forget Password Url from project\n  set routerStatus(routerStatusval: any) {\n    this.routerStatusValue = (routerStatusval) || '<no name set>';\n    this.routerStatusValue = routerStatusval;\n    console.log(this.routerStatusValue)\n  }\n\n  @Input()\n  set defaultLoginUrl(defaultUrlVal: any) {\n    this.defaultUrlValue = (defaultUrlVal) || '<no name set>';\n    this.defaultUrlValue = defaultUrlVal;\n    console.log(this.defaultUrlValue)\n  }\n \n\n\n\n\n  public loginForm: FormGroup;\n  public project_name: any = '';\n  public redirect_url:any = '';\n  private previousUrl: string = undefined;\n  private currentUrl: string = undefined;\n\n\n  constructor(public fb: FormBuilder,\n     public http: HttpClient,\n     public router: Router,\n     public apiService: ApiService,\n     public cookieService: CookieService,\n     public route: ActivatedRoute) {\n       \n      this.currentUrl = this.router.url;\n      router.events.subscribe(event => {\n        if (event instanceof NavigationEnd) {\n          this.previousUrl = this.currentUrl;\n          this.currentUrl = event.url;\n        };\n      });\n    // console.log(\"++++++++++++++++++++++++++++=________+++++ this.previousUrl\",this.previousUrl)\n    // console.log(\"++++++++++++++++++++++++++++=________+++++ this.currentUrl\",this.currentUrl)\n    this.route.params.subscribe(params=>{\n      // console.log('++++++',params['id']);\n      this.redirect_url = params['path'];\n      // if (params['id'] != '' || params['id'] != null) {\n      //   this.redirect_url = params['id'];\n      // }\n      // console.log('redirect_url',this.redirect_url)\n    });\n\n    this.loginForm = this.fb.group({\n      email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\n      password: ['', Validators.required]\n    })\n  }\n\n  ngOnInit() {\n    this.apiService.clearServerUrl();       // Clear the server url\n    setTimeout(() => {\n      this.apiService.setServerUrl(this.serverURL);       // set the server url \n    }, 50);\n    // console.log(this.serverURL);\n\n\n    this.apiService.clearaddEndpoint();       // clear the endpoint \n    setTimeout(() => {\n      this.apiService.setaddEndpoint(this.endpointValue);       // set the endpoint\n    }, 50);\n    // console.log(this.addEndpointData.endpoint);\n\n  }\n\n \n/********* Login Form Submit start here*********/ \n  loginFormSubmit() {\n    this.loader = 1;\n    console.log(this.loader)\n    let x: any;\n    // use for validation checking\n\n    for (x in this.loginForm.controls) {\n      this.loginForm.controls[x].markAsTouched();\n    }\n\n    if (this.loginForm.valid) {\n\n     \n      let data: any = this.loginForm.value;\n      this.apiService.addLogin(data).subscribe((response:any) => {\n\n        console.log(this.routerStatusValue)\n        if (response.status == \"success\") {\n         console.log(this.routerStatusValue.data, this.router.url,  this.defaultUrlValue)\n          // this.cookieService.set('user_details', JSON.stringify(response.item[0]));\n          this.cookieService.set('jwtToken', response.token);\n          if (this.router.url == this.defaultUrlValue) {\n            console.log(response,'response')\n            console.log(this.routerStatusValue.data, this.router.url,  this.defaultUrlValue, '1')\n            for (const key1 in this.routerStatusValue.data) {\n              if (response.item[0].type === this.routerStatusValue.data[key1].type) {\n                // console.log(this.routerStatusValue.data[key1].cookies,'cookies');\n                for( let  [keys, values] of Object.entries(this.routerStatusValue.data[key1].cookies)){\n                  for(let [key, value] of Object.entries(response.item[0])){\n                    if (values == key ) {\n                      console.log(key, '-------', value, '-------PP');\n                    console.log(values,'----+++---',keys,'----+++---PP');\n                    this.cookieService.set(keys , JSON.stringify(value));\n                    }\n                  }\n                }\n                // console.log(data, 'cookies')\n                // return;\n                // console.log(response.item[0].type, this.router.url,  this.routerStatusValue.data[key1].type)\n                setTimeout(() => {\n                  this.router.navigateByUrl('/' + this.routerStatusValue.data[key1].routerNav);\n                }, 1000);\n                // console.log(this.routerStatusValue.data[key1].routerNav)\n              }\n            }\n            \n          } else {\n            // this.loader = 0; \n            // console.log('++++++ redirect_url//',this.redirect_url);\n            this.router.navigateByUrl(this.redirect_url);\n        }\n        this.loader = 0;\n\n\n          // this is use for reset the from\n          this.formDirective.resetForm();\n          this.message = '';\n        } else {\n          // display error message on html\n          this.message = response.msg;\n        }\n      });\n    }\n\n  }\n\n\n  inputUntouched(val: any) {\n    this.loginForm.controls[val].markAsUntouched();\n  }\n\n  // This is use for navigate this component to forget component \n  forgetpassword() {\n    this.router.navigateByUrl('/' + this.forgetRouteingUrlValue.path);\n  }\n\n  // This is use for navigate this component to sign-Up component \n  signup() {\n    this.router.navigateByUrl('/' + this.signUpRouteingUrlValue.path);\n  }\n\n  customFunction(link: any) {\n    this.router.navigateByUrl('/'+ link);\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n Use of this source code is governed by an MIT-style license that\n can be found in the LICENSE file at http://angular.io/license */\n","import { Component, OnInit, Input, Inject, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormGroupDirective } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material';\nimport { ApiService } from '../api.service';\n\n\n\nexport interface DialogData {\n  value: string;\n  Url: any;\n}\n\n@Component({\n  selector: 'lib-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n  public value: any='';\n  public link: any='';\n  public Url: any='';\n  public message: any = '';\n\n  //   FormGroupDirective: It is a directive that binds an existing FormGroup to a DOM element.\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\n\n  public formTitleValue: any = '';\n  public serverUrlValue: any = '';\n  public forgetRouteingUrlValue: any = '';\n  public loginRouteingUrlValue: any = '';\n  public addEndpointValue: any = '';\n  public logoValue: any = '';\n  public typevalue: any = '';\n  public buttonNameValue: any = '';\n\n  @Input()         // Set the Form name\n  set formTitle(formTitleVal: any) {\n    this.formTitleValue = (formTitleVal) || '<no name set>';\n    this.formTitleValue = formTitleVal;\n    // console.log(this.formTitleValue);\n\n  }\n\n  @Input()\n  set buttonName (buttonNameVal :any){\n    this.buttonNameValue = (buttonNameVal) || '<no name set>';\n    this.buttonNameValue = buttonNameVal\n  }\n\n  @Input()        // setting the server url from project\n  set serverUrl(serverUrlVal: any) {\n    this.serverUrlValue = (serverUrlVal) || '<no name set>';\n    this.serverUrlValue = serverUrlVal;\n    // console.log(this.serverUrlValue);\n\n  }\n@Input()      // set the from logo\n\nset logo(logoVal : any) {\n  this.logoValue = logoVal;\n}\n\n@Input()      // set the from logo\n\nset modaleLogo(modaleLogoVal : any) {\n  this.link = modaleLogoVal;\n}\n\n@Input()\nset userType(typeval: any) {\n  this.typevalue = typeval;\n}\n\n\n  @Input()        // set the endpoint And source\n  public set addEndpoint(addEndpointVal: any) {\n    this.addEndpointValue = addEndpointVal;\n    console.log(this.addEndpointValue)\n  }\n\n\n  @Input()          // setting the navigate By Forget Password Url from project\n  set forgetRouteingUrl(routeingUrlval: any) {\n    this.forgetRouteingUrlValue = (routeingUrlval) || '<no name set>';\n    this.forgetRouteingUrlValue = routeingUrlval;\n    // console.log(this.forgetRouteingUrlValue);\n  }\n\n  @Input()          // setting the navigate By login Url from project\n  set loginRouteingUrl(routeingUrlval: any) {\n    this.loginRouteingUrlValue = (routeingUrlval) || '<no name set>';\n    this.loginRouteingUrlValue = routeingUrlval;\n    // console.log(this.loginRouteingUrlValue);\n  }\n\n\n\n  public signUpForm: FormGroup;\n\n  constructor(public fb: FormBuilder, public http: HttpClient, public router: Router, public dialog: MatDialog, public apiService: ApiService) {\n    this.signUpForm = this.fb.group({\n      email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\n      firstname: ['', Validators.required],\n      lastname: ['', Validators.required],\n      password: ['', Validators.required]\n    })\n\n\n    this.http.get(this.serverUrlValue + 'gettemptoken').subscribe(res=>{\n      console.log(res);\n    });\n  }\n\n  ngOnInit() {\n    this.apiService.clearServerUrl();       //  Clear the server url\n    setTimeout(() => {\n      this.apiService.setServerUrl(this.serverUrlValue);        //  set the server url\n    }, 50);\n    // console.log(this.serverURL);\n\n\n    this.apiService.clearaddEndpoint();       //  Clear the endpoint\n    setTimeout(() => {\n      this.apiService.setaddEndpoint(this.addEndpointValue.endpoint);   //  set the endpoint\n    }, 50);\n\n    \n\n  }\n\n\n/********* Sign Up Form Submit start here*********/ \n  signUpFormSubmit() {\n    this.http.get(this.serverUrlValue + 'gettemptoken').subscribe(res=>{\n      console.log(res);\n    });\n    console.log('jhgj')\n    this.apiService.jwtTokenGet().subscribe((response) => {});\n    // use for validation checking\n    for (let x in this.signUpForm.controls) {\n      this.signUpForm.controls[x].markAsTouched();\n    }\n    if (this.signUpForm.valid) {\n      // let link: any = this.fullUrlValue;\n      let allData: any = this.signUpForm.value;\n      allData.type = this.typevalue;\n      console.log(allData);\n\n      let data: any = {\n        'data': allData,\n        \"source\": this.addEndpointValue.source\n      };\n      console.log(data);\n      this.apiService.addData(data).subscribe((response) => {\n        let result: any = {};\n        result = response;\n        console.log(result);\n\n        if (result.status == \"success\") {\n          const dialogRef = this.dialog.open(successModalComponent, {\n            width: '250px',\n            data: {value: result.status, Url: this.link}\n          });\n          // this.router.navigateByUrl('/' + )     // navigate to dashboard url \n\n\n          // this is use for reset the from\n          this.formDirective.resetForm();\n        } else {\n          // display error message on html\n          this.message = result.msg;\n        }\n      })\n\n    }\n  }\n\n\n/********* Sign Up Form Submit end here*********/ \n\n  // This is use for navigate this component to forget component \n  forgetpassword() {\n    this.router.navigateByUrl('/' + this.forgetRouteingUrlValue.path);\n  }\n\n\n  // This is use for navigate this component to forget component \n  login() {\n    this.router.navigateByUrl('/' + this.loginRouteingUrlValue.path);\n  }\n\n  inputUntouched(val: any) {\n    this.signUpForm.controls[val].markAsUntouched();\n  }\n  customFunction(link: any) {\n    this.router.navigateByUrl('/'+ link);\n  }\n}\n\n\n@Component({\n  selector: 'successModal',\n  templateUrl: '../successModal.html',\n\n})\nexport class successModalComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<successModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n      console.log(data)\n     }\n\n    \n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n\n\n","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormGroupDirective } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../api.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'lib-forget-password',\n  templateUrl: './forget-password.component.html',\n  styleUrls: ['./forget-password.component.css']\n})\nexport class ForgetPasswordComponent implements OnInit {\n  public message: any = '';\n  public buttonNameValue: any = '';\n\n  //   FormGroupDirective: It is a directive that binds an existing FormGroup to a DOM element.\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\n\n  public forgetPasswordForm: FormGroup;\n  public formTitleValue: any = '';          // This is From title\n  public serverUrlValue: any = '';          //  This is Server url\n  public signUpRouteingUrlValue: any = '';  // setting the navigate By Sign Up Url from project\n  public loginRouteingUrlValue: any = '';  // setting the navigate By login Url from project\n  private domainUrlValue: any = '';          // This is reset password url\n  public addEndpointValue: any = '';        // This is endpoint url\n  public logoValue: any = '';               // This is from logo url\n  public durationInSeconds = 5;             // This is SnackBar set time\n\n\n  @Input()\nset buttonName (buttonNameVal :any){\n  this.buttonNameValue = (buttonNameVal) || '<no name set>';\n  this.buttonNameValue = buttonNameVal\n}\n\n  @Input()         // Set the project email Doman URL\n  set domainUrl(domainUrlVal: any) {\n    this.domainUrlValue = (domainUrlVal) || '<no name set>';\n    this.domainUrlValue = domainUrlVal;\n    // console.log(this.domanUrlValue);\n  }\n  @Input()         // Set the project name\n  set formTitle(formTitleVal: any) {\n    this.formTitleValue = (formTitleVal) || '<no name set>';\n    this.formTitleValue = formTitleVal;\n\n  }\n\n  @Input()        // setting the server url from project\n  set serverUrl(serverUrlVal: any) {\n    this.serverUrlValue = (serverUrlVal) || '<no name set>';\n    this.serverUrlValue = serverUrlVal;\n\n  }\n\n  @Input()      // set the from logo\n\n  set logo(logoVal: any) {\n    this.logoValue = logoVal;\n  }\n\n  @Input()          // set the endpoint and source\n\n  set addEndpoint(addEndpointval: any) {\n    this.addEndpointValue = addEndpointval;\n  }\n\n\n  @Input()          // setting the navigate By Sign Up Url from project\n  set signUpRouteingUrl(routeingUrlval: any) {\n    this.signUpRouteingUrlValue = (routeingUrlval) || '<no name set>';\n    this.signUpRouteingUrlValue = routeingUrlval;\n    // console.log(this.signUpRouteingUrlValue)\n  }\n\n  @Input()          // setting the navigate By Sign Up Url from project\n  set loginRouteingUrl(routeingUrlval: any) {\n    this.loginRouteingUrlValue = (routeingUrlval) || '<no name set>';\n    this.loginRouteingUrlValue = routeingUrlval;\n    // console.log(this.loginRouteingUrlValue)\n  }\n\n  constructor(\n    public fb: FormBuilder,\n    public router: Router,\n    public apiService: ApiService,\n    private snackBar: MatSnackBar\n  ) {\n\n\n\n    this.forgetPasswordForm = this.fb.group({\n      email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\n\n    });\n\n\n\n\n  }\n\n  ngOnInit() {\n    this.apiService.clearServerUrl();       //  Clear the server url\n    setTimeout(() => {\n      this.apiService.setServerUrl(this.serverUrlValue);        //  set the server url\n    }, 50);\n    // console.log(this.serverURL);\n\n\n    this.apiService.clearaddEndpoint();       //  Clear the endpoint\n    setTimeout(() => {\n      this.apiService.setaddEndpoint(this.addEndpointValue.endpoint);   //  set the endpoint\n    }, 50);\n  }\n\n  /********* Forget password  Form Submit start here*********/\n  forgetPasswordSubmit() {\n    let x: any;\n\n    //  This for-loop use for from blank or properly validated checking  \n    for (x in this.forgetPasswordForm.controls) {\n      this.forgetPasswordForm.controls[x].markAsTouched();\n    }\n    if (this.forgetPasswordForm.valid) {    //    validation checking\n\n      // this.openSnackBar();              // open snack-bar function\n\n      let link: any = this.serverUrlValue;\n      let data: any = this.forgetPasswordForm.value;\n\n      data.domainUrl = this.domainUrlValue;\n\n      this.apiService.forgetPassword(data).subscribe((response) => {\n        // console.log(response);\n        let result: any = {};\n        result = response;\n\n        if (result.status == \"success\") {\n          // this.openSnackBar();             // open snack-bar function\n          // this is use for reset the from\n          this.formDirective.resetForm();\n          this.message = '';         // clear the from\n        } else {\n\n          // display error message on html\n          this.message = result.msg;      // show the error message\n\n        }\n      });\n    }\n  }\n\n  /********* Forget password  Form Submit end here*********/\n\n\n  /********* openSnackBar function open start here*********/\n\n\n  openSnackBar() {\n    this.snackBar.openFromComponent(snackBarComponent, {\n      duration: this.durationInSeconds * 1000,\n    });\n  }\n /********* openSnackBar function open end here*********/\n\n\n  // This is use for navigate this component to sign-Up component \n  signup() {\n    this.router.navigateByUrl('/' + this.signUpRouteingUrlValue);\n  }\n\n    // This is use for navigate this component to login component \n    login() {\n      this.router.navigateByUrl('/' + this.loginRouteingUrlValue);\n    }\n\n  inputUntouched(val: any) {\n    this.forgetPasswordForm.controls[val].markAsUntouched();\n  }\n\n\n  customFunction(link: any) {\n    this.router.navigateByUrl('/'+ link);\n  }\n\n\n}\n\n\n@Component({\n  selector: 'snack-bar-modale',\n  templateUrl: 'forget-passwordModale.html',\n  styles: [`\n    .example {\n      color: aliceblue;\n      background-color: yellowgreen;\n    }\n  `],\n})\nexport class snackBarComponent { }\n","import { Component, OnInit, Input, ViewChild, Inject } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup, FormGroupDirective } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../api.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'lib-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\n\n\n\nexport class ResetPasswordComponent implements OnInit {\n  //   FormGroupDirective: It is a directive that binds an existing FormGroup to a DOM element.\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\n  public resetPasswordForm: FormGroup;\n  public fromTitleNameValue: any = '';\n  public serverUrlValue: any = '';\n  public message: any = '';\n  public addEndpointValue: any = '';\n\n  public logoValue: any = '';\n  // public signUpRouteingUrlValue: any = '';\n  public durationInSeconds = 5;             // This is SnackBar set time\n\n\n  @Input()         // Set the Form name\n  set fromTitleName(fromTitleNameVal: any) {\n    this.fromTitleNameValue = (fromTitleNameVal) || '<no name set>';\n    this.fromTitleNameValue = fromTitleNameVal;\n    console.log(this.fromTitleNameValue);\n\n  }\n\n\n  @Input()        // setting the server url from project\n  set serverUrl(serverUrlVal: any) {\n    this.serverUrlValue = (serverUrlVal) || '<no name set>';\n    this.serverUrlValue = serverUrlVal;\n    console.log(this.serverUrlValue);\n\n  }\n\n  @Input()        // set the endpoint and source\n\n  public set addEndpoint(addEndpointVal: any) {\n    this.addEndpointValue = addEndpointVal;\n  }\n\n  @Input()      // set the from logo\n\nset logo(logoVal : any) {\n  this.logoValue = logoVal;\n}\n\n\n  // @Input()          // setting the navigate By Sign Up Url from project\n  // set signUpRouteingUrl(routeingUrlval: any) {\n  //   this.signUpRouteingUrlValue = (routeingUrlval) || '<no name set>';\n  //   this.signUpRouteingUrlValue = routeingUrlval;\n  //   console.log(this.signUpRouteingUrlValue);\n  // }\n  public accesscode: string;\n\n  constructor(public fb: FormBuilder, public http: HttpClient, public router: Router, public route: ActivatedRoute, public apiService: ApiService,  private snackBar: MatSnackBar) {\n\n    this.route.params.subscribe(params => {\n\n      this.accesscode = params['token'];\n      console.log(this.accesscode);\n    })\n\n    this.resetPasswordForm = this.fb.group({\n      // password: ['',  Validators.compose([Validators.required, Validators.minLength(4)])],\n      password: ['', Validators.required],\n      confirmPassword: ['', Validators.required],\n    }, {\n      validator: this.machpassword('password', 'confirmPassword')\n    })\n  }\n\n  ngOnInit() {\n    this.apiService.clearServerUrl();       // Clear the server url\n    setTimeout(() => {\n      this.apiService.setServerUrl(this.serverUrlValue);       // set the server url \n    }, 50);\n    // console.log(this.serverURL);\n\n\n    this.apiService.clearaddEndpoint();       // clear the endpoint \n    setTimeout(() => {\n      this.apiService.setaddEndpoint(this.addEndpointValue.endpoint);       // set the endpoint\n    }, 50);\n    // console.log(this.addEndpointData.endpoint);\n\n  }\n  //  this function is use for mach password and confirm Password \n\n  machpassword(passwordkye: string, confirmpasswordkye: string) {\n    return (group: FormGroup) => {\n      let passwordInput = group.controls[passwordkye],\n        confirmpasswordInput = group.controls[confirmpasswordkye];\n      if (passwordInput.value !== confirmpasswordInput.value) {\n        return confirmpasswordInput.setErrors({ notEquivalent: true });\n      }\n      else {\n        return confirmpasswordInput.setErrors(null);\n      }\n    };\n  }\n\n\n\n/********* Reset Password Form Submit start here*********/ \n  resetPasswordSubmit() {\n    console.log(this.resetPasswordForm.value);\n    let x: any;\n    for (x in this.resetPasswordForm.controls) {\n      this.resetPasswordForm.controls[x].markAsTouched();\n    }\n    if (this.resetPasswordForm.valid) {\n      let data1: any = { \"password\": this.resetPasswordForm.value.password, \"accesscode\": this.accesscode }\n      let data: any = {\n        'data': data1,\n        \"source\": this.addEndpointValue.source\n      }\n\n\n      // data.accesscode = this.accesscode;\n\n      this.apiService.addData(data).subscribe((response) => {\n        let result: any = {};\n        result = response;\n        console.log(result);\n        if (result.status == \"success\") {\n          this.openSnackBar();\n          this.formDirective.resetForm();       // Use for reset the form\n          this.message = '';\n        } else {\n          this.message = result.msg;\n        }\n\n      })\n    }\n  }\n\n\n  openSnackBar() {\n    this.snackBar.openFromComponent(snackBarResetComponent, {\n      duration: this.durationInSeconds * 1000,\n    });\n  }\n\n\n/********* Reset Password Form Submit end here*********/ \n\n\n  inputUntouched(val: any) {\n    this.resetPasswordForm.controls[val].markAsUntouched();\n  }\n\n\n\n\n}\n\n@Component({\n  selector: 'snack-bar-modale',\n  template: `Password changed successfully`,\n  styles: [`\n    .example {\n      color: aliceblue;\n      background-color: yellowgreen;\n    }\n  `],\n})\nexport class snackBarResetComponent { }\n","import { Injectable } from '@angular/core';\nimport { Router, RouterEvent, NavigationEnd } from '@angular/router';\n\n/** A router wrapper, adding extra functions. */\n@Injectable()\nexport class prevroute {\n\n  private previousUrl: string = undefined;\n  private currentUrl: string = undefined;\n\n  constructor(private router : Router) {\n    this.currentUrl = this.router.url;\n    router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        this.previousUrl = this.currentUrl;\n        this.currentUrl = event.url;\n      };\n    });\n  }\n\n  public getPreviousUrl(){\n    console.log('=========================');\n    console.log('prev- '+this.previousUrl);\n    console.log('currnt- '+this.currentUrl);\n    console.log('=========================');\n    return this.previousUrl;\n  }\n}","import { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { LoginComponent } from './login.component';\nimport { DemoMaterialModule } from './material-module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SignUpComponent, successModalComponent } from './sign-up/sign-up.component';\nimport { ForgetPasswordComponent, snackBarComponent } from './forget-password/forget-password.component';\nimport { ResetPasswordComponent, snackBarResetComponent } from './reset-password/reset-password.component';\nimport { ApiService } from './api.service';\nimport { prevroute } from './prevroute';\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    SignUpComponent,\n    ForgetPasswordComponent,\n    ResetPasswordComponent,\n    successModalComponent,\n    snackBarComponent,\n    snackBarResetComponent,\n    // commonModalComponent\n\n  ],\n  imports: [\n    DemoMaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    CommonModule,\n    HttpClientModule\n  ],\n  exports: [LoginComponent, SignUpComponent, ForgetPasswordComponent, ResetPasswordComponent],\n  providers: [ApiService, prevroute],\n  bootstrap: [],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA],\n  entryComponents: [ successModalComponent, snackBarComponent, snackBarResetComponent]\n})\nexport class LoginModule { }\n"]}