{"version":3,"sources":["ng://login-lib-influxiq/lib/login.service.ts","node_modules/tslib/tslib.es6.js","ng://login-lib-influxiq/lib/api.service.ts","ng://login-lib-influxiq/lib/login.component.ts","ng://login-lib-influxiq/lib/material-module.ts","ng://login-lib-influxiq/lib/sign-up/sign-up.component.ts","ng://login-lib-influxiq/lib/forget-password/forget-password.component.ts","ng://login-lib-influxiq/lib/reset-password/reset-password.component.ts","ng://login-lib-influxiq/lib/prevroute.ts","ng://login-lib-influxiq/lib/login.module.ts"],"names":["LoginService","Injectable","args","providedIn","__values","o","m","Symbol","iterator","i","call","next","length","value","done","__read","n","r","e","ar","push","error","ApiService","prototype","setServerUrl","this","subjectForServerUrl","clearServerUrl","getServerUrl","asObservable","setaddEndpoint","subjectForaddEndpointUrl","clearaddEndpoint","getaddEndpoint","setuploadEndpont","subjectForuploadEndpointUrl","clearuploadEndpoint","getuploadEndpoint","setupdateEndpoint","subjectForupdateEndpointUrl","clearupdateEndpoint","getupdateEndpoint","setdeletesingleEndpoint","subjectFordeletesingleEndpointUrl","cleardeletesingleEndpoint","getdeletesingleEndpoint","setupdatestatus_singleEndpoint","subjectForupdatestatusSingleEndpointUrl","clearupdatestatus_singleEndpoint","getupdatestatus_singleEndpoint","setgetdataEndpoint","subjectForGetdataEndpointUrl","cleargetdataEndpoint","getdataEndpoint","isTokenExpired","addData","requestdata","console","log","httpOptions","headers","HttpHeaders","Content-Type","Authorization","accesstoken","_http","post","serverUrl","addendpointUrl","JSON","stringify","pipe","map","res","uploadFile","access-token","uploadEndpointUrl","UpdateData","updateendpointUrl","getData","getdata_endpointUrl","addLogin","forgetPassword","deleteSingleData","deletesingle_endpointUrl","deleteMultipleData","UpdateStatusForSingleData","updatestatus_single_endpointUrl","UpdateStatusForMultipleData","CustomRequest","endpoint","jwtTokenGet","get","HttpClient","CookieService","_authHttp","cookieService","_this","progress","uploaderror","fileservername","Subject","subscriptionServer","subscribe","message","result","subscriptionaddEndpoint","subscriptionuploadEndpoint","subscriptionupdateEndpoint","subscriptiondeletesingleEndpoint","subscriptionupdatestatusSingleEndpoint","subscriptionGetdataEndpoint","Object","defineProperty","LoginComponent","forLoaderVal","loader","fromTitleVal","fromTitleValue","logoVal","logoValue","buttonNameVal","buttonNameValue","fullUrlVal","serverURL","endpointVal","endpointValue","v","cookieSetValue","routeingUrlval","signUpRouteingUrlValue","forgetRouteingUrlValue","routerStatusval","routerStatusValue","defaultUrlVal","defaultUrlValue","ngOnInit","apiService","setTimeout","loginFormSubmit","x","loginForm","controls","markAsTouched","valid","data_1","response","status","data","router","url","set","item","token","key1","type","cookies","_b","tslib_1.__values","entries","_c","_d","key","navigateByUrl","redirect_url","formDirective","resetForm","msg","inputUntouched","val","markAsUntouched","forgetpassword","path","signup","customFunction","link","Component","selector","template","FormBuilder","Router","ActivatedRoute","ViewChild","FormGroupDirective","Input","fb","http","route","project_name","previousUrl","undefined","currentUrl","events","event","NavigationEnd","params","group","email","Validators","compose","required","pattern","password","DemoMaterialModule","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","SignUpComponent","formTitleVal","formTitleValue","serverUrlVal","serverUrlValue","modaleLogoVal","typeval","typevalue","addEndpointVal","addEndpointValue","loginRouteingUrlValue","signUpFormSubmit","signUpForm","allData","source","dialog","open","successModalComponent","width","Url","login","MatDialog","firstname","lastname","onNoClick","dialogRef","close","MatDialogRef","Inject","MAT_DIALOG_DATA","ForgetPasswordComponent","domainUrlVal","domainUrlValue","addEndpointval","forgetPasswordSubmit","forgetPasswordForm","domainUrl","openSnackBar","snackBar","openFromComponent","snackBarComponent","duration","durationInSeconds","MatSnackBar","ResetPasswordComponent","fromTitleNameVal","fromTitleNameValue","machpassword","passwordkye","confirmpasswordkye","passwordInput","confirmpasswordInput","setErrors","notEquivalent","resetPasswordSubmit","resetPasswordForm","accesscode","snackBarResetComponent","confirmPassword","validator","prevroute","getPreviousUrl","LoginModule","declarations","imports","FormsModule","ReactiveFormsModule","BrowserAnimationsModule","CommonModule","HttpClientModule","providers","bootstrap","schemas","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","entryComponents"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor() { }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { ElementRef, EventEmitter, Injectable, Input, ViewChild } from '@angular/core';\nimport { switchMap, map, takeWhile } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n// for setting observables to get serverurl and endpointurl from app\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport{CookieService} from 'ngx-cookie-service';\n\n\n@Injectable({   \n  providedIn: 'root'\n})\nexport class ApiService {\n\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress: any = [];\n  public uploadtype;\n  public uploaderror: any = '';\n  public accesstoken:any=this.cookieService.get('jwtToken');\n  // public accesstoken:any='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIiLCJleHAiOjE1NjgzNTgyMTAsImlhdCI6MTU2ODI3MTgxMH0.2ltvxVKwfX1uwMOwQ2Zzgp1K2jiaCDj051Wyho0Iw-Q';\n  fileservername: any = [];\n  serverUrl: any;\n  addendpointUrl: any;\n  uploadEndpointUrl:any; //souresh\n  updateendpointUrl: any;\n  deletesingle_endpointUrl: any;\n  updatestatus_single_endpointUrl: any;\n  deletemultiple_endpointUrl: any;\n  updatestatus_multiple_endpointUrl: any;\n  getdata_endpointUrl: any;\n  private subjectForServerUrl = new Subject<any>();\n  private subjectForaddEndpointUrl = new Subject<any>();\n  private subjectForuploadEndpointUrl = new Subject<any>();  //added by souresh\n  private subjectForupdateEndpointUrl = new Subject<any>();\n  private subjectFordeletesingleEndpointUrl = new Subject<any>();\n  private subjectForupdatestatusSingleEndpointUrl = new Subject<any>();\n  private subjectForGetdataEndpointUrl = new Subject<any>();\n  public subscriptionServer: Subscription;\n  public subscriptionaddEndpoint: Subscription;\n  public subscriptionuploadEndpoint: Subscription;   //added by souresh\n  public subscriptionupdateEndpoint: Subscription;\n  public subscriptiondeletesingleEndpoint: Subscription;\n  public subscriptionupdatestatusSingleEndpoint: Subscription;\n  public subscriptionGetdataEndpoint: Subscription;\n\n  constructor(private _http: HttpClient,\n    private _authHttp: HttpClient,private cookieService :CookieService) {\n    this.subscriptionServer = this.getServerUrl().subscribe(message => {\n     let result: any;\n      result = message;\n      if (result != null) {\n        this.serverUrl = result;\n      } else {\n        this.serverUrl = null;\n      }\n    });\n    this.subscriptionaddEndpoint = this.getaddEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.addendpointUrl = result;\n      } else {\n        this.addendpointUrl = null;\n      }\n    });\n    /*********added by souresh***********/\n    this.subscriptionuploadEndpoint=this.getuploadEndpoint().subscribe(message=>{\n      let result:any;\n      result=message;\n        if(result!=null){\n          this.uploadEndpointUrl = result;\n        } else{\n          this.uploadEndpointUrl = null;\n        }\n    })\n    /************souresh end here**************/\n    this.subscriptionupdateEndpoint = this.getupdateEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.updateendpointUrl = result;\n      } else {\n        this.updateendpointUrl = null;\n      }\n    });\n    this.subscriptiondeletesingleEndpoint = this.getdeletesingleEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.deletesingle_endpointUrl = result;\n      } else {\n        this.deletesingle_endpointUrl = null;\n      }\n    });\n    this.subscriptionupdatestatusSingleEndpoint = this.getupdatestatus_singleEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.updatestatus_single_endpointUrl = result;\n      } else {\n        this.updatestatus_single_endpointUrl = null;\n      }\n    });\n    this.subscriptionGetdataEndpoint = this.getdataEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.getdata_endpointUrl = result;\n      } else {\n        this.getdata_endpointUrl = null;\n      }\n    });\n\n    \n  }\n\n  setServerUrl(value: any) {\n    this.subjectForServerUrl.next(value);\n  }\n  public clearServerUrl() {\n    this.subjectForServerUrl.next(null);\n  }\n  public getServerUrl(): Observable<any> {\n    return this.subjectForServerUrl.asObservable();\n  }\n\n  setaddEndpoint(value: any) {\n    this.subjectForaddEndpointUrl.next(value);\n  }\n  public clearaddEndpoint() {\n    this.subjectForaddEndpointUrl.next(null);\n  }\n  public getaddEndpoint(): Observable<any> {\n    return this.subjectForaddEndpointUrl.asObservable();\n  }\n/*****added by souresh******/\n  setuploadEndpont(value:any){\n    this.subjectForuploadEndpointUrl.next(value);\n  }\n  public clearuploadEndpoint(){\n    this.subjectForuploadEndpointUrl.next(null);\n  }\n  public getuploadEndpoint(): Observable <any> {\n    return this.subjectForuploadEndpointUrl.asObservable();\n  }\n   /********souresh end here********/\n\n\n  setupdateEndpoint(value: any) {\n    this.subjectForupdateEndpointUrl.next(value);\n  }\n  public clearupdateEndpoint() {\n    this.subjectForupdateEndpointUrl.next(null);\n  }\n  public getupdateEndpoint(): Observable<any> {\n    return this.subjectForupdateEndpointUrl.asObservable();\n  }\n\n  setdeletesingleEndpoint(value: any) {\n    this.subjectFordeletesingleEndpointUrl.next(value);\n  }\n  public cleardeletesingleEndpoint() {\n    this.subjectFordeletesingleEndpointUrl.next(null);\n  }\n  public getdeletesingleEndpoint(): Observable<any> {\n    return this.subjectFordeletesingleEndpointUrl.asObservable();\n  }\n\n  setupdatestatus_singleEndpoint(value: any) {\n    this.subjectForupdatestatusSingleEndpointUrl.next(value);\n  }\n  public clearupdatestatus_singleEndpoint() {\n    this.subjectForupdatestatusSingleEndpointUrl.next(null);\n  }\n  public getupdatestatus_singleEndpoint(): Observable<any> {\n    return this.subjectForupdatestatusSingleEndpointUrl.asObservable();\n  }\n\n  setgetdataEndpoint(value: any) {\n    this.subjectForGetdataEndpointUrl.next(value);\n  }\n  public cleargetdataEndpoint() {\n    this.subjectForGetdataEndpointUrl.next(null);\n  }\n  public getdataEndpoint(): Observable<any> {\n    return this.subjectForGetdataEndpointUrl.asObservable();\n  }\n\n\n\n  isTokenExpired() {\n\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n  }\n\n  addData(requestdata: any) {\n    console.log('in adddata apiservice');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken          //hard code written access-token(temp)\n      })\n    };\n\n    // console.log('httpoptions',httpOptions,this.serverUrl,requestdata);\n    var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n  /*******added by souresh************/\n  uploadFile(requestdata:any){\n    const httpOptions={\n        headers: new HttpHeaders({\n          'Content-Type':'application/json',\n          'access-token':this.accesstoken          //hard code written access-token(temp)\n        })\n    };\n    var result=this._http.post(this.serverUrl + this.uploadEndpointUrl,JSON.stringify(requestdata),httpOptions).pipe(map(res=>res));\n    return result;\n  }\n  /*******souresh end here********/\n  UpdateData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken          //hard code written access-token(temp)\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.updateendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  getData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.getdata_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n/*************** Added by himadri start here ***************/ \n  addLogin(requestdata: any) {\n    console.log('in addLogin apiservice');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n        // 'Authorization': this.accesstoken          //hard code written access-token(temp)\n      })\n    };\n\n    // console.log(this.serverUrl,requestdata);\n    var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n  /*************** Added by himadri end here ***************/ \n\n/*************** Added by himadri start here ***************/ \nforgetPassword(requestdata: any) {\n  console.log('in forgetPassword apiservice');\n  const httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n      // 'Authorization': this.accesstoken          //hard code written access-token(temp)\n    })\n  };\n\n  // console.log(this.serverUrl,requestdata);\n  var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n  return result;\n}\n/*************** Added by himadri end here ***************/ \n\n\n  deleteSingleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.deletesingle_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteMultipleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.deletesingle_endpointUrl+'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForSingleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.updatestatus_single_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForMultipleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.updatestatus_single_endpointUrl+'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n  CustomRequest(requestdata: any, endpoint:any ) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl +endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  jwtTokenGet() {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':'application/json'\n      })\n    };\n    var result = this._http.get(this.serverUrl +'gettemptoken').pipe(map(res => res));\n    return result;\n  }\n\n\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators, MinLengthValidator, FormGroupDirective } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\nimport { ApiService } from './api.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n\n\n\n@Component({\n  selector: 'lib-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  public message: any = '';\n  //   FormGroupDirective: It is a directive that binds an existing FormGroup to a DOM element.\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\n\n  public fromTitleValue: any = '';\n  public serverURL: any = '';\n  public signUpRouteingUrlValue: any = '';\n  public forgetRouteingUrlValue: any = '';\n  public routerStatusValue: any = '';\n  public endpointValue: any;\n  public logoValue: any = '';\n  public cookieSetValue: any = '';\n  public buttonNameValue: any = '';\n  public defaultUrlValue = '';\n  private loader: any = null;\n\n  @Input()\n  set forLoader(forLoaderVal: any) {\n    this.loader = (forLoaderVal) || '<no name set>';\n    this.loader = forLoaderVal;\n    // console.log('++++',this.loader)\n    console.log('++++-----',this.loader)\n  }\n\n  @Input()         // Set the project name\n  set fromTitle(fromTitleVal: any) {\n    this.fromTitleValue = (fromTitleVal) || '<no name set>';\n    this.fromTitleValue = fromTitleVal;\n\n  }\n  @Input()      // set the from logo\n  set logo(logoVal : any) {\n    this.logoValue = logoVal;\n  }\n@Input()\nset buttonName (buttonNameVal :any){\n  this.buttonNameValue = (buttonNameVal) || '<no name set>';\n  this.buttonNameValue = buttonNameVal\n}\n\n  @Input()        // setting the server url from project\n  set fullUrl(fullUrlVal: any) {\n    this.serverURL = (fullUrlVal) || '<no name set>';\n    this.serverURL = fullUrlVal;\n\n  }\n  @Input()\n\n  set endpoint(endpointVal: any) {\n    this.endpointValue = endpointVal;\n  }\n\n@Input()\n\npublic set cookieSet(v : any) {\n  this.cookieSetValue = v;\n}\n\n\n\n  @Input()          // setting the navigate By Sign Up Url from project\n  set signUpRouteingUrl(routeingUrlval: any) {\n    this.signUpRouteingUrlValue = (routeingUrlval) || '<no name set>';\n    this.signUpRouteingUrlValue = routeingUrlval;\n    // console.log(this.signUpRouteingUrlValue)\n  }\n\n\n  @Input()          // setting the navigate By Forget Password Url from project\n  set forgetRouteingUrl(routeingUrlval: any) {\n    this.forgetRouteingUrlValue = (routeingUrlval) || '<no name set>';\n    this.forgetRouteingUrlValue = routeingUrlval;\n    // console.log(this.forgetRouteingUrlValue)\n  }\n\n  @Input()          // setting the navigate By Forget Password Url from project\n  set routerStatus(routerStatusval: any) {\n    this.routerStatusValue = (routerStatusval) || '<no name set>';\n    this.routerStatusValue = routerStatusval;\n    console.log(this.routerStatusValue)\n  }\n\n  @Input()\n  set defaultLoginUrl(defaultUrlVal: any) {\n    this.defaultUrlValue = (defaultUrlVal) || '<no name set>';\n    this.defaultUrlValue = defaultUrlVal;\n    console.log(this.defaultUrlValue)\n  }\n \n\n\n\n\n  public loginForm: FormGroup;\n  public project_name: any = '';\n  public redirect_url:any = '';\n  private previousUrl: string = undefined;\n  private currentUrl: string = undefined;\n\n\n  constructor(public fb: FormBuilder,\n     public http: HttpClient,\n     public router: Router,\n     public apiService: ApiService,\n     public cookieService: CookieService,\n     public route: ActivatedRoute) {\n       \n      this.currentUrl = this.router.url;\n      router.events.subscribe(event => {\n        if (event instanceof NavigationEnd) {\n          this.previousUrl = this.currentUrl;\n          this.currentUrl = event.url;\n        };\n      });\n    // console.log(\"++++++++++++++++++++++++++++=________+++++ this.previousUrl\",this.previousUrl)\n    // console.log(\"++++++++++++++++++++++++++++=________+++++ this.currentUrl\",this.currentUrl)\n    this.route.params.subscribe(params=>{\n      // console.log('++++++',params['id']);\n      this.redirect_url = params['path'];\n      // if (params['id'] != '' || params['id'] != null) {\n      //   this.redirect_url = params['id'];\n      // }\n      // console.log('redirect_url',this.redirect_url)\n    });\n\n    this.loginForm = this.fb.group({\n      email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\n      password: ['', Validators.required]\n    })\n  }\n\n  ngOnInit() {\n    this.apiService.clearServerUrl();       // Clear the server url\n    setTimeout(() => {\n      this.apiService.setServerUrl(this.serverURL);       // set the server url \n    }, 50);\n    // console.log(this.serverURL);\n\n\n    this.apiService.clearaddEndpoint();       // clear the endpoint \n    setTimeout(() => {\n      this.apiService.setaddEndpoint(this.endpointValue);       // set the endpoint\n    }, 50);\n    // console.log(this.addEndpointData.endpoint);\n\n  }\n\n \n/********* Login Form Submit start here*********/ \n  loginFormSubmit() {\n    this.loader = 1;\n    console.log(this.loader)\n    let x: any;\n    // use for validation checking\n\n    for (x in this.loginForm.controls) {\n      this.loginForm.controls[x].markAsTouched();\n    }\n\n    if (this.loginForm.valid) {\n\n     \n      let data: any = this.loginForm.value;\n      this.apiService.addLogin(data).subscribe((response:any) => {\n\n        console.log(this.routerStatusValue)\n        if (response.status == \"success\") {\n         console.log(this.routerStatusValue.data, this.router.url,  this.defaultUrlValue)\n          this.cookieService.set('user_details', JSON.stringify(response.item[0]));\n          this.cookieService.set('jwtToken', response.token);\n          if (this.router.url == this.defaultUrlValue) {\n            console.log(response,'response')\n            console.log(this.routerStatusValue.data, this.router.url,  this.defaultUrlValue, '1')\n            for (const key1 in this.routerStatusValue.data) {\n\n              console.log(this.routerStatusValue.data, this.router.url,  this.defaultUrlValue,'2', this.routerStatusValue.data[key1].type, response.item[0].type)\n              if (response.item[0].type === this.routerStatusValue.data[key1].type) {\n                console.log(this.routerStatusValue.data[key1].cookies,'cookies');\n                for( let i in this.routerStatusValue.data[key1].cookies){\n                  console.log(this.routerStatusValue.data[key1].cookies[i],'+++')\n                  // console.log(this.routerStatusValue.data[key1].cookies[i],'---')\n                  // let da: any = response.item[0];\n                  for(let [key, value]  of Object.entries(response.item[0])){\n                    // console.log(`${key}: ${value}`);\n                    // console.log(typeof(key), '-------PP');\n                    // console.log(typeof(this.routerStatusValue.data[key1].cookies[i]), this.routerStatusValue.data[key1].cookies[i],'----+++---PP');\n                    // console.log(value, '++++++++PP');\n                    if (this.routerStatusValue.data[key1].cookies[i] == key ) {\n                      console.log('+++PP')\n                    }\n                  }\n                }\n\n                console.log(data, 'cookies')\n                return;\n                // console.log(response.item[0].type, this.router.url,  this.routerStatusValue.data[key].type)\n                // this.router.navigateByUrl('/' + this.routerStatusValue.data[key].routerNav);\n                // console.log(this.routerStatusValue.data[key].routerNav)\n              }\n            }\n            \n          } else {\n            // this.loader = 0; \n            // console.log('++++++ redirect_url//',this.redirect_url);\n            this.router.navigateByUrl(this.redirect_url);\n        }\n        this.loader = 0;\n\n\n          // this is use for reset the from\n          this.formDirective.resetForm();\n          this.message = '';\n        } else {\n          // display error message on html\n          this.message = response.msg;\n        }\n      });\n    }\n\n  }\n\n\n  inputUntouched(val: any) {\n    this.loginForm.controls[val].markAsUntouched();\n  }\n\n  // This is use for navigate this component to forget component \n  forgetpassword() {\n    this.router.navigateByUrl('/' + this.forgetRouteingUrlValue.path);\n  }\n\n  // This is use for navigate this component to sign-Up component \n  signup() {\n    this.router.navigateByUrl('/' + this.signUpRouteingUrlValue.path);\n  }\n\n  customFunction(link: any) {\n    this.router.navigateByUrl('/'+ link);\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n Use of this source code is governed by an MIT-style license that\n can be found in the LICENSE file at http://angular.io/license */\n","import { Component, OnInit, Input, Inject, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormGroupDirective } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material';\nimport { ApiService } from '../api.service';\n\n\n\nexport interface DialogData {\n  value: string;\n  Url: any;\n}\n\n@Component({\n  selector: 'lib-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n  public value: any='';\n  public link: any='';\n  public Url: any='';\n  public message: any = '';\n\n  //   FormGroupDirective: It is a directive that binds an existing FormGroup to a DOM element.\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\n\n  public formTitleValue: any = '';\n  public serverUrlValue: any = '';\n  public forgetRouteingUrlValue: any = '';\n  public loginRouteingUrlValue: any = '';\n  public addEndpointValue: any = '';\n  public logoValue: any = '';\n  public typevalue: any = '';\n  public buttonNameValue: any = '';\n\n  @Input()         // Set the Form name\n  set formTitle(formTitleVal: any) {\n    this.formTitleValue = (formTitleVal) || '<no name set>';\n    this.formTitleValue = formTitleVal;\n    // console.log(this.formTitleValue);\n\n  }\n\n  @Input()\n  set buttonName (buttonNameVal :any){\n    this.buttonNameValue = (buttonNameVal) || '<no name set>';\n    this.buttonNameValue = buttonNameVal\n  }\n\n  @Input()        // setting the server url from project\n  set serverUrl(serverUrlVal: any) {\n    this.serverUrlValue = (serverUrlVal) || '<no name set>';\n    this.serverUrlValue = serverUrlVal;\n    // console.log(this.serverUrlValue);\n\n  }\n@Input()      // set the from logo\n\nset logo(logoVal : any) {\n  this.logoValue = logoVal;\n}\n\n@Input()      // set the from logo\n\nset modaleLogo(modaleLogoVal : any) {\n  this.link = modaleLogoVal;\n}\n\n@Input()\nset userType(typeval: any) {\n  this.typevalue = typeval;\n}\n\n\n  @Input()        // set the endpoint And source\n  public set addEndpoint(addEndpointVal: any) {\n    this.addEndpointValue = addEndpointVal;\n    console.log(this.addEndpointValue)\n  }\n\n\n  @Input()          // setting the navigate By Forget Password Url from project\n  set forgetRouteingUrl(routeingUrlval: any) {\n    this.forgetRouteingUrlValue = (routeingUrlval) || '<no name set>';\n    this.forgetRouteingUrlValue = routeingUrlval;\n    // console.log(this.forgetRouteingUrlValue);\n  }\n\n  @Input()          // setting the navigate By login Url from project\n  set loginRouteingUrl(routeingUrlval: any) {\n    this.loginRouteingUrlValue = (routeingUrlval) || '<no name set>';\n    this.loginRouteingUrlValue = routeingUrlval;\n    // console.log(this.loginRouteingUrlValue);\n  }\n\n\n\n  public signUpForm: FormGroup;\n\n  constructor(public fb: FormBuilder, public http: HttpClient, public router: Router, public dialog: MatDialog, public apiService: ApiService) {\n    this.signUpForm = this.fb.group({\n      email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\n      firstname: ['', Validators.required],\n      lastname: ['', Validators.required],\n      password: ['', Validators.required]\n    })\n\n\n    this.http.get(this.serverUrlValue + 'gettemptoken').subscribe(res=>{\n      console.log(res);\n    });\n  }\n\n  ngOnInit() {\n    this.apiService.clearServerUrl();       //  Clear the server url\n    setTimeout(() => {\n      this.apiService.setServerUrl(this.serverUrlValue);        //  set the server url\n    }, 50);\n    // console.log(this.serverURL);\n\n\n    this.apiService.clearaddEndpoint();       //  Clear the endpoint\n    setTimeout(() => {\n      this.apiService.setaddEndpoint(this.addEndpointValue.endpoint);   //  set the endpoint\n    }, 50);\n\n    \n\n  }\n\n\n/********* Sign Up Form Submit start here*********/ \n  signUpFormSubmit() {\n    this.http.get(this.serverUrlValue + 'gettemptoken').subscribe(res=>{\n      console.log(res);\n    });\n    console.log('jhgj')\n    this.apiService.jwtTokenGet().subscribe((response) => {});\n    // use for validation checking\n    for (let x in this.signUpForm.controls) {\n      this.signUpForm.controls[x].markAsTouched();\n    }\n    if (this.signUpForm.valid) {\n      // let link: any = this.fullUrlValue;\n      let allData: any = this.signUpForm.value;\n      allData.type = this.typevalue;\n      console.log(allData);\n\n      let data: any = {\n        'data': allData,\n        \"source\": this.addEndpointValue.source\n      };\n      console.log(data);\n      this.apiService.addData(data).subscribe((response) => {\n        let result: any = {};\n        result = response;\n        console.log(result);\n\n        if (result.status == \"success\") {\n          const dialogRef = this.dialog.open(successModalComponent, {\n            width: '250px',\n            data: {value: result.status, Url: this.link}\n          });\n          // this.router.navigateByUrl('/' + )     // navigate to dashboard url \n\n\n          // this is use for reset the from\n          this.formDirective.resetForm();\n        } else {\n          // display error message on html\n          this.message = result.msg;\n        }\n      })\n\n    }\n  }\n\n\n/********* Sign Up Form Submit end here*********/ \n\n  // This is use for navigate this component to forget component \n  forgetpassword() {\n    this.router.navigateByUrl('/' + this.forgetRouteingUrlValue.path);\n  }\n\n\n  // This is use for navigate this component to forget component \n  login() {\n    this.router.navigateByUrl('/' + this.loginRouteingUrlValue.path);\n  }\n\n  inputUntouched(val: any) {\n    this.signUpForm.controls[val].markAsUntouched();\n  }\n  customFunction(link: any) {\n    this.router.navigateByUrl('/'+ link);\n  }\n}\n\n\n@Component({\n  selector: 'successModal',\n  templateUrl: '../successModal.html',\n\n})\nexport class successModalComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<successModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n      console.log(data)\n     }\n\n    \n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n\n\n","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormGroupDirective } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../api.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'lib-forget-password',\n  templateUrl: './forget-password.component.html',\n  styleUrls: ['./forget-password.component.css']\n})\nexport class ForgetPasswordComponent implements OnInit {\n  public message: any = '';\n  public buttonNameValue: any = '';\n\n  //   FormGroupDirective: It is a directive that binds an existing FormGroup to a DOM element.\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\n\n  public forgetPasswordForm: FormGroup;\n  public formTitleValue: any = '';          // This is From title\n  public serverUrlValue: any = '';          //  This is Server url\n  public signUpRouteingUrlValue: any = '';  // setting the navigate By Sign Up Url from project\n  public loginRouteingUrlValue: any = '';  // setting the navigate By login Url from project\n  private domainUrlValue: any = '';          // This is reset password url\n  public addEndpointValue: any = '';        // This is endpoint url\n  public logoValue: any = '';               // This is from logo url\n  public durationInSeconds = 5;             // This is SnackBar set time\n\n\n  @Input()\nset buttonName (buttonNameVal :any){\n  this.buttonNameValue = (buttonNameVal) || '<no name set>';\n  this.buttonNameValue = buttonNameVal\n}\n\n  @Input()         // Set the project email Doman URL\n  set domainUrl(domainUrlVal: any) {\n    this.domainUrlValue = (domainUrlVal) || '<no name set>';\n    this.domainUrlValue = domainUrlVal;\n    // console.log(this.domanUrlValue);\n  }\n  @Input()         // Set the project name\n  set formTitle(formTitleVal: any) {\n    this.formTitleValue = (formTitleVal) || '<no name set>';\n    this.formTitleValue = formTitleVal;\n\n  }\n\n  @Input()        // setting the server url from project\n  set serverUrl(serverUrlVal: any) {\n    this.serverUrlValue = (serverUrlVal) || '<no name set>';\n    this.serverUrlValue = serverUrlVal;\n\n  }\n\n  @Input()      // set the from logo\n\n  set logo(logoVal: any) {\n    this.logoValue = logoVal;\n  }\n\n  @Input()          // set the endpoint and source\n\n  set addEndpoint(addEndpointval: any) {\n    this.addEndpointValue = addEndpointval;\n  }\n\n\n  @Input()          // setting the navigate By Sign Up Url from project\n  set signUpRouteingUrl(routeingUrlval: any) {\n    this.signUpRouteingUrlValue = (routeingUrlval) || '<no name set>';\n    this.signUpRouteingUrlValue = routeingUrlval;\n    // console.log(this.signUpRouteingUrlValue)\n  }\n\n  @Input()          // setting the navigate By Sign Up Url from project\n  set loginRouteingUrl(routeingUrlval: any) {\n    this.loginRouteingUrlValue = (routeingUrlval) || '<no name set>';\n    this.loginRouteingUrlValue = routeingUrlval;\n    // console.log(this.loginRouteingUrlValue)\n  }\n\n  constructor(\n    public fb: FormBuilder,\n    public router: Router,\n    public apiService: ApiService,\n    private snackBar: MatSnackBar\n  ) {\n\n\n\n    this.forgetPasswordForm = this.fb.group({\n      email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\n\n    });\n\n\n\n\n  }\n\n  ngOnInit() {\n    this.apiService.clearServerUrl();       //  Clear the server url\n    setTimeout(() => {\n      this.apiService.setServerUrl(this.serverUrlValue);        //  set the server url\n    }, 50);\n    // console.log(this.serverURL);\n\n\n    this.apiService.clearaddEndpoint();       //  Clear the endpoint\n    setTimeout(() => {\n      this.apiService.setaddEndpoint(this.addEndpointValue.endpoint);   //  set the endpoint\n    }, 50);\n  }\n\n  /********* Forget password  Form Submit start here*********/\n  forgetPasswordSubmit() {\n    let x: any;\n\n    //  This for-loop use for from blank or properly validated checking  \n    for (x in this.forgetPasswordForm.controls) {\n      this.forgetPasswordForm.controls[x].markAsTouched();\n    }\n    if (this.forgetPasswordForm.valid) {    //    validation checking\n\n      // this.openSnackBar();              // open snack-bar function\n\n      let link: any = this.serverUrlValue;\n      let data: any = this.forgetPasswordForm.value;\n\n      data.domainUrl = this.domainUrlValue;\n\n      this.apiService.forgetPassword(data).subscribe((response) => {\n        // console.log(response);\n        let result: any = {};\n        result = response;\n\n        if (result.status == \"success\") {\n          // this.openSnackBar();             // open snack-bar function\n          // this is use for reset the from\n          this.formDirective.resetForm();\n          this.message = '';         // clear the from\n        } else {\n\n          // display error message on html\n          this.message = result.msg;      // show the error message\n\n        }\n      });\n    }\n  }\n\n  /********* Forget password  Form Submit end here*********/\n\n\n  /********* openSnackBar function open start here*********/\n\n\n  openSnackBar() {\n    this.snackBar.openFromComponent(snackBarComponent, {\n      duration: this.durationInSeconds * 1000,\n    });\n  }\n /********* openSnackBar function open end here*********/\n\n\n  // This is use for navigate this component to sign-Up component \n  signup() {\n    this.router.navigateByUrl('/' + this.signUpRouteingUrlValue);\n  }\n\n    // This is use for navigate this component to login component \n    login() {\n      this.router.navigateByUrl('/' + this.loginRouteingUrlValue);\n    }\n\n  inputUntouched(val: any) {\n    this.forgetPasswordForm.controls[val].markAsUntouched();\n  }\n\n\n  customFunction(link: any) {\n    this.router.navigateByUrl('/'+ link);\n  }\n\n\n}\n\n\n@Component({\n  selector: 'snack-bar-modale',\n  templateUrl: 'forget-passwordModale.html',\n  styles: [`\n    .example {\n      color: aliceblue;\n      background-color: yellowgreen;\n    }\n  `],\n})\nexport class snackBarComponent { }\n","import { Component, OnInit, Input, ViewChild, Inject } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup, FormGroupDirective } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../api.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'lib-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\n\n\n\nexport class ResetPasswordComponent implements OnInit {\n  //   FormGroupDirective: It is a directive that binds an existing FormGroup to a DOM element.\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\n  public resetPasswordForm: FormGroup;\n  public fromTitleNameValue: any = '';\n  public serverUrlValue: any = '';\n  public message: any = '';\n  public addEndpointValue: any = '';\n\n  public logoValue: any = '';\n  // public signUpRouteingUrlValue: any = '';\n  public durationInSeconds = 5;             // This is SnackBar set time\n\n\n  @Input()         // Set the Form name\n  set fromTitleName(fromTitleNameVal: any) {\n    this.fromTitleNameValue = (fromTitleNameVal) || '<no name set>';\n    this.fromTitleNameValue = fromTitleNameVal;\n    console.log(this.fromTitleNameValue);\n\n  }\n\n\n  @Input()        // setting the server url from project\n  set serverUrl(serverUrlVal: any) {\n    this.serverUrlValue = (serverUrlVal) || '<no name set>';\n    this.serverUrlValue = serverUrlVal;\n    console.log(this.serverUrlValue);\n\n  }\n\n  @Input()        // set the endpoint and source\n\n  public set addEndpoint(addEndpointVal: any) {\n    this.addEndpointValue = addEndpointVal;\n  }\n\n  @Input()      // set the from logo\n\nset logo(logoVal : any) {\n  this.logoValue = logoVal;\n}\n\n\n  // @Input()          // setting the navigate By Sign Up Url from project\n  // set signUpRouteingUrl(routeingUrlval: any) {\n  //   this.signUpRouteingUrlValue = (routeingUrlval) || '<no name set>';\n  //   this.signUpRouteingUrlValue = routeingUrlval;\n  //   console.log(this.signUpRouteingUrlValue);\n  // }\n  public accesscode: string;\n\n  constructor(public fb: FormBuilder, public http: HttpClient, public router: Router, public route: ActivatedRoute, public apiService: ApiService,  private snackBar: MatSnackBar) {\n\n    this.route.params.subscribe(params => {\n\n      this.accesscode = params['token'];\n      console.log(this.accesscode);\n    })\n\n    this.resetPasswordForm = this.fb.group({\n      // password: ['',  Validators.compose([Validators.required, Validators.minLength(4)])],\n      password: ['', Validators.required],\n      confirmPassword: ['', Validators.required],\n    }, {\n      validator: this.machpassword('password', 'confirmPassword')\n    })\n  }\n\n  ngOnInit() {\n    this.apiService.clearServerUrl();       // Clear the server url\n    setTimeout(() => {\n      this.apiService.setServerUrl(this.serverUrlValue);       // set the server url \n    }, 50);\n    // console.log(this.serverURL);\n\n\n    this.apiService.clearaddEndpoint();       // clear the endpoint \n    setTimeout(() => {\n      this.apiService.setaddEndpoint(this.addEndpointValue.endpoint);       // set the endpoint\n    }, 50);\n    // console.log(this.addEndpointData.endpoint);\n\n  }\n  //  this function is use for mach password and confirm Password \n\n  machpassword(passwordkye: string, confirmpasswordkye: string) {\n    return (group: FormGroup) => {\n      let passwordInput = group.controls[passwordkye],\n        confirmpasswordInput = group.controls[confirmpasswordkye];\n      if (passwordInput.value !== confirmpasswordInput.value) {\n        return confirmpasswordInput.setErrors({ notEquivalent: true });\n      }\n      else {\n        return confirmpasswordInput.setErrors(null);\n      }\n    };\n  }\n\n\n\n/********* Reset Password Form Submit start here*********/ \n  resetPasswordSubmit() {\n    console.log(this.resetPasswordForm.value);\n    let x: any;\n    for (x in this.resetPasswordForm.controls) {\n      this.resetPasswordForm.controls[x].markAsTouched();\n    }\n    if (this.resetPasswordForm.valid) {\n      let data1: any = { \"password\": this.resetPasswordForm.value.password, \"accesscode\": this.accesscode }\n      let data: any = {\n        'data': data1,\n        \"source\": this.addEndpointValue.source\n      }\n\n\n      // data.accesscode = this.accesscode;\n\n      this.apiService.addData(data).subscribe((response) => {\n        let result: any = {};\n        result = response;\n        console.log(result);\n        if (result.status == \"success\") {\n          this.openSnackBar();\n          this.formDirective.resetForm();       // Use for reset the form\n          this.message = '';\n        } else {\n          this.message = result.msg;\n        }\n\n      })\n    }\n  }\n\n\n  openSnackBar() {\n    this.snackBar.openFromComponent(snackBarResetComponent, {\n      duration: this.durationInSeconds * 1000,\n    });\n  }\n\n\n/********* Reset Password Form Submit end here*********/ \n\n\n  inputUntouched(val: any) {\n    this.resetPasswordForm.controls[val].markAsUntouched();\n  }\n\n\n\n\n}\n\n@Component({\n  selector: 'snack-bar-modale',\n  template: `Password changed successfully`,\n  styles: [`\n    .example {\n      color: aliceblue;\n      background-color: yellowgreen;\n    }\n  `],\n})\nexport class snackBarResetComponent { }\n","import { Injectable } from '@angular/core';\nimport { Router, RouterEvent, NavigationEnd } from '@angular/router';\n\n/** A router wrapper, adding extra functions. */\n@Injectable()\nexport class prevroute {\n\n  private previousUrl: string = undefined;\n  private currentUrl: string = undefined;\n\n  constructor(private router : Router) {\n    this.currentUrl = this.router.url;\n    router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        this.previousUrl = this.currentUrl;\n        this.currentUrl = event.url;\n      };\n    });\n  }\n\n  public getPreviousUrl(){\n    console.log('=========================');\n    console.log('prev- '+this.previousUrl);\n    console.log('currnt- '+this.currentUrl);\n    console.log('=========================');\n    return this.previousUrl;\n  }\n}","import { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { LoginComponent } from './login.component';\nimport { DemoMaterialModule } from './material-module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SignUpComponent, successModalComponent } from './sign-up/sign-up.component';\nimport { ForgetPasswordComponent, snackBarComponent } from './forget-password/forget-password.component';\nimport { ResetPasswordComponent, snackBarResetComponent } from './reset-password/reset-password.component';\nimport { ApiService } from './api.service';\nimport { prevroute } from './prevroute';\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    SignUpComponent,\n    ForgetPasswordComponent,\n    ResetPasswordComponent,\n    successModalComponent,\n    snackBarComponent,\n    snackBarResetComponent,\n    // commonModalComponent\n\n  ],\n  imports: [\n    DemoMaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    CommonModule,\n    HttpClientModule\n  ],\n  exports: [LoginComponent, SignUpComponent, ForgetPasswordComponent, ResetPasswordComponent],\n  providers: [ApiService, prevroute],\n  bootstrap: [],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA],\n  entryComponents: [ successModalComponent, snackBarComponent, snackBarResetComponent]\n})\nexport class LoginModule { }\n"]}