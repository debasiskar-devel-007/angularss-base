{"version":3,"sources":["ng://login-lib-influxiq/lib/login.service.ts","node_modules/tslib/tslib.es6.js","ng://login-lib-influxiq/lib/api.service.ts","ng://login-lib-influxiq/lib/login.component.ts","ng://login-lib-influxiq/lib/material-module.ts","ng://login-lib-influxiq/lib/sign-up/sign-up.component.ts","ng://login-lib-influxiq/lib/forget-password/forget-password.component.ts","ng://login-lib-influxiq/lib/reset-password/reset-password.component.ts","ng://login-lib-influxiq/lib/prevroute.ts","ng://login-lib-influxiq/lib/login.module.ts"],"names":["LoginService","Injectable","args","providedIn","__values","o","m","Symbol","iterator","i","call","next","length","value","done","__read","n","r","e","ar","push","error","ApiService","prototype","setServerUrl","this","subjectForServerUrl","clearServerUrl","getServerUrl","asObservable","setaddEndpoint","subjectForaddEndpointUrl","clearaddEndpoint","getaddEndpoint","setuploadEndpont","subjectForuploadEndpointUrl","clearuploadEndpoint","getuploadEndpoint","setupdateEndpoint","subjectForupdateEndpointUrl","clearupdateEndpoint","getupdateEndpoint","setdeletesingleEndpoint","subjectFordeletesingleEndpointUrl","cleardeletesingleEndpoint","getdeletesingleEndpoint","setupdatestatus_singleEndpoint","subjectForupdatestatusSingleEndpointUrl","clearupdatestatus_singleEndpoint","getupdatestatus_singleEndpoint","setgetdataEndpoint","subjectForGetdataEndpointUrl","cleargetdataEndpoint","getdataEndpoint","isTokenExpired","addData","requestdata","console","log","httpOptions","headers","HttpHeaders","Content-Type","Authorization","accesstoken","_http","post","serverUrl","addendpointUrl","JSON","stringify","pipe","map","res","uploadFile","access-token","uploadEndpointUrl","UpdateData","updateendpointUrl","getData","getdata_endpointUrl","addLogin","Object","assign","secret","cookieService","get","forgetPassword","deleteSingleData","deletesingle_endpointUrl","deleteMultipleData","UpdateStatusForSingleData","updatestatus_single_endpointUrl","UpdateStatusForMultipleData","CustomRequest","endpoint","jwtTokenGet","HttpClient","CookieService","_authHttp","_this","progress","uploaderror","fileservername","Subject","subscriptionServer","subscribe","message","result","subscriptionaddEndpoint","subscriptionuploadEndpoint","subscriptionupdateEndpoint","subscriptiondeletesingleEndpoint","subscriptionupdatestatusSingleEndpoint","subscriptionGetdataEndpoint","defineProperty","LoginComponent","forLoaderVal","loader","fromTitleVal","fromTitleValue","logoVal","logoValue","buttonNameVal","buttonNameValue","fullUrlVal","serverURL","endpointVal","endpointValue","v","cookieSetValue","routeingUrlval","signUpRouteingUrlValue","forgetRouteingUrlValue","routerStatusval","routerStatusValue","defaultUrlVal","defaultUrlValue","id","ipinfoidValue","ngOnInit","url","http","login_ip_info","apiService","setTimeout","randomString","chars","mask","indexOf","Math","floor","random","loginFormSubmit","x","set","undefined","localStorage","setItem","loginForm","controls","markAsTouched","valid","loginflag","data","login_data","login_time","Date","getTime","response","status","token","router","key1","item","type","_c","tslib_1.__values","entries","cookies","_d","_e","keys","values","_f","_g","_h","key","navigateByUrl","routerNav","redirect_url","formDirective","resetForm","msg","inputUntouched","val","markAsUntouched","forgetpassword","path","signup","customFunction","link","ngOnDestroy","Component","selector","template","FormBuilder","Router","ActivatedRoute","ViewChild","FormGroupDirective","Input","fb","route","project_name","previousUrl","currentUrl","events","event","NavigationEnd","params","group","email","Validators","compose","required","pattern","password","DemoMaterialModule","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","SignUpComponent","formTitleVal","formTitleValue","serverUrlVal","serverUrlValue","modaleLogoVal","typeval","typevalue","addEndpointVal","addEndpointValue","loginRouteingUrlValue","signUpFormSubmit","signUpForm","allData","source","dialog","open","successModalComponent","width","Url","login","MatDialog","firstname","lastname","onNoClick","dialogRef","close","MatDialogRef","Inject","MAT_DIALOG_DATA","ForgetPasswordComponent","domainUrlVal","domainUrlValue","addEndpointval","forgetPasswordSubmit","forgetPasswordForm","domainUrl","openSnackBar1","openSnackBar","snackBar","openFromComponent","snackBarComponent","duration","durationInSeconds","MatSnackBar","ResetPasswordComponent","fromTitleNameVal","fromTitleNameValue","validationMessageVal","validationMessageValue","machpassword","passwordkye","confirmpasswordkye","passwordInput","confirmpasswordInput","setErrors","notEquivalent","resetPasswordSubmit","resetPasswordForm","accesscode","snackBarResetComponent","PasswordStrengthValidator","control","test","passwordStrength","confirmPassword","validator","prevroute","getPreviousUrl","LoginModule","declarations","imports","FormsModule","ReactiveFormsModule","CommonModule","HttpClientModule","providers","bootstrap","schemas","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","entryComponents"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor() { }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { ElementRef, EventEmitter, Injectable, Input, ViewChild } from '@angular/core';\nimport { switchMap, map, takeWhile } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n// for setting observables to get serverurl and endpointurl from app\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport{CookieService} from 'ngx-cookie-service';\n\n\n@Injectable({   \n  providedIn: 'root'\n})\nexport class ApiService {\n\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress: any = [];\n  public uploadtype;\n  public uploaderror: any = '';\n  public accesstoken:any=this.cookieService.get('jwtToken');\n  // public accesstoken:any='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIiLCJleHAiOjE1NjgzNTgyMTAsImlhdCI6MTU2ODI3MTgxMH0.2ltvxVKwfX1uwMOwQ2Zzgp1K2jiaCDj051Wyho0Iw-Q';\n  fileservername: any = [];\n  serverUrl: any;\n  addendpointUrl: any;\n  uploadEndpointUrl:any; //souresh\n  updateendpointUrl: any;\n  deletesingle_endpointUrl: any;\n  updatestatus_single_endpointUrl: any;\n  deletemultiple_endpointUrl: any;\n  updatestatus_multiple_endpointUrl: any;\n  getdata_endpointUrl: any;\n  private subjectForServerUrl = new Subject<any>();\n  private subjectForaddEndpointUrl = new Subject<any>();\n  private subjectForuploadEndpointUrl = new Subject<any>();  //added by souresh\n  private subjectForupdateEndpointUrl = new Subject<any>();\n  private subjectFordeletesingleEndpointUrl = new Subject<any>();\n  private subjectForupdatestatusSingleEndpointUrl = new Subject<any>();\n  private subjectForGetdataEndpointUrl = new Subject<any>();\n  public subscriptionServer: Subscription;\n  public subscriptionaddEndpoint: Subscription;\n  public subscriptionuploadEndpoint: Subscription;   //added by souresh\n  public subscriptionupdateEndpoint: Subscription;\n  public subscriptiondeletesingleEndpoint: Subscription;\n  public subscriptionupdatestatusSingleEndpoint: Subscription;\n  public subscriptionGetdataEndpoint: Subscription;\n\n  constructor(private _http: HttpClient,\n    private _authHttp: HttpClient,private cookieService :CookieService) {\n    this.subscriptionServer = this.getServerUrl().subscribe(message => {\n     let result: any;\n      result = message;\n      if (result != null) {\n        this.serverUrl = result;\n      } else {\n        this.serverUrl = null;\n      }\n    });\n    this.subscriptionaddEndpoint = this.getaddEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.addendpointUrl = result;\n      } else {\n        this.addendpointUrl = null;\n      }\n    });\n    /*********added by souresh***********/\n    this.subscriptionuploadEndpoint=this.getuploadEndpoint().subscribe(message=>{\n      let result:any;\n      result=message;\n        if(result!=null){\n          this.uploadEndpointUrl = result;\n        } else{\n          this.uploadEndpointUrl = null;\n        }\n    })\n    /************souresh end here**************/\n    this.subscriptionupdateEndpoint = this.getupdateEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.updateendpointUrl = result;\n      } else {\n        this.updateendpointUrl = null;\n      }\n    });\n    this.subscriptiondeletesingleEndpoint = this.getdeletesingleEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.deletesingle_endpointUrl = result;\n      } else {\n        this.deletesingle_endpointUrl = null;\n      }\n    });\n    this.subscriptionupdatestatusSingleEndpoint = this.getupdatestatus_singleEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.updatestatus_single_endpointUrl = result;\n      } else {\n        this.updatestatus_single_endpointUrl = null;\n      }\n    });\n    this.subscriptionGetdataEndpoint = this.getdataEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.getdata_endpointUrl = result;\n      } else {\n        this.getdata_endpointUrl = null;\n      }\n    });\n\n    \n  }\n\n  setServerUrl(value: any) {\n    this.subjectForServerUrl.next(value);\n  }\n  public clearServerUrl() {\n    this.subjectForServerUrl.next(null);\n  }\n  public getServerUrl(): Observable<any> {\n    return this.subjectForServerUrl.asObservable();\n  }\n\n  setaddEndpoint(value: any) {\n    this.subjectForaddEndpointUrl.next(value);\n  }\n  public clearaddEndpoint() {\n    this.subjectForaddEndpointUrl.next(null);\n  }\n  public getaddEndpoint(): Observable<any> {\n    return this.subjectForaddEndpointUrl.asObservable();\n  }\n/*****added by souresh******/\n  setuploadEndpont(value:any){\n    this.subjectForuploadEndpointUrl.next(value);\n  }\n  public clearuploadEndpoint(){\n    this.subjectForuploadEndpointUrl.next(null);\n  }\n  public getuploadEndpoint(): Observable <any> {\n    return this.subjectForuploadEndpointUrl.asObservable();\n  }\n   /********souresh end here********/\n\n\n  setupdateEndpoint(value: any) {\n    this.subjectForupdateEndpointUrl.next(value);\n  }\n  public clearupdateEndpoint() {\n    this.subjectForupdateEndpointUrl.next(null);\n  }\n  public getupdateEndpoint(): Observable<any> {\n    return this.subjectForupdateEndpointUrl.asObservable();\n  }\n\n  setdeletesingleEndpoint(value: any) {\n    this.subjectFordeletesingleEndpointUrl.next(value);\n  }\n  public cleardeletesingleEndpoint() {\n    this.subjectFordeletesingleEndpointUrl.next(null);\n  }\n  public getdeletesingleEndpoint(): Observable<any> {\n    return this.subjectFordeletesingleEndpointUrl.asObservable();\n  }\n\n  setupdatestatus_singleEndpoint(value: any) {\n    this.subjectForupdatestatusSingleEndpointUrl.next(value);\n  }\n  public clearupdatestatus_singleEndpoint() {\n    this.subjectForupdatestatusSingleEndpointUrl.next(null);\n  }\n  public getupdatestatus_singleEndpoint(): Observable<any> {\n    return this.subjectForupdatestatusSingleEndpointUrl.asObservable();\n  }\n\n  setgetdataEndpoint(value: any) {\n    this.subjectForGetdataEndpointUrl.next(value);\n  }\n  public cleargetdataEndpoint() {\n    this.subjectForGetdataEndpointUrl.next(null);\n  }\n  public getdataEndpoint(): Observable<any> {\n    return this.subjectForGetdataEndpointUrl.asObservable();\n  }\n\n\n\n  isTokenExpired() {\n\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n  }\n\n  addData(requestdata: any) {\n    console.log('in adddata apiservice');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken          //hard code written access-token(temp)\n      })\n    };\n\n    // console.log('httpoptions',httpOptions,this.serverUrl,requestdata);\n    var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n  /*******added by souresh************/\n  uploadFile(requestdata:any){\n    const httpOptions={\n        headers: new HttpHeaders({\n          'Content-Type':'application/json',\n          'access-token':this.accesstoken          //hard code written access-token(temp)\n        })\n    };\n    var result=this._http.post(this.serverUrl + this.uploadEndpointUrl,JSON.stringify(requestdata),httpOptions).pipe(map(res=>res));\n    return result;\n  }\n  /*******souresh end here********/\n  UpdateData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken          //hard code written access-token(temp)\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.updateendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  getData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.getdata_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n/*************** Added by himadri start here ***************/ \n  addLogin(requestdata: any) {\n    console.log('in addLogin apiservice');\n    const returnedTarget = Object.assign(requestdata,{'secret':this.cookieService.get('secret')});\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n        // 'Authorization': this.accesstoken          //hard code written access-token(temp)\n      })\n    };\n\n    // console.log(this.serverUrl,requestdata);\n    var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n  /*************** Added by himadri end here ***************/ \n\n/*************** Added by himadri start here ***************/ \nforgetPassword(requestdata: any) {\n  console.log('in forgetPassword apiservice');\n  const httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n      // 'Authorization': this.accesstoken          //hard code written access-token(temp)\n    })\n  };\n\n  // console.log(this.serverUrl,requestdata);\n  var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n  return result;\n}\n/*************** Added by himadri end here ***************/ \n\n\n  deleteSingleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.deletesingle_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteMultipleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.deletesingle_endpointUrl+'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForSingleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.updatestatus_single_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForMultipleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.updatestatus_single_endpointUrl+'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n  CustomRequest(requestdata: any, endpoint:any ) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'access-token': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl +endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  jwtTokenGet() {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':'application/json'\n      })\n    };\n    var result = this._http.get(this.serverUrl +'gettemptoken').pipe(map(res => res));\n    return result;\n  }\n\n\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators, MinLengthValidator, FormGroupDirective } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\nimport { ApiService } from './api.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n\n\n\n@Component({\n  selector: 'lib-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  public message: any = '';\n  //   FormGroupDirective: It is a directive that binds an existing FormGroup to a DOM element.\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\n\n  public fromTitleValue: any = '';\n  public serverURL: any = '';\n  public signUpRouteingUrlValue: any = '';\n  public forgetRouteingUrlValue: any = '';\n  public routerStatusValue: any = '';\n  public endpointValue: any;\n  public logoValue: any = '';\n  public cookieSetValue: any = '';\n  public buttonNameValue: any = '';\n  public defaultUrlValue = '';\n  private loader: any = null;\n  public secret: any;\n  @Input()\n  set forLoader(forLoaderVal: any) {\n    this.loader = (forLoaderVal) || '<no name set>';\n    this.loader = forLoaderVal;\n    // console.log('++++',this.loader)\n    // console.log('++++-----',this.loader)\n  }\n\n  @Input()         // Set the project name\n  set fromTitle(fromTitleVal: any) {\n    this.fromTitleValue = (fromTitleVal) || '<no name set>';\n    this.fromTitleValue = fromTitleVal;\n\n  }\n  @Input()      // set the from logo\n  set logo(logoVal: any) {\n    this.logoValue = logoVal;\n  }\n  @Input()\n  set buttonName(buttonNameVal: any) {\n    this.buttonNameValue = (buttonNameVal) || '<no name set>';\n    this.buttonNameValue = buttonNameVal\n  }\n\n  @Input()        // setting the server url from project\n  set fullUrl(fullUrlVal: any) {\n    this.serverURL = (fullUrlVal) || '<no name set>';\n    this.serverURL = fullUrlVal;\n\n  }\n  @Input()\n\n  set endpoint(endpointVal: any) {\n    this.endpointValue = endpointVal;\n  }\n\n  @Input()\n\n  public set cookieSet(v: any) {\n    this.cookieSetValue = v;\n  }\n\n\n\n  @Input()          // setting the navigate By Sign Up Url from project\n  set signUpRouteingUrl(routeingUrlval: any) {\n    this.signUpRouteingUrlValue = (routeingUrlval) || '<no name set>';\n    this.signUpRouteingUrlValue = routeingUrlval;\n    // console.log(this.signUpRouteingUrlValue)\n  }\n\n\n  @Input()          // setting the navigate By Forget Password Url from project\n  set forgetRouteingUrl(routeingUrlval: any) {\n    this.forgetRouteingUrlValue = (routeingUrlval) || '<no name set>';\n    this.forgetRouteingUrlValue = routeingUrlval;\n    // console.log(this.forgetRouteingUrlValue)\n  }\n\n  @Input()          // setting the navigate By Forget Password Url from project\n  set routerStatus(routerStatusval: any) {\n    this.routerStatusValue = (routerStatusval) || '<no name set>';\n    this.routerStatusValue = routerStatusval;\n    // console.log(this.routerStatusValue)\n  }\n\n  @Input()\n  set defaultLoginUrl(defaultUrlVal: any) {\n    this.defaultUrlValue = (defaultUrlVal) || '<no name set>';\n    this.defaultUrlValue = defaultUrlVal;\n    // console.log(this.defaultUrlValue)\n  }\n  public ipinfoidValue: any = '';\n  @Input()\n  public set ipinfoid(id: any) {\n    this.ipinfoidValue = id;\n    // console.log(this.ipinfoidValue)\n  }\n\n  public login_ip_info: any;\n\n\n\n  public loginForm: FormGroup;\n  public project_name: any = '';\n  public redirect_url: any = '';\n  private previousUrl: string = undefined;\n  private currentUrl: string = undefined;\n  public loginflag:boolean = false;\n\n  constructor(public fb: FormBuilder,\n    public http: HttpClient,\n    public router: Router,\n    public apiService: ApiService,\n    public cookieService: CookieService,\n    public route: ActivatedRoute) {\n\n\n\n    this.currentUrl = this.router.url;\n    router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        this.previousUrl = this.currentUrl;\n        this.currentUrl = event.url;\n      };\n    });\n    this.route.params.subscribe(params => {\n      this.redirect_url = params['path'];\n      // console.log('this.redirect_url',this.redirect_url)\n    });\n\n    this.loginForm = this.fb.group({\n      email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\n      password: ['', Validators.required]\n    })\n  }\n\n  ngOnInit() {\n\n    var url: any = \"https://ipinfo.io/?format=json&token=\" + this.ipinfoidValue;\n    this.http.get(url).subscribe((res) => {\n      this.login_ip_info = res;\n    });\n    this.apiService.clearServerUrl();       // Clear the server url\n    setTimeout(() => {\n      this.apiService.setServerUrl(this.serverURL);       // set the server url \n    }, 50);\n\n\n    this.apiService.clearaddEndpoint();       // clear the endpoint \n    setTimeout(() => {\n      this.apiService.setaddEndpoint(this.endpointValue);       // set the endpoint\n    }, 50);\n\n  }\n  randomString(length, chars) {\n    var mask = '';\n    if (chars.indexOf('a') > -1) mask += 'abcdefghijklmnopqrstuvwxyz';\n    if (chars.indexOf('A') > -1) mask += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    if (chars.indexOf('#') > -1) mask += '0123456789';\n    if (chars.indexOf('!') > -1) mask += '~`!@#$%^&*()_+-={}[]:\";\\'<>?,./|\\\\';\n    var result = '';\n    for (var i = length; i > 0; --i) result += mask[Math.floor(Math.random() * mask.length)];\n    return result;\n  }\n\n  /********* Login Form Submit start here*********/\n  loginFormSubmit() {\n\n\n    /**secret key workes here */\n    this.secret = this.randomString(9, 'aA#!');\n    this.cookieService.set('secret', this.secret, undefined,'/');\n    localStorage.setItem('secret', this.secret);\n    // this.stateGroup = this.myControl.valueChanges\n    // .pipe(\n    //   startWith(''),\n    //   map(value => this._filter(value))\n    // );\n\n    this.loader = 1;\n    let x: any;\n\n    for (x in this.loginForm.controls) {\n      this.loginForm.controls[x].markAsTouched();\n    }\n\n    if (this.loginForm.valid) {\n      this.loginflag = true;\n      let data: any = this.loginForm.value;\n      data.login_data = this.login_ip_info;\n      data.login_time = new Date().getTime();\n      this.apiService.addLogin(data).subscribe((response: any) => {\n        if (response.status == \"success\") {\n          this.cookieService.set('jwtToken', response.token, undefined,'/');\n          localStorage.setItem('jwtToken', response.token);\n          if (this.router.url == this.defaultUrlValue) {\n            for (const key1 in this.routerStatusValue.data) {\n              if (response.item[0].type === this.routerStatusValue.data[key1].type) {\n                for (let [keys, values] of Object.entries(this.routerStatusValue.data[key1].cookies)) {\n                  for (let [key, value] of Object.entries(response.item[0])) {\n                    if (values == key) {\n                      this.cookieService.set(keys, JSON.stringify(value), undefined,'/');\n                      localStorage.setItem(keys, JSON.stringify(value));\n                    }\n                  }\n                }\n                if (this.cookieService.get('redirectUrl') == null || this.cookieService.get('redirectUrl') == '' || this.cookieService.get('redirectUrl') == undefined || this.cookieService.get('redirectUrl').length < 1) {\n                  this.router.navigateByUrl('/' + this.routerStatusValue.data[key1].routerNav);\n                } else {\n                  this.router.navigateByUrl(this.cookieService.get('redirectUrl'));\n                }\n              }\n            }\n\n          } else {\n            this.router.navigateByUrl(this.redirect_url);\n          }\n          // this.loader = 0;\n\n\n          // this is use for reset the from\n          this.formDirective.resetForm();\n          this.message = '';\n        } else {\n          // display error message on html\n          this.loginflag = false;\n\n          this.message = response.msg;\n        }\n      });\n    }\n\n  }\n\n\n  inputUntouched(val: any) {\n    this.loginForm.controls[val].markAsUntouched();\n  }\n\n  // This is use for navigate this component to forget component \n  forgetpassword() {\n    this.router.navigateByUrl('/' + this.forgetRouteingUrlValue.path);\n  }\n\n  // This is use for navigate this component to sign-Up component \n  signup() {\n    this.router.navigateByUrl('/' + this.signUpRouteingUrlValue.path);\n  }\n\n  customFunction(link: any) {\n    this.router.navigateByUrl('/' + link);\n  }\n\n\n  ngOnDestroy() {\n    console.log(\"AppComponent:OnDestroy\");\n    this.loginflag = false;\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n Use of this source code is governed by an MIT-style license that\n can be found in the LICENSE file at http://angular.io/license */\n","import { Component, OnInit, Input, Inject, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormGroupDirective } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material';\nimport { ApiService } from '../api.service';\n\n\n\nexport interface DialogData {\n  value: string;\n  Url: any;\n}\n\n@Component({\n  selector: 'lib-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n  public value: any='';\n  public link: any='';\n  public Url: any='';\n  public message: any = '';\n\n  //   FormGroupDirective: It is a directive that binds an existing FormGroup to a DOM element.\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\n\n  public formTitleValue: any = '';\n  public serverUrlValue: any = '';\n  public forgetRouteingUrlValue: any = '';\n  public loginRouteingUrlValue: any = '';\n  public addEndpointValue: any = '';\n  public logoValue: any = '';\n  public typevalue: any = '';\n  public buttonNameValue: any = '';\n\n  @Input()         // Set the Form name\n  set formTitle(formTitleVal: any) {\n    this.formTitleValue = (formTitleVal) || '<no name set>';\n    this.formTitleValue = formTitleVal;\n    // console.log(this.formTitleValue);\n\n  }\n\n  @Input()\n  set buttonName (buttonNameVal :any){\n    this.buttonNameValue = (buttonNameVal) || '<no name set>';\n    this.buttonNameValue = buttonNameVal\n  }\n\n  @Input()        // setting the server url from project\n  set serverUrl(serverUrlVal: any) {\n    this.serverUrlValue = (serverUrlVal) || '<no name set>';\n    this.serverUrlValue = serverUrlVal;\n    // console.log(this.serverUrlValue);\n\n  }\n@Input()      // set the from logo\n\nset logo(logoVal : any) {\n  this.logoValue = logoVal;\n}\n\n@Input()      // set the from logo\n\nset modaleLogo(modaleLogoVal : any) {\n  this.link = modaleLogoVal;\n}\n\n@Input()\nset userType(typeval: any) {\n  this.typevalue = typeval;\n}\n\n\n  @Input()        // set the endpoint And source\n  public set addEndpoint(addEndpointVal: any) {\n    this.addEndpointValue = addEndpointVal;\n    console.log(this.addEndpointValue)\n  }\n\n\n  @Input()          // setting the navigate By Forget Password Url from project\n  set forgetRouteingUrl(routeingUrlval: any) {\n    this.forgetRouteingUrlValue = (routeingUrlval) || '<no name set>';\n    this.forgetRouteingUrlValue = routeingUrlval;\n    // console.log(this.forgetRouteingUrlValue);\n  }\n\n  @Input()          // setting the navigate By login Url from project\n  set loginRouteingUrl(routeingUrlval: any) {\n    this.loginRouteingUrlValue = (routeingUrlval) || '<no name set>';\n    this.loginRouteingUrlValue = routeingUrlval;\n    // console.log(this.loginRouteingUrlValue);\n  }\n\n\n\n  public signUpForm: FormGroup;\n\n  constructor(public fb: FormBuilder, public http: HttpClient, public router: Router, public dialog: MatDialog, public apiService: ApiService) {\n    this.signUpForm = this.fb.group({\n      email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\n      firstname: ['', Validators.required],\n      lastname: ['', Validators.required],\n      password: ['', Validators.required]\n    })\n\n\n    this.http.get(this.serverUrlValue + 'gettemptoken').subscribe(res=>{\n      console.log(res);\n    });\n  }\n\n  ngOnInit() {\n    this.apiService.clearServerUrl();       //  Clear the server url\n    setTimeout(() => {\n      this.apiService.setServerUrl(this.serverUrlValue);        //  set the server url\n    }, 50);\n    // console.log(this.serverURL);\n\n\n    this.apiService.clearaddEndpoint();       //  Clear the endpoint\n    setTimeout(() => {\n      this.apiService.setaddEndpoint(this.addEndpointValue.endpoint);   //  set the endpoint\n    }, 50);\n\n    \n\n  }\n\n\n/********* Sign Up Form Submit start here*********/ \n  signUpFormSubmit() {\n    this.http.get(this.serverUrlValue + 'gettemptoken').subscribe(res=>{\n      console.log(res);\n    });\n    console.log('jhgj')\n    this.apiService.jwtTokenGet().subscribe((response) => {});\n    // use for validation checking\n    for (let x in this.signUpForm.controls) {\n      this.signUpForm.controls[x].markAsTouched();\n    }\n    if (this.signUpForm.valid) {\n      // let link: any = this.fullUrlValue;\n      let allData: any = this.signUpForm.value;\n      allData.type = this.typevalue;\n      console.log(allData);\n\n      let data: any = {\n        'data': allData,\n        \"source\": this.addEndpointValue.source\n      };\n      console.log(data);\n      this.apiService.addData(data).subscribe((response) => {\n        let result: any = {};\n        result = response;\n        console.log(result);\n\n        if (result.status == \"success\") {\n          const dialogRef = this.dialog.open(successModalComponent, {\n            width: '250px',\n            data: {value: result.status, Url: this.link}\n          });\n          // this.router.navigateByUrl('/' + )     // navigate to dashboard url \n\n\n          // this is use for reset the from\n          this.formDirective.resetForm();\n        } else {\n          // display error message on html\n          this.message = result.msg;\n        }\n      })\n\n    }\n  }\n\n\n/********* Sign Up Form Submit end here*********/ \n\n  // This is use for navigate this component to forget component \n  forgetpassword() {\n    this.router.navigateByUrl('/' + this.forgetRouteingUrlValue.path);\n  }\n\n\n  // This is use for navigate this component to forget component \n  login() {\n    this.router.navigateByUrl('/' + this.loginRouteingUrlValue.path);\n  }\n\n  inputUntouched(val: any) {\n    this.signUpForm.controls[val].markAsUntouched();\n  }\n  customFunction(link: any) {\n    this.router.navigateByUrl('/'+ link);\n  }\n}\n\n\n@Component({\n  selector: 'successModal',\n  templateUrl: '../successModal.html',\n\n})\nexport class successModalComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<successModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n      console.log(data)\n     }\n\n    \n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n\n\n","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormGroupDirective } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../api.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'lib-forget-password',\n  templateUrl: './forget-password.component.html',\n  styleUrls: ['./forget-password.component.css']\n})\nexport class ForgetPasswordComponent implements OnInit {\n  public message: any = '';\n  public buttonNameValue: any = '';\n\n  //   FormGroupDirective: It is a directive that binds an existing FormGroup to a DOM element.\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\n\n  public forgetPasswordForm: FormGroup;\n  public formTitleValue: any = '';          // This is From title\n  public serverUrlValue: any = '';          //  This is Server url\n  public signUpRouteingUrlValue: any = '';  // setting the navigate By Sign Up Url from project\n  public loginRouteingUrlValue: any = '';  // setting the navigate By login Url from project\n  private domainUrlValue: any = '';          // This is reset password url\n  public addEndpointValue: any = '';        // This is endpoint url\n  public logoValue: any = '';               // This is from logo url\n  public durationInSeconds = 5;             // This is SnackBar set time\n\n\n  @Input()\nset buttonName (buttonNameVal :any){\n  this.buttonNameValue = (buttonNameVal) || '<no name set>';\n  this.buttonNameValue = buttonNameVal\n}\n\n  @Input()         // Set the project email Doman URL\n  set domainUrl(domainUrlVal: any) {\n    this.domainUrlValue = (domainUrlVal) || '<no name set>';\n    this.domainUrlValue = domainUrlVal;\n    // console.log(this.domanUrlValue);\n  }\n  @Input()         // Set the project name\n  set formTitle(formTitleVal: any) {\n    this.formTitleValue = (formTitleVal) || '<no name set>';\n    this.formTitleValue = formTitleVal;\n\n  }\n\n  @Input()        // setting the server url from project\n  set serverUrl(serverUrlVal: any) {\n    this.serverUrlValue = (serverUrlVal) || '<no name set>';\n    this.serverUrlValue = serverUrlVal;\n\n  }\n\n  @Input()      // set the from logo\n\n  set logo(logoVal: any) {\n    this.logoValue = logoVal;\n  }\n\n  @Input()          // set the endpoint and source\n\n  set addEndpoint(addEndpointval: any) {\n    this.addEndpointValue = addEndpointval;\n  }\n\n\n  @Input()          // setting the navigate By Sign Up Url from project\n  set signUpRouteingUrl(routeingUrlval: any) {\n    this.signUpRouteingUrlValue = (routeingUrlval) || '<no name set>';\n    this.signUpRouteingUrlValue = routeingUrlval;\n    // console.log(this.signUpRouteingUrlValue)\n  }\n\n  @Input()          // setting the navigate By Sign Up Url from project\n  set loginRouteingUrl(routeingUrlval: any) {\n    this.loginRouteingUrlValue = (routeingUrlval) || '<no name set>';\n    this.loginRouteingUrlValue = routeingUrlval;\n    // console.log(this.loginRouteingUrlValue)\n  }\n\n  constructor(\n    public fb: FormBuilder,\n    public router: Router,\n    public apiService: ApiService,\n    private snackBar: MatSnackBar\n  ) {\n\n\n\n    this.forgetPasswordForm = this.fb.group({\n      email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\n\n    });\n\n\n\n\n  }\n\n  ngOnInit() {\n    this.apiService.clearServerUrl();       //  Clear the server url\n    setTimeout(() => {\n      this.apiService.setServerUrl(this.serverUrlValue);        //  set the server url\n    }, 50);\n    // console.log(this.serverURL);\n\n\n    this.apiService.clearaddEndpoint();       //  Clear the endpoint\n    setTimeout(() => {\n      this.apiService.setaddEndpoint(this.addEndpointValue.endpoint);   //  set the endpoint\n    }, 50);\n  }\n\n  /********* Forget password  Form Submit start here*********/\n  forgetPasswordSubmit() {\n    let x: any;\n\n    //  This for-loop use for from blank or properly validated checking  \n    for (x in this.forgetPasswordForm.controls) {\n      this.forgetPasswordForm.controls[x].markAsTouched();\n    }\n    if (this.forgetPasswordForm.valid) {    //    validation checking\n\n      // this.openSnackBar();              // open snack-bar function\n\n      let link: any = this.serverUrlValue;\n      let data: any = this.forgetPasswordForm.value;\n\n      data.domainUrl = this.domainUrlValue;\n\n      this.apiService.forgetPassword(data).subscribe((response) => {\n        // console.log(response);\n        let result: any = {};\n        result = response;\n\n        if (result.status == \"success\") {\n          // this.openSnackBar();             // open snack-bar function\n          // this is use for reset the from\n          this.formDirective.resetForm();\n          this.message = '';         // clear the from\n          this.openSnackBar1(result.msg);\n        } else {\n\n          // display error message on html\n          this.message = result.msg;      // show the error message\n\n        }\n      });\n    }\n  }\n\n  /********* Forget password  Form Submit end here*********/\n\n\n  /********* openSnackBar function open start here*********/\n\n\n  openSnackBar() {\n    this.snackBar.openFromComponent(snackBarComponent, {\n      duration: this.durationInSeconds * 1000,\n    });\n  }\n /********* openSnackBar function open end here*********/\n\n\n\n\n openSnackBar1(message: string) {\n  this.snackBar.open(message, 'ok', {\n    duration: this.durationInSeconds * 1000,\n  });\n}\n\n\n\n\n  // This is use for navigate this component to sign-Up component \n  signup() {\n    this.router.navigateByUrl('/' + this.signUpRouteingUrlValue);\n  }\n\n    // This is use for navigate this component to login component \n    login() {\n      this.router.navigateByUrl('/' + this.loginRouteingUrlValue);\n    }\n\n  inputUntouched(val: any) {\n    this.forgetPasswordForm.controls[val].markAsUntouched();\n  }\n\n\n  customFunction(link: any) {\n    this.router.navigateByUrl('/'+ link);\n  }\n\n\n}\n\n\n@Component({\n  selector: 'snack-bar-modale',\n  templateUrl: 'forget-passwordModale.html',\n  styles: [`\n    .example {\n      color: aliceblue;\n      background-color: yellowgreen;\n    }\n  `],\n})\nexport class snackBarComponent { }\n","import { Component, OnInit, Input, ViewChild, Inject } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup, FormGroupDirective, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ApiService } from '../api.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'lib-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\n\n\n\nexport class ResetPasswordComponent implements OnInit {\n  //   FormGroupDirective: It is a directive that binds an existing FormGroup to a DOM element.\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\n  public resetPasswordForm: FormGroup;\n  public fromTitleNameValue: any = '';\n  public serverUrlValue: any = '';\n  public message: any = '';\n  public addEndpointValue: any = '';\n\n  public logoValue: any = '';\n  // public signUpRouteingUrlValue: any = '';\n  public durationInSeconds = 5;             // This is SnackBar set time\n  public validationMessageValue: any ='';\n\n  @Input()         // Set the Form name\n  set fromTitleName(fromTitleNameVal: any) {\n    this.fromTitleNameValue = (fromTitleNameVal) || '<no name set>';\n    this.fromTitleNameValue = fromTitleNameVal;\n    console.log(this.fromTitleNameValue);\n  }\n\n\n  @Input()        // setting the server url from project\n  set serverUrl(serverUrlVal: any) {\n    this.serverUrlValue = (serverUrlVal) || '<no name set>';\n    this.serverUrlValue = serverUrlVal;\n    console.log(this.serverUrlValue);\n\n  }\n\n  @Input()        // set the endpoint and source\n\n  public set addEndpoint(addEndpointVal: any) {\n    this.addEndpointValue = addEndpointVal;\n  }\n\n  @Input()      // set the from logo\n\n  set logo(logoVal: any) {\n    this.logoValue = logoVal;\n  }\n\n  @Input()      // set the from logo\n\n  set validationMessage(validationMessageVal: any) {\n    this.validationMessageValue = validationMessageVal;\n  } \n\n\n  // @Input()          // setting the navigate By Sign Up Url from project\n  // set validationMessage(validationMessageval: any) {\n  //   this.validationMessageValue = (validationMessageval) || '<no name set>';\n  //   this.validationMessageValue = validationMessageval;\n  //   console.log(this.validationMessageValue);\n  // }\n  public accesscode: string;\n\n  constructor(public fb: FormBuilder, public http: HttpClient, public router: Router, public route: ActivatedRoute, public apiService: ApiService, private snackBar: MatSnackBar) {\n\n    this.route.params.subscribe(params => {\n\n      this.accesscode = params['token'];\n      // console.log(this.accesscode);\n    })\n\n\n    this.resetPasswordForm = this.fb.group({\n      password: ['', [Validators.required, this.PasswordStrengthValidator]],\n      // password: ['', Validators.required],\n      confirmPassword: ['', Validators.required],\n    }, {\n      validator: this.machpassword('password', 'confirmPassword')\n    })\n\n    console.log('++++++++', this.resetPasswordForm)\n  }\n\n  ngOnInit() {\n    this.apiService.clearServerUrl();       // Clear the server url\n    setTimeout(() => {\n      this.apiService.setServerUrl(this.serverUrlValue);       // set the server url \n    }, 50);\n    // console.log(this.serverURL);\n\n\n    this.apiService.clearaddEndpoint();       // clear the endpoint \n    setTimeout(() => {\n      this.apiService.setaddEndpoint(this.addEndpointValue.endpoint);       // set the endpoint\n    }, 50);\n    // console.log(this.addEndpointData.endpoint);\n\n  }\n  //  this function is use for mach password and confirm Password \n\n  machpassword(passwordkye: string, confirmpasswordkye: string) {\n    return (group: FormGroup) => {\n      let passwordInput = group.controls[passwordkye],\n        confirmpasswordInput = group.controls[confirmpasswordkye];\n      if (passwordInput.value !== confirmpasswordInput.value) {\n        return confirmpasswordInput.setErrors({ notEquivalent: true });\n      }\n      else {\n        return confirmpasswordInput.setErrors(null);\n      }\n    };\n  }\n\n\n  PasswordStrengthValidator = function (control: AbstractControl): ValidationErrors  | null {\n    let value: string = control.value || '';\n    if (!value) {\n      return null\n    }\nconsole.log(control)\n    // Upper Case Validation\n    // if (typeof (this.validationMessageValue) != 'undefined' && this.validationMessageValue.upperCaseCharacters != null && typeof (this.validationMessageValue.upperCaseCharacters) != 'undefined' && this.validationMessageValue.upperCaseCharacters.test(value) === false) {\n    //   return { passwordStrength: this.validationMessageValue.upperCaseCharactersMessage };\n    // }\n\n\n    // // Lower Case Validation\n    // if (typeof (this.validationMessageValue) != 'undefined' && this.validationMessageValue.lowerCaseCharacters != null && typeof (this.validationMessageValue.lowerCaseCharacters) != 'undefined' && this.validationMessageValue.lowerCaseCharacters.test(value) === false) {\n    //   return { passwordStrength: this.validationMessageValue.lowerCaseCharactersMessage };\n    // }\n\n    // // Number of Characters Validation\n    // if (typeof (this.validationMessageValue) != 'undefined' && this.validationMessageValue.numberCharacters != null && typeof (this.validationMessageValue.numberCharacters) != 'undefined' && this.validationMessageValue.numberCharacters.test(value) === false) {\n    //   console.log(value, '+++')\n    //   return { passwordStrength: this.validationMessageValue.numberCharactersMessage };\n    // }\n\n\n    // // Psecial Case Validation\n    // if (typeof (this.validationMessageValue) != 'undefined' && this.validationMessageValue.specialCharacters != null && typeof (this.validationMessageValue.specialCharacters) != 'undefined' && this.validationMessageValue.specialCharacters.test(value) === false) {\n    //   console.log(value, '+++')\n    //   return { passwordStrength: this.validationMessageValue.specialCharactersMessage };\n    // }\n\n    // // Min Number Validation\n    // if (typeof (this.validationMessageValue) != 'undefined' && this.validationMessageValue.minLengthOfCharacters != null && typeof (this.validationMessageValue.minLengthOfCharacters) != 'undefined' && value.length <= this.validationMessageValue.minLengthOfCharacters) {\n    //   console.log(value, '+++')\n    //   return { passwordStrength: this.validationMessageValue.minLengthOfCharactersMessage };\n    // }\n\n\n    // // Max Number Validation\n    // if (typeof (this.validationMessageValue) != 'undefined' && this.validationMessageValue.maxLengthOfCharacters != null && typeof (this.validationMessageValue.maxLengthOfCharacters) != 'undefined' && value.length >= this.validationMessageValue.maxLengthOfCharacters) {\n    //   console.log(value, '+++')\n    //   return { passwordStrength: this.validationMessageValue.maxLengthOfCharactersMessage };\n    // }\n\n    let upperCaseCharacters = /[A-Z]+/g\n    if (upperCaseCharacters.test(value) === false) {\n      return { passwordStrength: `Password at least one Upper case character` };\n    }\n\n    let lowerCaseCharacters = /[a-z]+/g\n    if (lowerCaseCharacters.test(value) === false) {\n      return { passwordStrength: `Password at least one lower case character` };\n    }\n\n\n    let numberCharacters = /[0-9]+/g\n    if (numberCharacters.test(value) === false) {\n      return { passwordStrength: `Password at least one number characters` };\n    }\n\n    let specialCharacters = /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]+/\n    if (specialCharacters.test(value) === false) {\n      return { passwordStrength: `Password at least one special character` };\n    }\n\nif (value.length <=6 ) {\n      return { passwordStrength: `Password must contain 6 character` };\n    }\n    \n    return null;\n  }\n\n\n\n\n  /********* Reset Password Form Submit start here*********/\n  resetPasswordSubmit() {\n    console.log(this.resetPasswordForm.value);\n    let x: any;\n    for (x in this.resetPasswordForm.controls) {\n      this.resetPasswordForm.controls[x].markAsTouched();\n    }\n    if (this.resetPasswordForm.valid) {\n      let data1: any = { \"password\": this.resetPasswordForm.value.password, \"accesscode\": this.accesscode }\n      let data: any = {\n        'data': data1,\n        \"source\": this.addEndpointValue.source\n      }\n\n\n      // data.accesscode = this.accesscode;\n\n      this.apiService.addData(data).subscribe((response) => {\n        let result: any = {};\n        result = response;\n        console.log(result);\n        if (result.status == \"success\") {\n          if (this.addEndpointValue.redirect_url != null) {\n            this.router.navigateByUrl(this.addEndpointValue.redirect_url);\n          }\n          this.openSnackBar();\n          this.formDirective.resetForm();       // Use for reset the form\n          this.message = '';\n        } else {\n          this.message = result.msg;\n        }\n      })\n    }\n  }\n\n\n  openSnackBar() {\n    this.snackBar.openFromComponent(snackBarResetComponent, {\n      duration: this.durationInSeconds * 1000,\n    });\n  }\n\n\n  /********* Reset Password Form Submit end here*********/\n\n\n  inputUntouched(val: any) {\n    this.resetPasswordForm.controls[val].markAsUntouched();\n  }\n\n\n\n\n}\n\n@Component({\n  selector: 'snack-bar-modale',\n  template: `Password changed successfully`,\n  styles: [`\n    .example {\n      color: aliceblue;\n      background-color: yellowgreen;\n    }\n  `],\n})\nexport class snackBarResetComponent { }\n","import { Injectable } from '@angular/core';\nimport { Router, RouterEvent, NavigationEnd } from '@angular/router';\n\n/** A router wrapper, adding extra functions. */\n@Injectable()\nexport class prevroute {\n\n  private previousUrl: string = undefined;\n  private currentUrl: string = undefined;\n\n  constructor(private router : Router) {\n    this.currentUrl = this.router.url;\n    router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        this.previousUrl = this.currentUrl;\n        this.currentUrl = event.url;\n      };\n    });\n  }\n\n  public getPreviousUrl(){\n    console.log('=========================');\n    console.log('prev- '+this.previousUrl);\n    console.log('currnt- '+this.currentUrl);\n    console.log('=========================');\n    return this.previousUrl;\n  }\n}","import { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { LoginComponent } from './login.component';\nimport { DemoMaterialModule } from './material-module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SignUpComponent, successModalComponent } from './sign-up/sign-up.component';\nimport { ForgetPasswordComponent, snackBarComponent } from './forget-password/forget-password.component';\nimport { ResetPasswordComponent, snackBarResetComponent } from './reset-password/reset-password.component';\nimport { ApiService } from './api.service';\nimport { prevroute } from './prevroute';\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    SignUpComponent,\n    ForgetPasswordComponent,\n    ResetPasswordComponent,\n    successModalComponent,\n    snackBarComponent,\n    snackBarResetComponent,\n    // commonModalComponent\n\n  ],\n  imports: [\n    DemoMaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    HttpClientModule\n  ],\n  exports: [LoginComponent, SignUpComponent, ForgetPasswordComponent, ResetPasswordComponent],\n  providers: [ApiService, prevroute],\n  bootstrap: [],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA],\n  entryComponents: [ successModalComponent, snackBarComponent, snackBarResetComponent]\n})\nexport class LoginModule { }\n"]}