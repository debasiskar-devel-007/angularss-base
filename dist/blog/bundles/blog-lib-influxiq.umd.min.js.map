{"version":3,"sources":["ng://blog-lib-influxiq/lib/blog.service.ts","ng://blog-lib-influxiq/lib/api.service.ts","ng://blog-lib-influxiq/lib/blog.component.ts","ng://blog-lib-influxiq/lib/material-module.ts","ng://blog-lib-influxiq/lib/add-blog/add-blog.component.ts","ng://blog-lib-influxiq/lib/app-routing.module.ts","ng://blog-lib-influxiq/lib/addedit-blogmanagement/addedit-blogmanagement.component.ts","ng://blog-lib-influxiq/lib/youtubeplayer/youtubeplayer.component.ts","ng://blog-lib-influxiq/lib/listing-blogmanagementlib/listing-blogmanagementlib.component.ts","ng://blog-lib-influxiq/lib/blog.module.ts"],"names":["BlogService","prototype","isTokenExpired","addData","endpoint","requestdata","httpOptions","headers","HttpHeaders","Content-Type","Authorization","this","accesstoken","_http","post","serverUrl","JSON","stringify","pipe","map","res","UpdateData","getData","deleteSingleData","deleteMultipleData","UpdateStatusForSingleData","UpdateStatusForMultipleData","CustomRequest","getDataByEndpoint","Injectable","args","providedIn","HttpClient","CookieService","_authHttp","cookieService","progress","uploaderror","get","fileservername","getdata_endpointUrl","ApiService","setServerUrl","value","subjectForServerUrl","next","clearServerUrl","getServerUrl","asObservable","setaddEndpoint","subjectForaddEndpointUrl","clearaddEndpoint","getaddEndpoint","setuploadEndpont","subjectForuploadEndpointUrl","clearuploadEndpoint","getuploadEndpoint","setupdateEndpoint","subjectForupdateEndpointUrl","clearupdateEndpoint","getupdateEndpoint","setdeletesingleEndpoint","subjectFordeletesingleEndpointUrl","cleardeletesingleEndpoint","getdeletesingleEndpoint","setupdatestatus_singleEndpoint","subjectForupdatestatusSingleEndpointUrl","clearupdatestatus_singleEndpoint","getupdatestatus_singleEndpoint","setgetdataEndpoint","subjectForGetdataEndpointUrl","cleargetdataEndpoint","getdataEndpoint","console","log","addendpointUrl","uploadFile","uploadEndpointUrl","updateendpointUrl","deletesingle_endpointUrl","updatestatus_single_endpointUrl","getDataWithoutToken","_this","Subject","subscriptionServer","subscribe","message","result","subscriptionaddEndpoint","subscriptionuploadEndpoint","subscriptionupdateEndpoint","subscriptiondeletesingleEndpoint","subscriptionupdatestatusSingleEndpoint","subscriptionGetdataEndpoint","Object","defineProperty","BlogComponent","receivedData","i","datasource","push","name","parentcategoryname","val","blogListConfig","apiUrl","apiBaseUrl","endpointc","listEndPoint","datacollection","blogcategory_detail_skip","listArray_skip","listArray_modify_header","blogtitle","priority","status","blogcat_count","date","description","statusarr","updateurl","updateEndpoint","editUrl","jwtToken","deleteEndPoint","date_search_source","search_settings","textsearch","label","field","selectsearch","values","loader","ngOnInit","apiService","condition","limit","skip","sort","type","date_search_source_count","count","error","Component","selector","template","Input","blodata","sortdata","options","limitcond","pagecount","libdata","basecondition","updateendpoint","hideeditbutton","updateendpointmany","deleteendpointmany","tableheaders","detailview_override","key","DemoMaterialModule","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","AddBlogComponent","generateForm","getParentData","configData","action","buttonText","successMessage","setDefaultValue","defaultData","header_txt","defaultValue","blogCatForm","patchValue","parent_id","formBuilder","group","Validators","required","maxLength","getConfig","openDialog","x","dialogRef","dialog","open","Modal2","width","data","msg","afterClosed","blogService","endpoint2","response","getParentCatArr","redirectToListingPage","router","navigateByUrl","callBack","onSubmit","controls","markAsTouched","invalid","parseInt","postData","source","assign","sourceobj","setTimeout","close","navigate","alert","inputBlur","markAsUntouched","FormBuilder","Router","MatDialog","editorconfig","extraAllowedContent","onNoClick","MatDialogRef","Inject","MAT_DIALOG_DATA","appRoutes","path","component","AppRoutingModule","imports","RouterModule","forRoot","AddeditBlogmanagementComponent","serverUrlData","blogCat","categoryUrlData","endpointUrlval","getDataEndpointData","addEndpointData","tagsEndpointData","listval","listUrl","apiservice","action2","getBlogCategory","getTagsCount","headerText","flag","params_id","setData","_id","blogManagementForm","blogcat","featured","blogs_image","blogs_file","author","length","img_var","basepath","image","image_name","image_type","images_array_edit","images_array","i2","file_array_edit","file_array","file","vid","video","addYoutubeVideo","video_url","video_title","video_description","tags","forEach","element","tags_array","filteredOptions","myControl","valueChanges","startWith","_filter","filterValue","toLowerCase","filter","option","indexOf","imageConfigData","fileConfigData","Modal","height","trackByFn","index","vid_url","vid_tit","vid_desc","deleteCreds","removeAt","blogCategoryArray","editDatavals","loop","files","concat","upload","valid","messageText","id","isSubmitted","snackBar","duration","showval","event","keyCode","target","preview_video","video_index","clearTags","splice","openSnackBar","openFromComponent","YoutubeComponent","panelClass","clear_image","pop","clearFileTags","ActivatedRoute","MatSnackBar","http","activatedRoute","video_prefix","FormControl","testTag","statuschecked","array","videoid","warn","YoutubeplayerComponent","sanitizer","bypassSecurityTrustResourceUrl","DomSanitizer","ListingBlogmanagementlibComponent","blogcategory","authval","arr","filteredArray","item","pos","category_names","wesitesVal","website","tableName","date added","profile picture","featured search","createdon_datetime","description_html","blog_detail_skip","admintablenameTableName","view","datesearch","startdatelabel","enddatelabel","submit","search","pendingmodelapplicationarray_detail_datatype","tag_data","hideviewbutton","custombuttons","datatype","datafields","cond","condval","BlogModule","declarations","ListingModule","HttpClientModule","FormsModule","ReactiveFormsModule","BrowserModule","FileUploadModule","CommonModule","CKEditorModule","providers","entryComponents"],"mappings":"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","sourcesContent":["\n\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpClientModule } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { CookieService } from 'ngx-cookie-service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlogService {\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress: any = [];\n  public uploadtype;\n  public uploaderror: any = '';\n  public accesstoken: any = this.cookieService.get('jwtToken');;\n  public fileservername: any = [];\n  public serverUrl: any = '';\n  public addendpointUrl: any;\n  public updateendpointUrl: any;\n  public deletesingle_endpointUrl: any;\n  public updatestatus_single_endpointUrl: any;\n  public deletemultiple_endpointUrl: any;\n  public updatestatus_multiple_endpointUrl: any;\n  public getdata_endpointUrl: any = 'datalist';\n\n  constructor(private _http: HttpClient, private _authHttp: HttpClient,private cookieService : CookieService) { }\n\n  isTokenExpired() {\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n  }\n\n  addData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  getData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteSingleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteMultipleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForSingleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForMultipleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint + 'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  CustomRequest(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  getDataByEndpoint(endpoint: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n}\n","import { ElementRef, EventEmitter, Injectable, Input, ViewChild } from '@angular/core';\nimport { switchMap, map, takeWhile } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n// for setting observables to get serverurl and endpointurl from app\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport{CookieService} from 'ngx-cookie-service';\n\n\n@Injectable({   \n  providedIn: 'root'\n})\nexport class ApiService {\n\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress: any = [];\n  public uploadtype;\n  public uploaderror: any = '';\n  public accesstoken:any=this.cookieService.get('jwtToken');\n  fileservername: any = [];\n  serverUrl: any;\n  addendpointUrl: any;\n  uploadEndpointUrl:any; //souresh\n  updateendpointUrl: any;\n  deletesingle_endpointUrl: any;\n  updatestatus_single_endpointUrl: any;\n  deletemultiple_endpointUrl: any;\n  updatestatus_multiple_endpointUrl: any;\n  getdata_endpointUrl: any;\n  private subjectForServerUrl = new Subject<any>();\n  private subjectForaddEndpointUrl = new Subject<any>();\n  private subjectForuploadEndpointUrl = new Subject<any>();  //added by souresh\n  private subjectForupdateEndpointUrl = new Subject<any>();\n  private subjectFordeletesingleEndpointUrl = new Subject<any>();\n  private subjectForupdatestatusSingleEndpointUrl = new Subject<any>();\n  private subjectForGetdataEndpointUrl = new Subject<any>();\n  public subscriptionServer: Subscription;\n  public subscriptionaddEndpoint: Subscription;\n  public subscriptionuploadEndpoint: Subscription;   //added by souresh\n  public subscriptionupdateEndpoint: Subscription;\n  public subscriptiondeletesingleEndpoint: Subscription;\n  public subscriptionupdatestatusSingleEndpoint: Subscription;\n  public subscriptionGetdataEndpoint: Subscription;\n\n  constructor(private _http: HttpClient,\n    private _authHttp: HttpClient,private cookieService :CookieService) {\n    this.subscriptionServer = this.getServerUrl().subscribe(message => {\n     let result: any;\n      result = message;\n      if (result != null) {\n        this.serverUrl = result;\n      } else {\n        this.serverUrl = null;\n      }\n    });\n    this.subscriptionaddEndpoint = this.getaddEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.addendpointUrl = result;\n      } else {\n        this.addendpointUrl = null;\n      }\n    });\n    /*********added by souresh***********/\n    this.subscriptionuploadEndpoint=this.getuploadEndpoint().subscribe(message=>{\n      let result:any;\n      result=message;\n        if(result!=null){\n          this.uploadEndpointUrl = result;\n        } else{\n          this.uploadEndpointUrl = null;\n        }\n    })\n    /************souresh end here**************/\n    this.subscriptionupdateEndpoint = this.getupdateEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.updateendpointUrl = result;\n      } else {\n        this.updateendpointUrl = null;\n      }\n    });\n    this.subscriptiondeletesingleEndpoint = this.getdeletesingleEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.deletesingle_endpointUrl = result;\n      } else {\n        this.deletesingle_endpointUrl = null;\n      }\n    });\n    this.subscriptionupdatestatusSingleEndpoint = this.getupdatestatus_singleEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.updatestatus_single_endpointUrl = result;\n      } else {\n        this.updatestatus_single_endpointUrl = null;\n      }\n    });\n    this.subscriptionGetdataEndpoint = this.getdataEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.getdata_endpointUrl = result;\n      } else {\n        this.getdata_endpointUrl = null;\n      }\n    });\n\n    \n  }\n\n  setServerUrl(value: any) {\n    this.subjectForServerUrl.next(value);\n  }\n  public clearServerUrl() {\n    this.subjectForServerUrl.next(null);\n  }\n  public getServerUrl(): Observable<any> {\n    return this.subjectForServerUrl.asObservable();\n  }\n\n  setaddEndpoint(value: any) {\n    this.subjectForaddEndpointUrl.next(value);\n  }\n  public clearaddEndpoint() {\n    this.subjectForaddEndpointUrl.next(null);\n  }\n  public getaddEndpoint(): Observable<any> {\n    return this.subjectForaddEndpointUrl.asObservable();\n  }\n/*****added by souresh******/\n  setuploadEndpont(value:any){\n    this.subjectForuploadEndpointUrl.next(value);\n  }\n  public clearuploadEndpoint(){\n    this.subjectForuploadEndpointUrl.next(null);\n  }\n  public getuploadEndpoint(): Observable <any> {\n    return this.subjectForuploadEndpointUrl.asObservable();\n  }\n   /********souresh end here********/\n\n\n  setupdateEndpoint(value: any) {\n    this.subjectForupdateEndpointUrl.next(value);\n  }\n  public clearupdateEndpoint() {\n    this.subjectForupdateEndpointUrl.next(null);\n  }\n  public getupdateEndpoint(): Observable<any> {\n    return this.subjectForupdateEndpointUrl.asObservable();\n  }\n\n  setdeletesingleEndpoint(value: any) {\n    this.subjectFordeletesingleEndpointUrl.next(value);\n  }\n  public cleardeletesingleEndpoint() {\n    this.subjectFordeletesingleEndpointUrl.next(null);\n  }\n  public getdeletesingleEndpoint(): Observable<any> {\n    return this.subjectFordeletesingleEndpointUrl.asObservable();\n  }\n\n  setupdatestatus_singleEndpoint(value: any) {\n    this.subjectForupdatestatusSingleEndpointUrl.next(value);\n  }\n  public clearupdatestatus_singleEndpoint() {\n    this.subjectForupdatestatusSingleEndpointUrl.next(null);\n  }\n  public getupdatestatus_singleEndpoint(): Observable<any> {\n    return this.subjectForupdatestatusSingleEndpointUrl.asObservable();\n  }\n\n  setgetdataEndpoint(value: any) {\n    this.subjectForGetdataEndpointUrl.next(value);\n  }\n  public cleargetdataEndpoint() {\n    this.subjectForGetdataEndpointUrl.next(null);\n  }\n  public getdataEndpoint(): Observable<any> {\n    return this.subjectForGetdataEndpointUrl.asObservable();\n  }\n\n\n\n  isTokenExpired() {\n\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n  }\n\n  addData(requestdata: any) {\n    console.log('in adddata apiservice');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken          //hard code written Authorization(temp)\n      })\n    };\n\n    console.log('httpoptions',httpOptions,this.serverUrl,requestdata);\n    var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n  /*******added by souresh************/\n  uploadFile(requestdata:any){\n    const httpOptions={\n        headers: new HttpHeaders({\n          'Content-Type':'application/json',\n          'Authorization':this.accesstoken          //hard code written Authorization(temp)\n        })\n    };\n    var result=this._http.post(this.serverUrl + this.uploadEndpointUrl,JSON.stringify(requestdata),httpOptions).pipe(map(res=>res));\n    return result;\n  }\n  /*******souresh end here********/\n  UpdateData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken          //hard code written Authorization(temp)\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.updateendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  getData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.getdata_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteSingleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.deletesingle_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteMultipleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.deletesingle_endpointUrl+'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForSingleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.updatestatus_single_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForMultipleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.updatestatus_single_endpointUrl+'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n  CustomRequest(requestdata: any, endpoint:any ) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl +endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n  getDataWithoutToken(endpoint:any,requestdata: any ) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    var result = this._http.post(endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  getDataByEndpoint(endpoint: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(endpoint, httpOptions).pipe(map(res => res));\n    return result;\n  }\n  \n}","\n/** This is the category listing **/\n\nimport { Component, OnInit, Input } from '@angular/core';\nimport { RouterModule, Routes, Router, ActivatedRoute } from '@angular/router';\nimport { ApiService } from './api.service';\n\n@Component({\n  selector: 'lib-Blog',\n  templateUrl: 'blog.component.html',\n  styleUrls: ['style.css']\n})\nexport class BlogComponent implements OnInit {\n  public blodata:any=[];\n // send basic sort data\n sortdata:any={\n  \"type\":'desc',\n  \"field\":'priority',\n  \"options\":['priority','blogtitle','blogcat_count','parentcategoryname']\n};\n// datacollection\n// datacollection: any='getbloglistdata';\ndate_search_source_count: any=0;\n// send basic limit data\nlimitcond:any={\n  \"limit\":10,\n  \"skip\":0,\n  \"pagecount\":1\n}; \n\ndatasource:any;\n\nlibdata:any={\n  basecondition:'',\n  updateendpoint:'statusupdateforblogcategory',        // update endpoint set\n  hideeditbutton:false, // (hide edit button ) all these button options are optional not mandatory\n\n  updateendpointmany: 'blogcatupdate',\n  deleteendpointmany: 'blogcatdelete',\n\n  tableheaders:['blogtitle','description','priority','status','parentcategoryname','blogcat_count'], //not required (table header name)\n  detailview_override:[\n    {key:\"blogtitle\",val:\"Category Name\"},\n    {key:\"description\",val:\"Description\"},\n    {key:\"priority\",val:\"Priority\"},\n    {key:\"status\",val:\"Status\"},\n    {key:\"blogcat_count\",val:\"Category Count\"},\n    {key:\"parentcategoryname\",val:\"Parent Category Name\"},\n    {key:\"blogcat_count\",val:\"Category Count\"}\n], // optional\n\n\n//   custombuttons:[\n//       {\n//           label:\"fb search with blog title\",        // fb search button name\n//           link:\"https://www.facebook.com/search/top/\",  // fb search link\n//           type:'externallink',                          // external link\n//           param:[{key:'blogtitle',q:'q'}],              // passed parameter like https://www.facebook.com/search/top/?q=VPOTips%20You%20Should%20Know%20For%20Buying%20Used%20CarsWJY\n//       },\n//       {\n//           label:\"G search with blog title ACtive\",      // google search button name \n//           link:\"https://www.google.com/search\",         // google search link\n//           type:'externallink',                          // external link\n//           param:[{key:'blogtitle',q:'q'},{key:'author',q:'oq'}], //passed parameter like https://www.google.com/search?q=VPOTips%20You%20Should%20Know%20For%20Buying%20Used%20CarsWJY&oq=YmattZ\n//           cond:'status',                                // condition for status\n//           condval: 0                                   // condition value status=0 , if value=1 and status =0 then the button will dissappear\n//       },{\n//           label:\"mask blog\",                                    //mask blog search button name\n//           link:\"https://mask-blog1.influxiq.com/blog-details\",  // mask search link\n//           type:'externallink',                                   // external link\n//           paramtype:'angular',                                  // showing front end \n//           param:['blogtitle','_id'],                            // passed to parameter with blog title and id\n//           cond:'status', // condition for status\n//           condval: 0      // condition value status=0 , if value=1 and status =0 then the button will dissappear\n//       },\n//       {\n//           label:\" fb profile \",                             // fb profile button \n//           link:\"https://www.facebook.com/debasiskar007\",     // profile link\n//           type:'externallink'\n//       },\n//       {\n//           label:\" fb profile for inactive\",                  // fb profile for inactive status\n//           link:\"https://www.facebook.com/debasiskar007\",     // profile link\n//           type:'externallink',\n//           cond:'status',                                       // condition for status\n//           condval:0                                         // condition value status=0 , if value=1 and status =0 then the button will dissappear\n//       },\n//       {\n//           label:\" fb profile for active\",                       // fb profile for active status\n//           link:\"https://www.facebook.com/debasiskar007\",        // profile link\n//           type:'externallink',                                   // external link\n//           cond:'status',                                         //condition for status\n//           condval:1 //condition value status=1 if value=0 and status =1 then the button will dissappear\n//       },\n//       {\n//           label:\"see brand\",            // see brand button\n//           route:\"brand\",               // go to brand route\n//           type:'internallink',          // same application but different page .\n//           cond:'status',                 // condition for status\n//           condval:0                     // condition value status=0 , if value=1 and status =0 then the button will dissappear\n//       },\n//       {\n//           label:\"see brand with param\",     // see brand button with param\n//           route:\"brand\",                    // go to brand route\n//           type:'internallink',             // same application but different page with params .\n//           cond:'status',                    // condition for status\n//           condval:0,                       //condition value status=0 , if value=1 and status =0 then the button will dissappear\n//           param:['_id','blogtitle'],    // passed with params\n//       }\n//   ]\n}\n  // ===========================================declaration================================\n  \n  blogListConfig:any;\n  loader:boolean=false;\n  // ======================================================================================\n\n  // ================================================Input For Lib Listing================================\n  // public value:any=[{val:'','name':''}];\n  public value:any=[];\n  @Input()\n  set config(receivedData: any) { \n    console.log(receivedData.datasource,'===+++++===')\n     for (let i in receivedData.datasource) {\n       this.value.push(\n         { 'name': receivedData.datasource[i].parentcategoryname, val: receivedData.datasource[i].parentcategoryname }\n         );\n   }\n\n    this.blogListConfig = {\n      apiUrl: receivedData.apiBaseUrl,\n      endpoint :receivedData.endpoint,\n      endpointc:receivedData.endpointc,\n      listEndPoint: receivedData.listEndPoint,\n      datacollection:receivedData.datacollection,\n      datasource:receivedData.datasource,\n      // tableName: receivedData.tableName,\n      blogcategory_detail_skip:[\"_id\",\"createdon_datetime\",\"parent_id\",'id'],\n      listArray_skip: [\"_id\", \"userId\", \"created_at\", \"updated_at\",\"image\",\"description\",\"parentcategoryname_search\",\"blogtitle_search\",\"blogtitlesearch\",\"createdon_datetime\"],\n      listArray_modify_header: { \"blogtitle\":\"Category Name\", \"priority\": \"Priority\", \"status\": \"Status\" ,\"parentcategoryname\":\"Parent Category Name\",\"blogcat_count\":\"Category Count\",\"date\":\"Date\",'description':'Description'},\n      // admintablenameTableName: \"admin\",\n      statusarr: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }],\n      updateurl: receivedData.updateEndpoint,\n      editUrl: receivedData.editUrl,\n      jwtToken: receivedData.jwtToken,\n      deleteEndPoint: receivedData.deleteEndPoint,\n      date_search_source: receivedData.date_search_source,\n\n      search_settings:{\n        // datesearch:[{startdatelabel:\"Start Date\",enddatelabel:\"End Date\",submit:\"Search\",  field:\"createdon_datetime\"}],\n        textsearch: [{ label: \"Search by Category Name\", field: 'blogtitle' },{ label: \"Search by Parent Category Name\", field: 'parentcategoryname' }],\n        selectsearch: [\n          { label: 'Search By Status', field: 'status',values: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }]\n        },\n          // {label:\"Search By Parent Category Name\",field:'parentcategoryname',values:this.value}\n        ]\n\n        // search:[{label:\"Search By Parent Category\",field:'parentcategoryname',values:this.value}]\n      }\n      //  /*Showing Image in the Modal*/\n      //  pendingmodelapplicationarray_detail_datatype: [{\n      //   key: \"image\",\n      //   value: 'image',\n      //   fileurl: 'https://s3.us-east-2.amazonaws.com/crmfiles.influxhostserver/testimonial/'             // Image path \n      // }],\n      \n    }\n    this.loader = false;\n  }\n  // ====================================================================================================\n\n  constructor(public apiService:ApiService) { }\n\n  ngOnInit() {\n    let endpoint=this.blogListConfig.endpoint;\n    let endpointc=this.blogListConfig.endpointc;\n\n    let data:any={\n        \"condition\":{\n            \"limit\":10,\n            \"skip\":0\n        },\n    sort:{\n        \"type\":'desc',\n        \"field\":'priority'\n    }\n\n    }\n    this.apiService.getDataWithoutToken(endpointc, data).subscribe((res:any) => {\n        this.date_search_source_count =res.count;\n        console.log( this.date_search_source_count ,'++++++++++')\n      \n    }, error => {\n        console.log('Oooops!');\n    });\n\n    // this.apiService.getDataWithoutToken(endpoint,data).subscribe((res:any) => {\n    //   this.datasource=res.results.res;\n    //   // console.log(res,'+++')\n      \n    \n    // }, error => {\n    //     console.log('Oooops!');\n    // });\n\n  }\n  \n\n}\n\n","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n//import { MatFileUploadModule } from 'angular-material-fileupload';\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n    //MatFileUploadModule\n  ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license */","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BlogService } from '../blog.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nexport interface DialogData {\n  msg: string;\n}\n\n@Component({\n  selector: 'lib-add-blog',\n  templateUrl: './add-blog.component.html',\n  styleUrls: ['./add-blog.component.css']\n})\nexport class AddBlogComponent implements OnInit {\n  editorconfig:any={};\n  /**ckeditor start here*/\n\n  // editorConfig = {\n  //   placeholder: 'Type the content here!',\n  // };\n  // public model = {\n  //   editorData: ''\n  // };\n\n\n  /**ckeditor end here*/\n\n\n  // ====================declarations==================\n  blogCatForm: FormGroup;\n  header_txt: any = \"Add Blog Category\";\n  buttonText: any = \"SUBMIT\";\n  configData: any;\n  loader: boolean = false;\n  successMessage: any = \"Category Added Successfully!!!\"\n  getParentCatArr: any = [];\n  dialogRef: any;\n\n  // ==================================================\n\n\n\n  constructor(private formBuilder: FormBuilder, private blogService: BlogService, private router: Router,\n    private cookieService: CookieService, public dialog: MatDialog) {\n    this.editorconfig.extraAllowedContent = '*[class](*),span;ul;li;table;td;style;*[id];*(*);*{*}';\n  }\n\n\n  ngOnInit() {\n    //generating the form\n    this.generateForm();\n    //getting the parent category\n    this.getParentData();\n    // --------------------------------checking the cases------------------------ \n    switch (this.configData.action) {\n      case 'add':\n        /* Button text */\n        this.buttonText = \"SUBMIT\";\n        break;\n      case 'edit':\n        /* Button text */\n        this.buttonText = \"UPDATE\";\n        this.successMessage = \"One row updated!!!\";\n        this.setDefaultValue(this.configData.defaultData);\n        this.header_txt = \"EDIT\";\n        break;\n    }\n    // --------------------------------------------------------------------------\n\n  }\n\n\n  // ================================================Default value======================================\n  setDefaultValue(defaultValue) {\n    this.blogCatForm.patchValue({\n      blogtitle: defaultValue.blogtitle,\n      priority: defaultValue.priority,\n      status: defaultValue.status,\n      description: defaultValue.description,\n      parent_id: defaultValue.parent_id\n    });\n\n  }\n  // ==================================================================================================\n\n\n  //  ============================GENERATING THE FORM=======================\n  generateForm() {\n    this.blogCatForm = this.formBuilder.group({\n      blogtitle: ['', [Validators.required, Validators.maxLength(50)]],\n      priority: ['', [Validators.required, Validators.maxLength(2)]],\n      status: [true,],\n      description: ['', [Validators.required, Validators.maxLength(100)]],\n      parent_id: [0]\n    });\n  }\n  // ========================================================================\n\n\n  //  Getting the input Configuration \n  @Input()\n  set config(getConfig: any) {\n    this.configData = getConfig;\n\n  }\n\n  // =========================================MODAL functions==========================================\n  openDialog(x: any): void {\n    this.dialogRef = this.dialog.open(Modal2, {\n      width: '250px',\n      data: { msg: x }\n    });\n\n    this.dialogRef.afterClosed().subscribe(result => {\n\n    });\n  }\n  // ===================================================================================================\n\n\n\n\n  //Getting the parent category\n  getParentData() {\n    let postData: any = {\n      // source: this.configData.source,\n      token: this.cookieService.get('jwtToken')\n\n    };\n    this.blogService.getDataByEndpoint(this.configData.endpoint2).subscribe((response: any) => {\n      this.getParentCatArr = response.result;\n      console.log('parent category',this.getParentCatArr);\n    })\n  }\n\n  redirectToListingPage(){\n    this.router.navigateByUrl(this.configData.callBack);\n}\n\n\n\n  // =========================SUBMIT function==================\n  onSubmit() {\n    this.blogCatForm.controls['description'].markAsTouched();\n\n    this.loader = true;\n    /* stop here if form is invalid */\n    if (this.blogCatForm.invalid) {\n      return;\n    } else {\n      if (this.blogCatForm.value.status) {\n        this.blogCatForm.value.status = parseInt(\"1\");\n      } else {\n        this.blogCatForm.value.status = parseInt(\"0\");;\n      }\n\n      /* start process to submited data */\n      let postData: any = {\n        source: this.configData.source,\n        data: Object.assign(this.blogCatForm.value, this.configData.condition),\n        \"sourceobj\": [\"parent_id\"]\n      };\n\n      this.blogService.addData(this.configData.endpoint, postData).subscribe((response: any) => {\n        if (response.status == \"success\") {\n\n          this.openDialog(this.successMessage);\n          setTimeout(() => {\n            this.dialogRef.close();\n          }, 2000);\n\n          this.router.navigate([this.configData.callBack]);\n        } else {\n          alert(\"Some error occurred. Please try again.\");\n        }\n      }, (error) => {\n        alert(\"Some error occurred. Please try again.\");\n      });\n    }\n  }\n  // ==========================================================\n\n\n  //Blur function\n  inputBlur(val: any) {\n    this.blogCatForm.controls[val].markAsUntouched();\n  }\n}\n\n// ============================================MODAL COMPONENT===========================================\n@Component({\n  selector: 'app-modal',\n  templateUrl: 'modal.html',\n})\nexport class Modal2 {\n\n  constructor(\n    public dialogRef: MatDialogRef<Modal2>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n// ======================================================================================================\n\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MetaGuard } from '@ngx-meta/core';\nimport { AddBlogComponent } from './add-blog/add-blog.component'\nconst appRoutes: Routes = [\n  {path:'add', component : AddBlogComponent },\n  {path:'edit/:id', component : AddBlogComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { FormBuilder, FormControl, FormGroup, Validators, FormArray } from '@angular/forms';\nimport { ApiService } from '../api.service';\nimport { Observable } from 'rxjs';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog, MatSnackBar } from \"@angular/material\";\nimport { map, startWith } from 'rxjs/operators';\n\n\n// interface  Websites {\n//   value: number;\n//   viewValue: string;\n// }\n\nexport interface DialogData {\n  msg: any;\n  videourl: any;\n}\n\n\n\n@Component({\n  selector: 'lib-addedit-blogmanagement',\n  templateUrl: './addedit-blogmanagement.component.html',\n  styleUrls: ['./addedit-blogmanagement.component.css']\n})\n\nexport class AddeditBlogmanagementComponent implements OnInit {\n  // websites: Websites[] = [\n  //   {value: 1, viewValue: 'Mask Blog 1'},\n  //   {value: 2, viewValue: 'Mask Blog 2'},\n  //   {value: 3, viewValue: 'Mask Blog 3'}\n  // ];\n  // ---------------------declarations-------------------------------------\n  public headerText: any = 'Add Blog Management Data';\n  public buttonText: any = 'SUBMIT';\n  public blogCategoryArray: any = [];\n  public configData: any;\n  blogManagementForm: FormGroup;\n  public serverUrlData: any;\n  public getDataEndpointData: any;\n  public addEndpointData: any;\n  isSubmitted = false;\n  video_prefix: any = 'https://www.youtube.com/watch?v=';\n  options: any = [''];\n  filteredOptions: Observable<string[]>;\n  myControl = new FormControl();\n  tags_array: any = [];\n  dialogRef: any;\n  public params_id: any;\n  setData: any;\n  messageText: any='Blog Added Successfully.';\n  listUrl: any;\n  testTag: any = [];\n  imageConfigData: any;\n  ErrCode: any;\n  img_var: any;\n  image_name: any;\n  image_type: any;\n  flag: boolean = false;\n  images_array: any = [];\n  images_array_edit: any = [];\n  fileConfigData: any;\n  file_array: any = [];\n  file_array_edit: any = [];\n  action2:any;\n  editorconfig:any={};\n  public statuschecked:boolean = true;\n  public categoryUrlData:any;\n  public tagsEndpointData:any;\n  // -----------------------------------------------------------------------\n\n\n\n\n\n  // ----------------------------------------------Input Section-----------------------\n\n  // Input receiving from add/edit app \n  @Input()\n  set config(getConfig: any) {\n    this.configData = getConfig;\n\n  }\n\n  @Input()          //setting the server url from project\n  set serverUrl(serverUrl: any) {\n    this.serverUrlData = (serverUrl) || '<no name set>';\n    this.serverUrlData = serverUrl;\n  }\n\n  @Input()          //setting the server url for category from project\n  set categoryUrl(blogCat: any) {\n    this.categoryUrlData = (blogCat) || '<no name set>';\n    this.categoryUrlData = blogCat;\n  }\n\n  @Input()          //setting the server url from project\n  set getDataEndpoint(endpointUrlval: any) {\n    this.getDataEndpointData = (endpointUrlval) || '<no name set>';\n    this.getDataEndpointData = endpointUrlval;\n\n\n  }\n  @Input()          //setting the server url from project\n  set addEndpoint(endpointUrlval: any) {\n    this.addEndpointData = (endpointUrlval) || '<no name set>';\n    this.addEndpointData = endpointUrlval;\n\n  }\n\n  @Input()          //setting the server url from project\n  set tagsViewEndpoint(endpointUrlval: any) {\n    this.tagsEndpointData = (endpointUrlval) || '<no name set>';\n    this.tagsEndpointData = endpointUrlval;\n\n  }\n\n\n  @Input()         //setting the listing url form the application\n  set listRoute(listval: any) {\n    this.listUrl = (listval) || '<no name set>';\n    this.listUrl = listval;\n    console.log(this.listUrl);\n  }\n  // -----------------------------------------------------------------------------------------\n\n  constructor(private http: HttpClient, private apiservice: ApiService,\n    private activatedRoute: ActivatedRoute, private router: Router,\n    private formBuilder: FormBuilder, public dialog: MatDialog,\n    public snackBar: MatSnackBar) {\n    this.blogManagementForm = this.formBuilder.group({\n      blogtitle: ['', [Validators.required]],\n      blogcat: ['', ],\n      description: ['', [Validators.required]],\n      // website:[],\n      featured:[''],\n      priority: ['', [Validators.required]],\n      status: [''],\n      // metatitle: ['', [Validators.required]],\n      // metadesc: ['', [Validators.required]],\n      author:['',[Validators.required]],\n      video: this.formBuilder.array([]),\n      tags: [''],\n      blogs_image: [''],\n      blogs_file: ['']\n    });\n    this.editorconfig.extraAllowedContent = '*[class](*),span;ul;li;table;td;style;*[id];*(*);*{*}';\n    \n  }\n\n\n  ngOnInit() {\n    /**Observable start here**/\n    this.apiservice.clearServerUrl();\n    setTimeout(() => {\n      this.apiservice.setServerUrl(this.serverUrlData);\n    }, 50);\n    this.apiservice.cleargetdataEndpoint();\n    setTimeout(() => {\n      this.apiservice.setgetdataEndpoint(this.getDataEndpointData);\n    }, 50);\n    this.apiservice.clearaddEndpoint();\n    setTimeout(() => {\n      this.apiservice.setaddEndpoint(this.addEndpointData);\n    }, 50);\n    /**Observable end here**/\n\n    if (this.action2!='edit')\n      setTimeout(() => {\n        // this.addYoutubeVideo(null, null,null);\n      }, 500)\n\n    setTimeout(() => {\n      this.getBlogCategory();\n    }, 50)\n\n\n    setTimeout(() => {\n      this.getTagsCount();\n    }, 50)\n\n\n    if (this.action2=='edit') {\n      this.headerText=\"Edit Blog Management Data\";\n      this.flag = true;\n      this.params_id = this.setData._id;\n      this.buttonText = \"Update\";\n      this.blogManagementForm.controls['blogtitle'].patchValue(this.setData.blogtitle);\n      this.blogManagementForm.controls['blogcat'].patchValue(this.setData.blogcat);\n      this.blogManagementForm.controls['description'].patchValue(this.setData.description);\n\n      // this.blogManagementForm.controls['website'].patchValue(this.setData.website);\n      this.blogManagementForm.controls['featured'].patchValue(this.setData.featured);\n\n      this.blogManagementForm.controls['priority'].patchValue(this.setData.priority);\n      this.blogManagementForm.controls['status'].patchValue(this.setData.status);  \n      this.blogManagementForm.controls['blogs_image'].patchValue(this.setData.blogs_image);\n      this.blogManagementForm.controls['blogs_file'].patchValue(this.setData.blogs_file);\n      this.blogManagementForm.controls['author'].patchValue(this.setData.author);\n\n\n      /*Image works*/\n      for (let i = 0; i < this.setData.blogs_image.length; i++) {\n        this.img_var = this.setData.blogs_image[i].basepath + this.setData.blogs_image[i].image;\n        this.image_name = this.setData.blogs_image[i].name;\n        this.image_type = this.setData.blogs_image[i].type;\n        this.images_array_edit.push({ 'img_var': this.img_var, 'image_name': this.image_name, 'image_type': this.image_type });\n        this.images_array.push({\n          \"basepath\": this.setData.blogs_image[i].basepath,\n          \"image\": this.setData.blogs_image[i].image,\n          \"name\": this.setData.blogs_image[i].name,\n          \"type\": this.setData.blogs_image[i].type\n        });\n      }\n\n      /*File works*/\n      for (let i2 = 0; i2 < this.setData.blogs_file.length; i2++) {\n        this.file_array_edit.push(this.setData.blogs_file[i2].name);\n        this.file_array.push({\n          \"basepath\": this.setData.blogs_file[i2].basepath,\n          \"file\": this.setData.blogs_file[i2].file,\n          \"name\": this.setData.blogs_file[i2].name,\n          \"type\": this.setData.blogs_file[i2].type\n        });\n      }\n\n\n      for (const vid in this.setData.video) {\n        \n        this.addYoutubeVideo(this.setData.video[vid].video_url,\n          this.setData.video[vid].video_title,\n          this.setData.video[vid].video_description);\n      }\n\n      if (this.setData.tags != \"\")\n        this.setData.tags.forEach(element => {\n          this.tags_array.push(element);\n        });\n\n\n    }\n\n\n\n\n\n    // ------------------------------Autocomplete Functions----------------------------------\n\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filter(value))\n    );\n    // ------------------------------------------------------------------------------------------\n  }\n  redirectToListingPage(){\n      this.router.navigateByUrl('/' + this.listUrl);\n  }\n\n  // ------------------------------------_Filter FUnction----------------------------------\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    return this.options.filter(option => option.toLowerCase().indexOf(filterValue) === 0);\n  }\n  // --------------------------------------------------------------------------------------------\n\n\n  @Input()\n  set action(action: any) {\n    this.action2 = action;\n  }\n\n\n  @Input()\n  set imageUpload(getConfig: any) {\n    this.imageConfigData = getConfig;\n    // console.log(\"image config\",this.imageConfigData);\n  }\n\n  @Input()\n  set fileUpload(getConfig: any) {\n    this.fileConfigData = getConfig;\n  }\n\n\n\n\n  // ------------------------------------MODAL Function--------------------------------------------\n  openDialog(x: any): void {\n    this.dialogRef = this.dialog.open(Modal, {\n      width: '45%',\n      height: '500px',\n      data: { msg: x }\n\n    });\n\n    // this.sanitizer.bypassSecurityTrustResourceUrl\n    this.dialogRef.afterClosed().subscribe(result => {\n\n    });\n  }\n  // ----------------------------------------------------------------------------------------------\n\n\n\n\n\n\n\n\n\n\n\n  // ----------------------------Ediatble material Form Array-------------------\n  trackByFn(index) {\n    return index;\n  }\n  // -----------------------------------------------------------------------------\n\n\n\n\n\n\n\n  // ----------------------------------Add Credential Fucntions-----------------\n  addYoutubeVideo(vid_url: any, vid_tit: any, vid_desc: any) {\n    const creds = this.blogManagementForm.controls.video as FormArray;\n    creds.push(this.formBuilder.group({\n      video_url: [vid_url],\n      video_title: [vid_tit],\n      video_description: [vid_desc]\n    }));\n  }\n  // ---------------------------------------------------------------------------\n\n\n\n\n\n\n\n  // ---------------------------------Delete Credetial Fucntions----------------\n  deleteCreds() {\n    const creds = this.blogManagementForm.controls.video as FormArray;\n    creds.removeAt(1);\n  }\n  // ----------------------------------------------------------------------------\n\n\n\n\n  // ----------------------------------Get Blog Category Function-------------------\n\n  getBlogCategory() {\n    // var data: any;\n    // data = {\n    //   'source': 'blog_category'\n    // };\n    this.apiservice.getDataByEndpoint(this.serverUrlData + this.categoryUrlData).subscribe(response => {\n      let data: any;\n      data = response;\n      this.blogCategoryArray = data.result;\n    });\n  }\n  // ----------------------------------------------------------------------------------\n\n\n\n\n\n  // ----------------------------------TAGS view Function-------------------\n\n  getTagsCount() {\n    // var data: any;\n    // data = {\n    //   'source': 'tags_view'\n    // };\n    this.apiservice.getDataByEndpoint( this.serverUrlData +  this.tagsEndpointData).subscribe(response => {\n      let result: any;\n      result = response;\n      if (result != null && result.res != null && result.res[0] != null)      \n        this.options=result.res[0].tags;\n      \n    });\n  }\n  // ----------------------------------------------------------------------------------\n\n  // getDataByEndpoint\n\n\n\n  //  -----------------------------EDIT RESOLVE FUNCTION------------------------------\n  @Input()          //single data from resolve call  & set the value for edit\n  set singleData(editDatavals: any) {\n    this.setData = editDatavals;\n  }\n  // -----------------------------------------------------------------------------------\n\n\n  // ---------------------------------SUBMIT----------------------------------------\n  onSubmit() {\n     \n    /*__________________________IMAGE UPLOADER________________________________________*/\n    if (this.imageConfigData) {\n      // console.log(\"image path\",this.imageConfigData);\n      for (const loop in this.imageConfigData.files) {\n        this.images_array =\n          this.images_array.concat({\n            \"basepath\": this.imageConfigData.files[loop].upload.data.basepath + '/' + this.imageConfigData.path + '/',\n            \"image\": this.imageConfigData.files[loop].upload.data.data.fileservername,\n            \"name\": this.imageConfigData.files[loop].name,\n            \"type\": this.imageConfigData.files[loop].type\n          });\n      }\n      this.blogManagementForm.value.blogs_image = this.images_array;\n    } else {\n      this.blogManagementForm.value.blogs_image = false;\n    }\n    /*_____________________________________________________________________________________*/\n\n\n    /*_________________________________________FILE UPLOADER_______________________________*/\n\n    if (this.fileConfigData) {\n      for (const loop in this.fileConfigData.files) {\n        this.file_array =\n          this.file_array.concat({\n            \"basepath\": this.fileConfigData.files[loop].upload.data.basepath + '/' + this.fileConfigData.path + '/',\n            \"file\": this.fileConfigData.files[loop].upload.data.data.fileservername,\n            \"name\": this.fileConfigData.files[loop].name,\n            \"type\": this.fileConfigData.files[loop].type\n          });\n      }\n      this.blogManagementForm.value.blogs_file = this.file_array;\n    } else {\n      this.blogManagementForm.value.blogs_file = false;\n    }\n    // ___________________________________________________________________________________\n\n    this.blogManagementForm.value.tags = this.tags_array;\n\n    this.blogManagementForm.controls['description'].markAsTouched();\n    this.blogManagementForm.controls['blogtitle'].markAsTouched();\n\n    if (this.blogManagementForm.valid) {\n      console.log(\"values\",this.blogManagementForm.value);\n\n      //status\n      if (this.blogManagementForm.value.status)\n        this.blogManagementForm.value.status =1;\n      else\n        this.blogManagementForm.value.status =0;\n// featured\n      if (this.blogManagementForm.value.featured)\n        this.blogManagementForm.value.featured = parseInt(\"1\");\n      else\n        this.blogManagementForm.value.featured = parseInt(\"0\");\n\n\n\n\n      if (this.params_id!= null) {    //update part\n        this.messageText = \"One row updated!!!\";\n        this.blogManagementForm.value.tags = this.tags_array;\n        data = {\n          // \"source\": \"blogs\",\n          \"data\": {\n            \"id\": this.params_id,\n            \"blogtitle\": this.blogManagementForm.value.blogtitle,\n            \"blogcat\": this.blogManagementForm.value.blogcat,\n            \"description\": this.blogManagementForm.value.description,\n            // \"website\": this.blogManagementForm.value.website,\n            \"featured\": this.blogManagementForm.value.featured,\n            \"priority\": this.blogManagementForm.value.priority,\n            \"status\": this.blogManagementForm.value.status, \n            \"tags\": this.blogManagementForm.value.tags,\n            \"video\": this.blogManagementForm.value.video,\n            \"blogs_image\": this.blogManagementForm.value.blogs_image,\n            \"blogs_file\": this.blogManagementForm.value.blogs_file,\n            \"author\":this.blogManagementForm.value.author\n\n          },\n          \"sourceobj\": [\"blogcat\"]\n        };\n      } else {\n        this.isSubmitted = true;\n        var data: any;\n        data = {          \n          // \"source\":\"blogs\"                               //add part\n          \"data\": this.blogManagementForm.value,\n          \"sourceobj\": [\"blogcat\"]\n        };\n      }\n\n      this.apiservice.addData(data).subscribe(response => {\n        let result: any;\n        result = response;\n        if(result.status == 'success'){\n          this.snackBar.open(this.messageText,'OK',{duration:3000});\n        }\n\n        setTimeout(() => {\n          this.router.navigateByUrl('/' + this.listUrl);\n        }, 3000);\n\n      });\n\n\n    }\n    else\n    console.log(\"Form is invalid\");\n    \n  }\n  \n\n\n  // -----------------------------------------------------------------------------------\n\n\n\n\n  get onSignUpValidate() {\n    return this.blogManagementForm.controls;\n  }\n\n\n  inputBlur(val: any) {\n    this.blogManagementForm.controls[val].markAsUntouched();\n  }\n\n\n\n  \n\n\n\n\n  // -------------------------------Select Tags AutoComplete Field-----------------------\n  showval(event: any) {\n    \n    if (event.keyCode == 13 || event.keyCode == 32) {\n      this.tags_array.push(event.target.value);\n      this.blogManagementForm.controls['tags'].patchValue(\"\");\n      return;\n    }\n\n  }\n  // ------------------------------------------------------------------------------------\n\n\n\n\n  // ---------------------------------------VIDEO URL PREVIEW-----------------------------\n  preview_video(video_index) {\n    this.openDialog(this.blogManagementForm.value.video[video_index].video_url);\n  }\n  // -------------------------------------------------------------------------------------\n\n\n  // --------------------------------------------CLEAR TAGS---------------------------------\n  clearTags(index) {\n    this.tags_array.splice(index, 1);\n  }\n  // -------------------------------------------------------------------------------------\n\n  openSnackBar() {\n    this.snackBar.openFromComponent(YoutubeComponent, {\n      // duration: 1500,\n      panelClass: ['snackbar-color']\n    });\n  }\n  // --------------------------------------Blogs Image clear-------------------------------\n  clear_image(index) {\n    this.images_array.pop(this.setData.blogs_image[index]);\n    this.images_array_edit.splice(index, 1);\n  }\n  // ------------------------------------------------------------------------------------\n\n  // --------------------------------------Blogs File clear-------------------------------\n  clearFileTags(index) {\n    this.file_array.pop(this.setData.blogs_file[index]);\n    this.file_array_edit.splice(index, 1);\n  }\n  // ------------------------------------------------------------------------------------\n  \n}\n\n\n\n\n\n\n\n\n\n// ------------------------------------Modal Component Works------------------------------\n@Component({\n  selector: 'app-modal',\n  templateUrl: 'modal.html',\n})\nexport class Modal {\n  videoid: any = '';\n\n  constructor(\n    public dialogRef: MatDialogRef<Modal>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n      console.warn('video modal',data)\n\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n// ---------------------------------------------------------------------------------------\n@Component({\n  templateUrl: 'youtubetip.html',\n  styleUrls: ['./addedit-blogmanagement.component.css']\n})\nexport class YoutubeComponent {\n\n}\n\n","import { Component, OnInit , Input} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'lib-youtubeplayer',\n  templateUrl: './youtubeplayer.component.html',\n  styleUrls: ['./youtubeplayer.component.css']\n})\nexport class YoutubeplayerComponent implements OnInit {\n  id:any;\n\n  @Input()          //setting the server url from project\n  set videoid(id: any) {\n    this.id = (id) || '<no name set>';\n    this.id = this.sanitizer.bypassSecurityTrustResourceUrl('https://www.youtube.com/embed/'+id);\n  }\n  constructor(public sanitizer:DomSanitizer) { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ApiService } from '../api.service';\n\n/** This is the actuali main blog page **/\n\n@Component({\n  selector: 'lib-listing-blogmanagementlib',\n  templateUrl: './listing-blogmanagementlib.component.html',\n  styleUrls: ['./listing-blogmanagementlib.component.css']\n})\nexport class ListingBlogmanagementlibComponent implements OnInit {\n\npublic value:any=[];\npublic category_names:any=[];\n\n  // ===========================================declaration================================\n  blogListConfig: any;\n  loader: boolean = false;\n  // ======================================================================================\n // send basic sort data\n sortdata:any={\n  \"type\":'desc',\n  \"field\":'priority',\n  \"options\":['author','blogcategory','blogtitle','priority','createdon_datetime']\n};\n// datacollection\n// datacollection: any='getblogmanagementlistdata';\ndate_search_source_count: any=0;\n// send basic limit data\nlimitcond:any={\n  \"limit\":10,\n  \"skip\":0,\n  \"pagecount\":1\n}; \n\n\n\n\ndatasource:any;\n\npublic tag_data:any=[];\npublic authval:any=[];\npublic wesitesVal:any;\n  // ================================================Input For Lib Listing================================\n  @Input()\n  set config(receivedData: any) {\nfor (let i in receivedData.datasource) {\n  this.value.push(receivedData.datasource[i].blogcategory);\n}\nfor (let i in receivedData.datasource) {\n  for (let val in receivedData.datasource[i].tags) {\n    this.authval.push(\n      { 'name': receivedData.datasource[i].tags[val], val: receivedData.datasource[i].tags[val] }\n    );\n  }\n  \n\n}\n\n// console.log(this.value,'>>>')\n\n  const arr = this.value;\n  // console.log(arr)\n  const filteredArray = arr.filter(function(item, pos) {\n    return arr.indexOf(item) == pos;\n  });\n  // this.category_name = [];\n  for (const key in filteredArray) {\n    // console.log(filteredArray[key])\n    this.category_names.push({ name: filteredArray[key], val: filteredArray[key] });\n  }\n  // console.log(this.category_names,'++>>>')\n\n\n   this.wesitesVal = receivedData.datasource.website;\n  //  console.log(\"+++++++++++++++++\",this.wesitesVal);\n    this.blogListConfig = {\n      apiUrl: receivedData.apiBaseUrl,\n      endpoint :receivedData.endpoint,\n      endpointc:receivedData.endpointc,\n      listEndPoint: receivedData.listEndPoint,\n      datasource: receivedData.datasource,\n      tableName: receivedData.tableName,\n      datacollection:receivedData.datacollection,\n      listArray_skip: [\"_id\", \"userId\", \"created_at\", \"updated_at\", \"metatitle\", \"metadesc\", \"credentials\", \"blogs_file\",\"blogtitle_search\",\"author_search\",\"video\",\"blogcat\",\"profile_picture\",\"tagsearch\",\"featured\",\"maskblog1\",\"maskblog2\",\"maskblog3\",\"tags_search\",\"website\",'description'],\n      listArray_modify_header: {\n        \"blogtitle\": \"Blog Title\",\"date added\":\"Date\",\"profile picture\":\"Profile Picture\",\"tags\":\"Tags\",\n        \"priority\": \"Priority\", \"status\": \"Status\", \"parentcategoryname\": \"Parent Category Name\",\n        \"author\": \"Author\",\"blogcat\":\"Blog Category\",\"date\":\"Date\",\"blogcategory\":\"Blog Category\",\n        \"featured search\":\"Featured\",\"createdon_datetime\":\"Added On\",\"featured\":\"Featured\",\n        \"description\": \"Blog Description\",'video':'Video','image':'Image','description_html':'Blog Description'\n      },\n      blog_detail_skip:['_id','password','updated_at','id',\"blogcat\",\"created_at\",\"profile_picture\",\"tags\",'vd_array','img_array','image','video','image_array_field','video_array_field','blog_videos','status','featured','Vd_array','vd array','vd_array','Featured'],\n      admintablenameTableName: \"admin\",\n      statusarr: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }],\n      // updateurl: receivedData.updateEndpoint,\n      editUrl: receivedData.editUrl,\n      jwtToken: receivedData.jwtToken,\n      deleteEndPoint: receivedData.deleteEndPoint,\n      view: receivedData.view,\n      search_settings: {\n\n        datesearch:[{startdatelabel:\"Start Date\",enddatelabel:\"End Date\",submit:\"Search\",  field:\"createdon_datetime\"}],   // this is use for  date search //created at = field in res which gives date in unix format that changes to ist using moment.js\n\n        textsearch: [{ label: \"Search By Blog Title\", field: 'blogtitle' },{ label: \"Search By Author\", field: 'author' }],\n\n        selectsearch: [\n          \n          { label: 'Status', field: 'status', values: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }]\n        },\n          {label:\"Search By Category Name\",field:'blogcategory',values:this.category_names},\n          // {\n          //   label: 'Search By Blog Featured', field: 'featured', values: [{ val: 1, name: \"Yes\" }, { val: 0, name: 'No' }]\n          // },\n          // {\n          //   label: 'Search By Blog Website', field: 'website', values: [{ val: \"Mask Blog 1\", name: \"Mask Blog 1\" }, { val: \"Mask Blog 2\", name: 'Mask Blog 2' },{val:\"Mask Blog 3\",name:\"Mask Blog 3\"}]\n          // }\n        ],\n        search:[{label:\"Search By Tags\",field:'tags',values:this.authval}]\n\n      },\n      //  /*Showing Image in the Modal*/\n       pendingmodelapplicationarray_detail_datatype: [\n      //    {\n      //   key: \"image\",\n      //   value: 'image',\n      //   fileurl: 'https://s3.us-east-2.amazonaws.com/crmfiles.influxhostserver/blogs/'             // Image path \n      // }\n    ],\n    }\n    this.loader = false;\n  }\n  // ====================================================================================================\n  libdata:any={\n    basecondition:'',\n    updateendpoint:'statusupdateforblog',\n    hideeditbutton:false,// all these button options are optional not mandatory\n    hideviewbutton:true,\n    updateendpointmany: 'blogupdate',\n    deleteendpointmany: 'blogdelete',\n\n    detailview_override:[\n      {key:\"blogtitle\",val:\"Blog Title :\"},\n      {key:\"description\",val:\"Description :\"},\n      {key:\"priority\",val:\"Priority :\"},\n      {key:\"status\",val:\"Status :\"},\n      {key:\"tagsearch\",val:\"Tags :\"},\n      {key:\"createdon_datetime\",val:\"Added on :\"},\n      {key:\"blogcategory\",val:\"Category Name :\"},\n      {key:'author',val:'Author :'},\n      // {key:'image',val:'Image'},\n      // {key:'video',val:'Video'},\n      {key:'video_title',val:'Video Title :'},\n      {key:'featured_search',val:'Featured :'},\n      {key:'video_description',val:'Video Description :'},\n      {key:'image_array',val:'Images :'},\n      {key:'video_array',val:'Videos :'},\n      {key:'img_array',val:'Images :'},\n      {key:'vd_array',val:'Videos'}\n\n  ], // optional\n  \n    \n    tableheaders:['blogtitle','description_html','author','blogcategory','tags','priority','status','createdon_datetime', 'video','image'], //not required\n    custombuttons:[\n  //     {\n  //       label:\"Videos\",\n  //       type:'action',\n  //       datatype:'local',\n  //       datafields:['vd_array'],\n  //       // cond:'video',\n  //       // condval:''\n\n  //   },\n  //   {\n  //     label:\"Images\",\n  //     type:'action',\n  //     datatype:'local',\n  //     datafields:['img_array'],\n  //     // cond:'image',\n  //     // condval:''\n  // } ,\n  {\n    label:\"Videos\",\n    type:'action',\n    datatype:'local',\n    datafields:['vd_array'],\n    cond:'video_array_field',\n    condval:1\n\n},\n{\n  label:\"Images\",\n  type:'action',\n  datatype:'local',\n  datafields:['img_array'],\n  cond:'image_array_field',\n  condval:1\n} \n\n    ]\n} \n  \n\n  constructor(private apiService: ApiService) {\n   \n  }\n\n  ngOnInit() {\n    let endpoint=this.blogListConfig.endpoint;\n    let endpointc=this.blogListConfig.endpointc;\n    let data:any={\n        \"condition\":{\n            \"limit\":10,\n            \"skip\":0\n        },\n    sort:{\n        \"type\":'desc',\n        \"field\":'priority'\n    }\n\n    }\n    this.apiService.getDataWithoutToken(endpointc, data).subscribe((res:any) => {\n        // console.log('in constructor');\n        // console.log(result);\n        this.date_search_source_count =res.count;\n        // console.warn('blogData c',res);\n\n    }, error => {\n        // console.log('Oooops!');\n    });\n\n    // this.apiService.getDataWithoutToken(endpoint,data).subscribe((res:any) => {\n    //   this.datasource=res.results.res;        // console.log('in constructor');\n    //     // console.log(result);\n    //     // this.pendingmodelapplicationarray =res.results.res;\n    //     //console.warn('blogData',res);\n\n    // }, error => {\n    //     console.log('Oooops!');\n    // });\n\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport { BlogComponent } from './blog.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { DemoMaterialModule } from './material-module'\nimport { FileUploadModule } from 'file-upload-lib-influxiq';\nimport { RouterModule } from '@angular/router';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AddBlogComponent,Modal2 } from './add-blog/add-blog.component';\nimport { ListingModule } from 'listing-angular7';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ApiService } from './api.service';\nimport { CommonModule } from '@angular/common';\nimport { AddeditBlogmanagementComponent,Modal, YoutubeComponent } from './addedit-blogmanagement/addedit-blogmanagement.component';\nimport { YoutubeplayerComponent } from './youtubeplayer/youtubeplayer.component';\nimport { ListingBlogmanagementlibComponent } from './listing-blogmanagementlib/listing-blogmanagementlib.component';\nimport { CKEditorModule } from 'ngx-ckeditor';\n\n@NgModule({\n  declarations: [\n    BlogComponent,\n    AddBlogComponent,\n    AddeditBlogmanagementComponent,\n    Modal,\n    YoutubeplayerComponent,\n    YoutubeComponent,\n    ListingBlogmanagementlibComponent,Modal2\n  ],\n  imports: [\n    DemoMaterialModule,\n    RouterModule,\n    AppRoutingModule,\n    ListingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserModule,\n    FileUploadModule,\n    CommonModule,\n    CKEditorModule\n  \n  ],\n  exports: [BlogComponent, AddBlogComponent, AddeditBlogmanagementComponent,ListingBlogmanagementlibComponent],\n  providers: [ApiService],\n  entryComponents: [Modal2,Modal, YoutubeComponent],\n\n})\nexport class BlogModule { }\n"]}