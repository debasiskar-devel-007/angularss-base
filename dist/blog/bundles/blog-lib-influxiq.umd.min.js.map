{"version":3,"sources":["ng://blog-lib-influxiq/lib/blog.service.ts","ng://blog-lib-influxiq/lib/api.service.ts","ng://blog-lib-influxiq/lib/blog.component.ts","ng://blog-lib-influxiq/lib/material-module.ts","ng://blog-lib-influxiq/lib/add-blog/add-blog.component.ts","ng://blog-lib-influxiq/lib/app-routing.module.ts","ng://blog-lib-influxiq/lib/addedit-blogmanagement/addedit-blogmanagement.component.ts","ng://blog-lib-influxiq/lib/youtubeplayer/youtubeplayer.component.ts","ng://blog-lib-influxiq/lib/listing-blogmanagementlib/listing-blogmanagementlib.component.ts","ng://blog-lib-influxiq/lib/blog.module.ts"],"names":["BlogService","prototype","isTokenExpired","addData","endpoint","requestdata","httpOptions","headers","HttpHeaders","Content-Type","Authorization","this","accesstoken","_http","post","serverUrl","JSON","stringify","pipe","map","res","UpdateData","getData","deleteSingleData","deleteMultipleData","UpdateStatusForSingleData","UpdateStatusForMultipleData","CustomRequest","Injectable","args","providedIn","HttpClient","CookieService","_authHttp","cookieService","progress","uploaderror","get","fileservername","getdata_endpointUrl","ApiService","setServerUrl","value","subjectForServerUrl","next","clearServerUrl","getServerUrl","asObservable","setaddEndpoint","subjectForaddEndpointUrl","clearaddEndpoint","getaddEndpoint","setuploadEndpont","subjectForuploadEndpointUrl","clearuploadEndpoint","getuploadEndpoint","setupdateEndpoint","subjectForupdateEndpointUrl","clearupdateEndpoint","getupdateEndpoint","setdeletesingleEndpoint","subjectFordeletesingleEndpointUrl","cleardeletesingleEndpoint","getdeletesingleEndpoint","setupdatestatus_singleEndpoint","subjectForupdatestatusSingleEndpointUrl","clearupdatestatus_singleEndpoint","getupdatestatus_singleEndpoint","setgetdataEndpoint","subjectForGetdataEndpointUrl","cleargetdataEndpoint","getdataEndpoint","console","log","addendpointUrl","uploadFile","uploadEndpointUrl","updateendpointUrl","deletesingle_endpointUrl","updatestatus_single_endpointUrl","getDataWithoutToken","_this","Subject","subscriptionServer","subscribe","message","result","subscriptionaddEndpoint","subscriptionuploadEndpoint","subscriptionupdateEndpoint","subscriptiondeletesingleEndpoint","subscriptionupdatestatusSingleEndpoint","subscriptionGetdataEndpoint","Object","defineProperty","BlogComponent","receivedData","i","datasource","push","name","parentcategoryname","val","blogListConfig","apiUrl","apiBaseUrl","endpointc","listEndPoint","tableName","listArray_skip","listArray_modify_header","blogtitle","description","priority","status","blogcat","date","admintablenameTableName","statusarr","updateurl","updateEndpoint","editUrl","jwtToken","deleteEndPoint","view","search_settings","textsearch","label","field","selectsearch","values","loader","ngOnInit","data","condition","limit","skip","sort","type","apiService","date_search_source_count","count","error","Component","selector","template","Input","blodata","sortdata","options","datacollection","limitcond","pagecount","DemoMaterialModule","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","AddBlogComponent","generateForm","getParentData","configData","action","buttonText","successMessage","setDefaultValue","defaultData","header_txt","defaultValue","blogCatForm","patchValue","parent_id","formBuilder","group","Validators","required","maxLength","getConfig","openDialog","x","dialogRef","dialog","open","Modal2","width","msg","afterClosed","postData","source","token","blogService","endpoint2","response","getParentCatArr","onSubmit","controls","markAsTouched","invalid","parseInt","assign","sourceobj","setTimeout","close","router","navigate","callBack","alert","inputBlur","markAsUntouched","FormBuilder","Router","MatDialog","editorconfig","extraAllowedContent","onNoClick","MatDialogRef","Inject","MAT_DIALOG_DATA","appRoutes","path","component","AppRoutingModule","imports","RouterModule","forRoot","AddeditBlogmanagementComponent","serverUrlData","endpointUrlval","getDataEndpointData","addEndpointData","listval","listUrl","apiservice","action2","addYoutubeVideo","getBlogCategory","getTagsCount","headerText","flag","params_id","setData","_id","blogManagementForm","website","featured","blogs_image","blogs_file","author","length","img_var","basepath","image","image_name","image_type","images_array_edit","images_array","i2","file_array_edit","file_array","file","vid","video","video_url","video_title","video_description","tags","forEach","element","tags_array","filteredOptions","myControl","valueChanges","startWith","_filter","filterValue","toLowerCase","filter","option","indexOf","imageConfigData","fileConfigData","Modal","height","trackByFn","index","vid_url","vid_tit","vid_desc","deleteCreds","removeAt","blogCategoryArray","editDatavals","loop","files","concat","upload","valid","messageText","id","isSubmitted","navigateByUrl","showval","event","keyCode","target","preview_video","video_index","clearTags","splice","openSnackBar","snackBar","openFromComponent","YoutubeComponent","panelClass","clear_image","pop","clearFileTags","ActivatedRoute","MatSnackBar","http","activatedRoute","websites","viewValue","video_prefix","FormControl","testTag","statuschecked","array","videoid","warn","YoutubeplayerComponent","sanitizer","bypassSecurityTrustResourceUrl","DomSanitizer","ListingBlogmanagementlibComponent","blogcategory","date added","profile picture","BlogModule","declarations","ListingModule","HttpClientModule","FormsModule","ReactiveFormsModule","BrowserModule","FileUploadModule","CommonModule","CKEditorModule","providers","entryComponents"],"mappings":"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","sourcesContent":["\n\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpClientModule } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { CookieService } from 'ngx-cookie-service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlogService {\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress: any = [];\n  public uploadtype;\n  public uploaderror: any = '';\n  public accesstoken: any = this.cookieService.get('jwtToken');;\n  public fileservername: any = [];\n  public serverUrl: any = '';\n  public addendpointUrl: any;\n  public updateendpointUrl: any;\n  public deletesingle_endpointUrl: any;\n  public updatestatus_single_endpointUrl: any;\n  public deletemultiple_endpointUrl: any;\n  public updatestatus_multiple_endpointUrl: any;\n  public getdata_endpointUrl: any = 'datalist';\n\n  constructor(private _http: HttpClient, private _authHttp: HttpClient,private cookieService : CookieService) { }\n\n  isTokenExpired() {\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n  }\n\n  addData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  getData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteSingleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteMultipleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForSingleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForMultipleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint + 'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  CustomRequest(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n}\n","import { ElementRef, EventEmitter, Injectable, Input, ViewChild } from '@angular/core';\nimport { switchMap, map, takeWhile } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n// for setting observables to get serverurl and endpointurl from app\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport{CookieService} from 'ngx-cookie-service';\n\n\n@Injectable({   \n  providedIn: 'root'\n})\nexport class ApiService {\n\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress: any = [];\n  public uploadtype;\n  public uploaderror: any = '';\n  public accesstoken:any=this.cookieService.get('jwtToken');\n  fileservername: any = [];\n  serverUrl: any;\n  addendpointUrl: any;\n  uploadEndpointUrl:any; //souresh\n  updateendpointUrl: any;\n  deletesingle_endpointUrl: any;\n  updatestatus_single_endpointUrl: any;\n  deletemultiple_endpointUrl: any;\n  updatestatus_multiple_endpointUrl: any;\n  getdata_endpointUrl: any;\n  private subjectForServerUrl = new Subject<any>();\n  private subjectForaddEndpointUrl = new Subject<any>();\n  private subjectForuploadEndpointUrl = new Subject<any>();  //added by souresh\n  private subjectForupdateEndpointUrl = new Subject<any>();\n  private subjectFordeletesingleEndpointUrl = new Subject<any>();\n  private subjectForupdatestatusSingleEndpointUrl = new Subject<any>();\n  private subjectForGetdataEndpointUrl = new Subject<any>();\n  public subscriptionServer: Subscription;\n  public subscriptionaddEndpoint: Subscription;\n  public subscriptionuploadEndpoint: Subscription;   //added by souresh\n  public subscriptionupdateEndpoint: Subscription;\n  public subscriptiondeletesingleEndpoint: Subscription;\n  public subscriptionupdatestatusSingleEndpoint: Subscription;\n  public subscriptionGetdataEndpoint: Subscription;\n\n  constructor(private _http: HttpClient,\n    private _authHttp: HttpClient,private cookieService :CookieService) {\n    this.subscriptionServer = this.getServerUrl().subscribe(message => {\n     let result: any;\n      result = message;\n      if (result != null) {\n        this.serverUrl = result;\n      } else {\n        this.serverUrl = null;\n      }\n    });\n    this.subscriptionaddEndpoint = this.getaddEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.addendpointUrl = result;\n      } else {\n        this.addendpointUrl = null;\n      }\n    });\n    /*********added by souresh***********/\n    this.subscriptionuploadEndpoint=this.getuploadEndpoint().subscribe(message=>{\n      let result:any;\n      result=message;\n        if(result!=null){\n          this.uploadEndpointUrl = result;\n        } else{\n          this.uploadEndpointUrl = null;\n        }\n    })\n    /************souresh end here**************/\n    this.subscriptionupdateEndpoint = this.getupdateEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.updateendpointUrl = result;\n      } else {\n        this.updateendpointUrl = null;\n      }\n    });\n    this.subscriptiondeletesingleEndpoint = this.getdeletesingleEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.deletesingle_endpointUrl = result;\n      } else {\n        this.deletesingle_endpointUrl = null;\n      }\n    });\n    this.subscriptionupdatestatusSingleEndpoint = this.getupdatestatus_singleEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.updatestatus_single_endpointUrl = result;\n      } else {\n        this.updatestatus_single_endpointUrl = null;\n      }\n    });\n    this.subscriptionGetdataEndpoint = this.getdataEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.getdata_endpointUrl = result;\n      } else {\n        this.getdata_endpointUrl = null;\n      }\n    });\n\n    \n  }\n\n  setServerUrl(value: any) {\n    this.subjectForServerUrl.next(value);\n  }\n  public clearServerUrl() {\n    this.subjectForServerUrl.next(null);\n  }\n  public getServerUrl(): Observable<any> {\n    return this.subjectForServerUrl.asObservable();\n  }\n\n  setaddEndpoint(value: any) {\n    this.subjectForaddEndpointUrl.next(value);\n  }\n  public clearaddEndpoint() {\n    this.subjectForaddEndpointUrl.next(null);\n  }\n  public getaddEndpoint(): Observable<any> {\n    return this.subjectForaddEndpointUrl.asObservable();\n  }\n/*****added by souresh******/\n  setuploadEndpont(value:any){\n    this.subjectForuploadEndpointUrl.next(value);\n  }\n  public clearuploadEndpoint(){\n    this.subjectForuploadEndpointUrl.next(null);\n  }\n  public getuploadEndpoint(): Observable <any> {\n    return this.subjectForuploadEndpointUrl.asObservable();\n  }\n   /********souresh end here********/\n\n\n  setupdateEndpoint(value: any) {\n    this.subjectForupdateEndpointUrl.next(value);\n  }\n  public clearupdateEndpoint() {\n    this.subjectForupdateEndpointUrl.next(null);\n  }\n  public getupdateEndpoint(): Observable<any> {\n    return this.subjectForupdateEndpointUrl.asObservable();\n  }\n\n  setdeletesingleEndpoint(value: any) {\n    this.subjectFordeletesingleEndpointUrl.next(value);\n  }\n  public cleardeletesingleEndpoint() {\n    this.subjectFordeletesingleEndpointUrl.next(null);\n  }\n  public getdeletesingleEndpoint(): Observable<any> {\n    return this.subjectFordeletesingleEndpointUrl.asObservable();\n  }\n\n  setupdatestatus_singleEndpoint(value: any) {\n    this.subjectForupdatestatusSingleEndpointUrl.next(value);\n  }\n  public clearupdatestatus_singleEndpoint() {\n    this.subjectForupdatestatusSingleEndpointUrl.next(null);\n  }\n  public getupdatestatus_singleEndpoint(): Observable<any> {\n    return this.subjectForupdatestatusSingleEndpointUrl.asObservable();\n  }\n\n  setgetdataEndpoint(value: any) {\n    this.subjectForGetdataEndpointUrl.next(value);\n  }\n  public cleargetdataEndpoint() {\n    this.subjectForGetdataEndpointUrl.next(null);\n  }\n  public getdataEndpoint(): Observable<any> {\n    return this.subjectForGetdataEndpointUrl.asObservable();\n  }\n\n\n\n  isTokenExpired() {\n\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n  }\n\n  addData(requestdata: any) {\n    console.log('in adddata apiservice');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken          //hard code written Authorization(temp)\n      })\n    };\n\n    console.log('httpoptions',httpOptions,this.serverUrl,requestdata);\n    var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n  /*******added by souresh************/\n  uploadFile(requestdata:any){\n    const httpOptions={\n        headers: new HttpHeaders({\n          'Content-Type':'application/json',\n          'Authorization':this.accesstoken          //hard code written Authorization(temp)\n        })\n    };\n    var result=this._http.post(this.serverUrl + this.uploadEndpointUrl,JSON.stringify(requestdata),httpOptions).pipe(map(res=>res));\n    return result;\n  }\n  /*******souresh end here********/\n  UpdateData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken          //hard code written Authorization(temp)\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.updateendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  getData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.getdata_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteSingleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.deletesingle_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteMultipleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.deletesingle_endpointUrl+'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForSingleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.updatestatus_single_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForMultipleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.updatestatus_single_endpointUrl+'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n  CustomRequest(requestdata: any, endpoint:any ) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl +endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n  getDataWithoutToken(endpoint:any,requestdata: any ) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    var result = this._http.post(endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n  \n}","\n/** This is the category listing **/\n\nimport { Component, OnInit, Input } from '@angular/core';\nimport { RouterModule, Routes, Router, ActivatedRoute } from '@angular/router';\nimport { ApiService } from './api.service';\n\n@Component({\n  selector: 'lib-Blog',\n  templateUrl: 'blog.component.html',\n  styleUrls: ['style.css']\n})\nexport class BlogComponent implements OnInit {\n  public blodata:any=[];\n // send basic sort data\n sortdata:any={\n  \"type\":'desc',\n  \"field\":'priority',\n  \"options\":['priority','parentcategoryname','blogtitle']\n};\n// datacollection\ndatacollection: any='getbloglistdata';\ndate_search_source_count: any=0;\n// send basic limit data\nlimitcond:any={\n  \"limit\":10,\n  \"skip\":0,\n  \"pagecount\":1\n}; \n  // ===========================================declaration================================\n  blogListConfig:any;\n  loader:boolean=false;\n  // ======================================================================================\n\n  // ================================================Input For Lib Listing================================\n  // public value:any=[{val:'','name':''}];\n  public value:any=[];\n  @Input()\n  set config(receivedData: any) {\n     for (let i in receivedData.datasource) {\n       this.value.push(\n         { 'name': receivedData.datasource[i].parentcategoryname, val: receivedData.datasource[i].parentcategoryname }\n         );\n  \n   }\n\n    this.blogListConfig = {\n      apiUrl: receivedData.apiBaseUrl,\n      endpoint :receivedData.endpoint,\n      endpointc:receivedData.endpointc,\n      listEndPoint: receivedData.listEndPoint,\n      datasource: receivedData.datasource,\n      tableName: receivedData.tableName,\n      listArray_skip: [\"_id\", \"userId\", \"created_at\", \"updated_at\",\"image\",\"description_html\",\"parentcategoryname_search\",\"blogtitle_search\"],\n      listArray_modify_header: { \"blogtitle\":\"Blog Title\", \"description\": \"Description\", \"priority\": \"Priority\", \"status\": \"Status\" ,\"parentcategoryname\":\"Parent Category Name\",\"blogcat\":\"Blog Category\",\"date\":\"Date\"},\n      admintablenameTableName: \"admin\",\n      statusarr: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }],\n      updateurl: receivedData.updateEndpoint,\n      editUrl: receivedData.editUrl,\n      jwtToken: receivedData.jwtToken,\n      deleteEndPoint: receivedData.deleteEndPoint,\n      view: receivedData.view,\n\n      search_settings:{\n        textsearch: [{ label: \"Search by Blog Category Name\", field: 'blogtitle' }],\n        selectsearch: [\n          { label: 'Search By Status', field: 'status',values: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }]\n        },\n          {label:\"Search By Parent Category\",field:'parentcategoryname',values:this.value}\n        ]\n\n        // search:[{label:\"Search By Parent Category\",field:'parentcategoryname',values:this.value}]\n      }\n      //  /*Showing Image in the Modal*/\n      //  pendingmodelapplicationarray_detail_datatype: [{\n      //   key: \"image\",\n      //   value: 'image',\n      //   fileurl: 'https://s3.us-east-2.amazonaws.com/crmfiles.influxhostserver/testimonial/'             // Image path \n      // }],\n    }\n    this.loader = false;\n  }\n  // ====================================================================================================\n\n  constructor(public apiService:ApiService) { }\n\n  ngOnInit() {\n    let endpoint=this.blogListConfig.endpoint;\n    let endpointc=this.blogListConfig.endpointc;\n\n    let data:any={\n        \"condition\":{\n            \"limit\":10,\n            \"skip\":0\n        },\n    sort:{\n        \"type\":'desc',\n        \"field\":'priority'\n    }\n\n    }\n    this.apiService.getDataWithoutToken(endpointc, data).subscribe((res:any) => {\n        this.date_search_source_count =res.count;\n      \n    }, error => {\n        console.log('Oooops!');\n    });\n\n    this.apiService.getDataWithoutToken(endpoint,data).subscribe((res:any) => {\n    \n    }, error => {\n        console.log('Oooops!');\n    });\n\n  }\n  \n\n}\n\n","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n//import { MatFileUploadModule } from 'angular-material-fileupload';\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n    //MatFileUploadModule\n  ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license */","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BlogService } from '../blog.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nexport interface DialogData {\n  msg: string;\n}\n\n@Component({\n  selector: 'lib-add-blog',\n  templateUrl: './add-blog.component.html',\n  styleUrls: ['./add-blog.component.css']\n})\nexport class AddBlogComponent implements OnInit {\n  editorconfig:any={};\n  /**ckeditor start here*/\n\n  // editorConfig = {\n  //   placeholder: 'Type the content here!',\n  // };\n  // public model = {\n  //   editorData: ''\n  // };\n\n\n  /**ckeditor end here*/\n\n\n  // ====================declarations==================\n  blogCatForm: FormGroup;\n  header_txt: any = \"Add Blog Category\";\n  buttonText: any = \"SUBMIT\";\n  configData: any;\n  loader: boolean = false;\n  successMessage: any = \"Category Added Successfully!!!\"\n  getParentCatArr: any = [];\n  dialogRef: any;\n\n  // ==================================================\n\n\n\n  constructor(private formBuilder: FormBuilder, private blogService: BlogService, private router: Router,\n    private cookieService: CookieService, public dialog: MatDialog) {\n    this.editorconfig.extraAllowedContent = '*[class](*),span;ul;li;table;td;style;*[id];*(*);*{*}';\n  }\n\n\n  ngOnInit() {\n    //generating the form\n    this.generateForm();\n    //getting the parent category\n    this.getParentData();\n    // --------------------------------checking the cases------------------------ \n    switch (this.configData.action) {\n      case 'add':\n        /* Button text */\n        this.buttonText = \"SUBMIT\";\n        break;\n      case 'edit':\n        /* Button text */\n        this.buttonText = \"UPDATE\";\n        this.successMessage = \"One row updated!!!\";\n        this.setDefaultValue(this.configData.defaultData);\n        this.header_txt = \"EDIT\";\n        break;\n    }\n    // --------------------------------------------------------------------------\n\n  }\n\n\n  // ================================================Default value======================================\n  setDefaultValue(defaultValue) {\n    this.blogCatForm.patchValue({\n      blogtitle: defaultValue.blogtitle,\n      priority: defaultValue.priority,\n      status: defaultValue.status,\n      description: defaultValue.description,\n      parent_id: defaultValue.parent_id\n    });\n\n  }\n  // ==================================================================================================\n\n\n  //  ============================GENERATING THE FORM=======================\n  generateForm() {\n    this.blogCatForm = this.formBuilder.group({\n      blogtitle: ['', [Validators.required, Validators.maxLength(50)]],\n      priority: ['', [Validators.required, Validators.maxLength(2)]],\n      status: [true,],\n      description: ['', [Validators.required, Validators.maxLength(100)]],\n      parent_id: [0,]\n    });\n  }\n  // ========================================================================\n\n\n  //  Getting the input Configuration \n  @Input()\n  set config(getConfig: any) {\n    this.configData = getConfig;\n\n  }\n\n  // =========================================MODAL functions==========================================\n  openDialog(x: any): void {\n    this.dialogRef = this.dialog.open(Modal2, {\n      width: '250px',\n      data: { msg: x }\n    });\n\n    this.dialogRef.afterClosed().subscribe(result => {\n\n    });\n  }\n  // ===================================================================================================\n\n\n\n\n  //Getting the parent category\n  getParentData() {\n    let postData: any = {\n      source: this.configData.source,\n      token: this.cookieService.get('jwtToken')\n\n    };\n    this.blogService.getData(this.configData.endpoint2 + 'datalist', postData).subscribe((response: any) => {\n      this.getParentCatArr = response.res;\n      //console.log('parent category',response.res);\n    })\n  }\n\n\n\n\n\n  // =========================SUBMIT function==================\n  onSubmit() {\n    this.blogCatForm.controls['description'].markAsTouched();\n\n    this.loader = true;\n    /* stop here if form is invalid */\n    if (this.blogCatForm.invalid) {\n      return;\n    } else {\n      if (this.blogCatForm.value.status) {\n        this.blogCatForm.value.status = parseInt(\"1\");\n      } else {\n        this.blogCatForm.value.status = parseInt(\"0\");;\n      }\n\n      /* start process to submited data */\n      let postData: any = {\n        source: this.configData.source,\n        data: Object.assign(this.blogCatForm.value, this.configData.condition),\n        \"sourceobj\": [\"parent_id\"]\n      };\n\n      this.blogService.addData(this.configData.endpoint, postData).subscribe((response: any) => {\n        if (response.status == \"success\") {\n\n          this.openDialog(this.successMessage);\n          setTimeout(() => {\n            this.dialogRef.close();\n          }, 2000);\n\n          this.router.navigate([this.configData.callBack]);\n        } else {\n          alert(\"Some error occurred. Please try again.\");\n        }\n      }, (error) => {\n        alert(\"Some error occurred. Please try again.\");\n      });\n    }\n  }\n  // ==========================================================\n\n\n  //Blur function\n  inputBlur(val: any) {\n    this.blogCatForm.controls[val].markAsUntouched();\n  }\n}\n\n// ============================================MODAL COMPONENT===========================================\n@Component({\n  selector: 'app-modal',\n  templateUrl: 'modal.html',\n})\nexport class Modal2 {\n\n  constructor(\n    public dialogRef: MatDialogRef<Modal2>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n// ======================================================================================================\n\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MetaGuard } from '@ngx-meta/core';\nimport { AddBlogComponent } from './add-blog/add-blog.component'\nconst appRoutes: Routes = [\n  {path:'add', component : AddBlogComponent },\n  {path:'edit/:id', component : AddBlogComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { FormBuilder, FormControl, FormGroup, Validators, FormArray } from '@angular/forms';\nimport { ApiService } from '../api.service';\nimport { Observable } from 'rxjs';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog, MatSnackBar } from \"@angular/material\";\nimport { map, startWith } from 'rxjs/operators';\n\n\ninterface  Websites {\n  value: number;\n  viewValue: string;\n}\n\nexport interface DialogData {\n  msg: any;\n  videourl: any;\n}\n\n\n\n@Component({\n  selector: 'lib-addedit-blogmanagement',\n  templateUrl: './addedit-blogmanagement.component.html',\n  styleUrls: ['./addedit-blogmanagement.component.css']\n})\n\nexport class AddeditBlogmanagementComponent implements OnInit {\n  websites: Websites[] = [\n    {value: 1, viewValue: 'Mask Blog 1'},\n    {value: 2, viewValue: 'Mask Blog 2'},\n    {value: 3, viewValue: 'Mask Blog 3'}\n  ];\n  // ---------------------declarations-------------------------------------\n  public headerText: any = 'Add Blog Management Data';\n  public buttonText: any = 'SUBMIT';\n  public blogCategoryArray: any = [];\n  public configData: any;\n  blogManagementForm: FormGroup;\n  public serverUrlData: any;\n  public getDataEndpointData: any;\n  public addEndpointData: any;\n  isSubmitted = false;\n  video_prefix: any = 'https://www.youtube.com/watch?v=';\n  options: any = [''];\n  filteredOptions: Observable<string[]>;\n  myControl = new FormControl();\n  tags_array: any = [];\n  dialogRef: any;\n  public params_id: any;\n  setData: any;\n  messageText: any;\n  listUrl: any;\n  testTag: any = [];\n  imageConfigData: any;\n  ErrCode: any;\n  img_var: any;\n  image_name: any;\n  image_type: any;\n  flag: boolean = false;\n  images_array: any = [];\n  images_array_edit: any = [];\n  fileConfigData: any;\n  file_array: any = [];\n  file_array_edit: any = [];\n  action2:any;\n  editorconfig:any={};\n  public statuschecked:boolean = true;\n  // -----------------------------------------------------------------------\n\n\n\n\n\n  // ----------------------------------------------Input Section-----------------------\n\n  // Input receiving from add/edit app \n  @Input()\n  set config(getConfig: any) {\n    this.configData = getConfig;\n\n  }\n\n  @Input()          //setting the server url from project\n  set serverUrl(serverUrl: any) {\n    this.serverUrlData = (serverUrl) || '<no name set>';\n    this.serverUrlData = serverUrl;\n  }\n\n  @Input()          //setting the server url from project\n  set getDataEndpoint(endpointUrlval: any) {\n    this.getDataEndpointData = (endpointUrlval) || '<no name set>';\n    this.getDataEndpointData = endpointUrlval;\n\n\n  }\n  @Input()          //setting the server url from project\n  set addEndpoint(endpointUrlval: any) {\n    this.addEndpointData = (endpointUrlval) || '<no name set>';\n    this.addEndpointData = endpointUrlval;\n\n  }\n\n\n  @Input()         //setting the listing url form the application\n  set listRoute(listval: any) {\n    this.listUrl = (listval) || '<no name set>';\n    this.listUrl = listval;\n\n  }\n  // -----------------------------------------------------------------------------------------\n\n  constructor(private http: HttpClient, private apiservice: ApiService,\n    private activatedRoute: ActivatedRoute, private router: Router,\n    private formBuilder: FormBuilder, public dialog: MatDialog,\n    public snackBar: MatSnackBar) {\n    this.blogManagementForm = this.formBuilder.group({\n      blogtitle: ['', [Validators.required]],\n      blogcat: ['', ],\n      description: ['', [Validators.required]],\n      website:[],\n      featured:[''],\n      priority: ['', [Validators.required]],\n      status: [''],\n      // metatitle: ['', [Validators.required]],\n      // metadesc: ['', [Validators.required]],\n      author:['',[Validators.required]],\n      video: this.formBuilder.array([]),\n      tags: [''],\n      blogs_image: [''],\n      blogs_file: ['']\n    });\n    this.editorconfig.extraAllowedContent = '*[class](*),span;ul;li;table;td;style;*[id];*(*);*{*}';\n    \n  }\n\n\n  ngOnInit() {\n    /**Observable start here**/\n    this.apiservice.clearServerUrl();\n    setTimeout(() => {\n      this.apiservice.setServerUrl(this.serverUrlData);\n    }, 50);\n    this.apiservice.cleargetdataEndpoint();\n    setTimeout(() => {\n      this.apiservice.setgetdataEndpoint(this.getDataEndpointData);\n    }, 50);\n    this.apiservice.clearaddEndpoint();\n    setTimeout(() => {\n      this.apiservice.setaddEndpoint(this.addEndpointData);\n    }, 50);\n    /**Observable end here**/\n\n    if (this.action2!='edit')\n      setTimeout(() => {\n        this.addYoutubeVideo('', '', '');\n      }, 500)\n\n    setTimeout(() => {\n      this.getBlogCategory();\n    }, 50)\n\n\n    setTimeout(() => {\n      this.getTagsCount();\n    }, 50)\n\n\n    if (this.action2=='edit') {\n      this.headerText=\"Edit Blog Management Data\";\n      this.flag = true;\n      this.params_id = this.setData._id;\n      this.buttonText = \"Update\";\n      this.blogManagementForm.controls['blogtitle'].patchValue(this.setData.blogtitle);\n      this.blogManagementForm.controls['blogcat'].patchValue(this.setData.blogcat);\n      this.blogManagementForm.controls['description'].patchValue(this.setData.description);\n\n      this.blogManagementForm.controls['website'].patchValue(this.setData.website);\n      this.blogManagementForm.controls['featured'].patchValue(this.setData.featured);\n\n      this.blogManagementForm.controls['priority'].patchValue(this.setData.priority);\n      this.blogManagementForm.controls['status'].patchValue(this.setData.status);  \n      this.blogManagementForm.controls['blogs_image'].patchValue(this.setData.blogs_image);\n      this.blogManagementForm.controls['blogs_file'].patchValue(this.setData.blogs_file);\n      this.blogManagementForm.controls['author'].patchValue(this.setData.author);\n\n\n      /*Image works*/\n      for (let i = 0; i < this.setData.blogs_image.length; i++) {\n        this.img_var = this.setData.blogs_image[i].basepath + this.setData.blogs_image[i].image;\n        this.image_name = this.setData.blogs_image[i].name;\n        this.image_type = this.setData.blogs_image[i].type;\n        this.images_array_edit.push({ 'img_var': this.img_var, 'image_name': this.image_name, 'image_type': this.image_type });\n        this.images_array.push({\n          \"basepath\": this.setData.blogs_image[i].basepath,\n          \"image\": this.setData.blogs_image[i].image,\n          \"name\": this.setData.blogs_image[i].name,\n          \"type\": this.setData.blogs_image[i].type\n        });\n      }\n\n      /*File works*/\n      for (let i2 = 0; i2 < this.setData.blogs_file.length; i2++) {\n        this.file_array_edit.push(this.setData.blogs_file[i2].name);\n        this.file_array.push({\n          \"basepath\": this.setData.blogs_file[i2].basepath,\n          \"file\": this.setData.blogs_file[i2].file,\n          \"name\": this.setData.blogs_file[i2].name,\n          \"type\": this.setData.blogs_file[i2].type\n        });\n      }\n\n\n      for (const vid in this.setData.video) {\n        this.addYoutubeVideo(this.setData.video[vid].video_url,\n          this.setData.video[vid].video_title,\n          this.setData.video[vid].video_description);\n      }\n\n      if (this.setData.tags != \"\")\n        this.setData.tags.forEach(element => {\n          this.tags_array.push(element);\n        });\n\n\n    }\n\n\n\n\n\n    // ------------------------------Autocomplete Functions----------------------------------\n\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filter(value))\n    );\n    // ------------------------------------------------------------------------------------------\n  }\n\n\n  // ------------------------------------_Filter FUnction----------------------------------\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    return this.options.filter(option => option.toLowerCase().indexOf(filterValue) === 0);\n  }\n  // --------------------------------------------------------------------------------------------\n\n\n  @Input()\n  set action(action: any) {\n    this.action2 = action;\n  }\n\n\n  @Input()\n  set imageUpload(getConfig: any) {\n    this.imageConfigData = getConfig;\n  }\n\n  @Input()\n  set fileUpload(getConfig: any) {\n    this.fileConfigData = getConfig;\n  }\n\n\n\n\n  // ------------------------------------MODAL Function--------------------------------------------\n  openDialog(x: any): void {\n    this.dialogRef = this.dialog.open(Modal, {\n      width: '45%',\n      height: '500px',\n      data: { msg: x }\n\n    });\n\n    // this.sanitizer.bypassSecurityTrustResourceUrl\n    this.dialogRef.afterClosed().subscribe(result => {\n\n    });\n  }\n  // ----------------------------------------------------------------------------------------------\n\n\n\n\n\n\n\n\n\n\n\n  // ----------------------------Ediatble material Form Array-------------------\n  trackByFn(index) {\n    return index;\n  }\n  // -----------------------------------------------------------------------------\n\n\n\n\n\n\n\n  // ----------------------------------Add Credential Fucntions-----------------\n  addYoutubeVideo(vid_url: any, vid_tit: any, vid_desc: any) {\n    const creds = this.blogManagementForm.controls.video as FormArray;\n    creds.push(this.formBuilder.group({\n      video_url: [vid_url],\n      video_title: [vid_tit],\n      video_description: [vid_desc]\n    }));\n  }\n  // ---------------------------------------------------------------------------\n\n\n\n\n\n\n\n  // ---------------------------------Delete Credetial Fucntions----------------\n  deleteCreds() {\n    const creds = this.blogManagementForm.controls.video as FormArray;\n    creds.removeAt(1);\n  }\n  // ----------------------------------------------------------------------------\n\n\n\n\n\n\n  // ----------------------------------Get Blog Category Function-------------------\n\n  getBlogCategory() {\n    var data: any;\n    data = {\n      'source': 'blog_category'\n    };\n    this.apiservice.getData(data).subscribe(response => {\n      let result: any;\n      result = response;\n      this.blogCategoryArray = result.res;\n    });\n  }\n  // ----------------------------------------------------------------------------------\n\n\n\n\n\n  // ----------------------------------TAGS view Function-------------------\n\n  getTagsCount() {\n    var data: any;\n    data = {\n      'source': 'tags_view'\n    };\n    this.apiservice.getData(data).subscribe(response => {\n      let result: any;\n      result = response;\n      if (result != null && result.res != null && result.res[0] != null)      \n        this.options=result.res[0].tags;\n      \n       \n\n\n    });\n  }\n  // ----------------------------------------------------------------------------------\n\n\n\n\n\n  //  -----------------------------EDIT RESOLVE FUNCTION------------------------------\n  @Input()          //single data from resolve call  & set the value for edit\n  set singleData(editDatavals: any) {\n    this.setData = editDatavals;\n  }\n  // -----------------------------------------------------------------------------------\n\n\n  // ---------------------------------SUBMIT----------------------------------------\n  onSubmit() {\n     \n    /*__________________________IMAGE UPLOADER________________________________________*/\n    if (this.imageConfigData) {\n      for (const loop in this.imageConfigData.files) {\n        this.images_array =\n          this.images_array.concat({\n            \"basepath\": this.imageConfigData.files[loop].upload.data.basepath + '/' + this.imageConfigData.path + '/',\n            \"image\": this.imageConfigData.files[loop].upload.data.data.fileservername,\n            \"name\": this.imageConfigData.files[loop].name,\n            \"type\": this.imageConfigData.files[loop].type\n          });\n      }\n      this.blogManagementForm.value.blogs_image = this.images_array;\n    } else {\n      this.blogManagementForm.value.blogs_image = false;\n    }\n    /*_____________________________________________________________________________________*/\n\n\n    /*_________________________________________FILE UPLOADER_______________________________*/\n\n    if (this.fileConfigData) {\n      for (const loop in this.fileConfigData.files) {\n        this.file_array =\n          this.file_array.concat({\n            \"basepath\": this.fileConfigData.files[loop].upload.data.basepath + '/' + this.fileConfigData.path + '/',\n            \"file\": this.fileConfigData.files[loop].upload.data.data.fileservername,\n            \"name\": this.fileConfigData.files[loop].name,\n            \"type\": this.fileConfigData.files[loop].type\n          });\n      }\n      this.blogManagementForm.value.blogs_file = this.file_array;\n    } else {\n      this.blogManagementForm.value.blogs_file = false;\n    }\n    // ___________________________________________________________________________________\n\n    this.blogManagementForm.value.tags = this.tags_array;\n\n    this.blogManagementForm.controls['description'].markAsTouched();\n    this.blogManagementForm.controls['blogtitle'].markAsTouched();\n\n    if (this.blogManagementForm.valid) {\n      console.log(\"values\",this.blogManagementForm.value);\n\n      //status\n      if (this.blogManagementForm.value.status)\n        this.blogManagementForm.value.status =1;\n      else\n        this.blogManagementForm.value.status =0;\n// featured\n      if (this.blogManagementForm.value.featured)\n        this.blogManagementForm.value.featured = parseInt(\"1\");\n      else\n        this.blogManagementForm.value.featured = parseInt(\"0\");\n\n\n\n\n      if (this.params_id!= null) {    //update part\n        this.messageText = \"One row updated!!!\";\n        this.blogManagementForm.value.tags = this.tags_array;\n        data = {\n          \"source\": \"blogs\",\n          \"data\": {\n            \"id\": this.params_id,\n            \"blogtitle\": this.blogManagementForm.value.blogtitle,\n            \"blogcat\": this.blogManagementForm.value.blogcat,\n            \"description\": this.blogManagementForm.value.description,\n            \"website\": this.blogManagementForm.value.website,\n            \"featured\": this.blogManagementForm.value.featured,\n            \"priority\": this.blogManagementForm.value.priority,\n            \"status\": this.blogManagementForm.value.status, \n            \"tags\": this.blogManagementForm.value.tags,\n            \"video\": this.blogManagementForm.value.video,\n            \"blogs_image\": this.blogManagementForm.value.blogs_image,\n            \"blogs_file\": this.blogManagementForm.value.blogs_file,\n            \"author\":this.blogManagementForm.value.author\n\n          },\n          \"sourceobj\": [\"blogcat\"]\n        };\n      } else {\n        this.isSubmitted = true;\n        var data: any;\n        data = {                                         //add part\n          \"source\": \"blogs\",\n          \"data\": this.blogManagementForm.value,\n          \"sourceobj\": [\"blogcat\"]\n        };\n      }\n\n      this.apiservice.addData(data).subscribe(response => {\n        let result: any;\n        result = response;\n\n\n\n        setTimeout(() => {\n          this.router.navigateByUrl('/' + this.listUrl);\n        }, 3000);\n\n      });\n\n\n    }\n    else\n    console.log(\"Form is invalid\");\n    \n  }\n\n\n  // -----------------------------------------------------------------------------------\n\n\n\n\n  get onSignUpValidate() {\n    return this.blogManagementForm.controls;\n  }\n\n\n  inputBlur(val: any) {\n    this.blogManagementForm.controls[val].markAsUntouched();\n  }\n\n\n\n  \n\n\n\n\n  // -------------------------------Select Tags AutoComplete Field-----------------------\n  showval(event: any) {\n    \n    if (event.keyCode == 13 || event.keyCode == 32) {\n      this.tags_array.push(event.target.value);\n      this.blogManagementForm.controls['tags'].patchValue(\"\");\n      return;\n    }\n\n  }\n  // ------------------------------------------------------------------------------------\n\n\n\n\n  // ---------------------------------------VIDEO URL PREVIEW-----------------------------\n  preview_video(video_index) {\n    this.openDialog(this.blogManagementForm.value.video[video_index].video_url);\n  }\n  // -------------------------------------------------------------------------------------\n\n\n  // --------------------------------------------CLEAR TAGS---------------------------------\n  clearTags(index) {\n    this.tags_array.splice(index, 1);\n  }\n  // -------------------------------------------------------------------------------------\n\n  openSnackBar() {\n    this.snackBar.openFromComponent(YoutubeComponent, {\n      // duration: 1500,\n      panelClass: ['snackbar-color']\n    });\n  }\n  // --------------------------------------Blogs Image clear-------------------------------\n  clear_image(index) {\n    this.images_array.pop(this.setData.blogs_image[index]);\n    this.images_array_edit.splice(index, 1);\n  }\n  // ------------------------------------------------------------------------------------\n\n  // --------------------------------------Blogs File clear-------------------------------\n  clearFileTags(index) {\n    this.file_array.pop(this.setData.blogs_file[index]);\n    this.file_array_edit.splice(index, 1);\n  }\n  // ------------------------------------------------------------------------------------\n}\n\n\n\n\n\n\n\n\n// ------------------------------------Modal Component Works------------------------------\n@Component({\n  selector: 'app-modal',\n  templateUrl: 'modal.html',\n})\nexport class Modal {\n  videoid: any = '';\n\n  constructor(\n    public dialogRef: MatDialogRef<Modal>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n      console.warn('video modal',data)\n\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n// ---------------------------------------------------------------------------------------\n@Component({\n  templateUrl: 'youtubetip.html',\n  styleUrls: ['./addedit-blogmanagement.component.css']\n})\nexport class YoutubeComponent {\n\n}\n\n","import { Component, OnInit , Input} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'lib-youtubeplayer',\n  templateUrl: './youtubeplayer.component.html',\n  styleUrls: ['./youtubeplayer.component.css']\n})\nexport class YoutubeplayerComponent implements OnInit {\n  id:any;\n\n  @Input()          //setting the server url from project\n  set videoid(id: any) {\n    this.id = (id) || '<no name set>';\n    this.id = this.sanitizer.bypassSecurityTrustResourceUrl('https://www.youtube.com/embed/'+id);\n  }\n  constructor(public sanitizer:DomSanitizer) { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ApiService } from '../api.service';\n\n/** This is the actuali main blog page **/\n\n@Component({\n  selector: 'lib-listing-blogmanagementlib',\n  templateUrl: './listing-blogmanagementlib.component.html',\n  styleUrls: ['./listing-blogmanagementlib.component.css']\n})\nexport class ListingBlogmanagementlibComponent implements OnInit {\n\npublic value:any=[];\n\n  // ===========================================declaration================================\n  blogListConfig: any;\n  loader: boolean = false;\n  // ======================================================================================\n // send basic sort data\n sortdata:any={\n  \"type\":'desc',\n  \"field\":'priority',\n  \"options\":['author','blogcategory','blogtitle','priority']\n};\n// datacollection\ndatacollection: any='getblogmanagementlistdata';\ndate_search_source_count: any=0;\n// send basic limit data\nlimitcond:any={\n  \"limit\":10,\n  \"skip\":0,\n  \"pagecount\":1\n}; \n  // ================================================Input For Lib Listing================================\n  @Input()\n  set config(receivedData: any) {\nconsole.log(\"hgshj\",receivedData);\nfor (let i in receivedData.datasource) {\n  this.value.push(\n    { 'name': receivedData.datasource[i].blogcategory, val: receivedData.datasource[i].blogcategory }\n    );\n    console.log(\"free\",this.value);\n\n}\n  //  this.value = receivedData;\n    this.blogListConfig = {\n      apiUrl: receivedData.apiBaseUrl,\n      endpoint :receivedData.endpoint,\n      endpointc:receivedData.endpointc,\n      listEndPoint: receivedData.listEndPoint,\n      datasource: receivedData.datasource,\n      tableName: receivedData.tableName,\n      listArray_skip: [\"_id\", \"userId\", \"created_at\", \"updated_at\", \"image\", \"metatitle\", \"metadesc\", \"description_html\", \"credentials\", \"blogs_file\", \"blogs_image\",\"blogtitle_search\",\"author_search\",\"video\",\"blogcat\",\"profile_picture\",\"tagsearch\"],\n      listArray_modify_header: {\n        \"blogtitle\": \"Blog Title\", \"description\": \"Description\",\"date added\":\"Date\",\"profile picture\":\"Profile Picture\",\"tags\":\"Tags\",\n        \"priority\": \"Priority\", \"status\": \"Status\", \"parentcategoryname\": \"Parent Category Name\",\n        \"author\": \"Author\",\"blogcat\":\"Blog Category\",\"date\":\"Date\",\"blogcategory\":\"Blog Category\"\n      },\n      admintablenameTableName: \"admin\",\n      statusarr: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }],\n      updateurl: receivedData.updateEndpoint,\n      editUrl: receivedData.editUrl,\n      jwtToken: receivedData.jwtToken,\n      deleteEndPoint: receivedData.deleteEndPoint,\n      view: receivedData.view,\n      search_settings: {\n        textsearch: [{ label: \"Blog Title\", field: 'blogtitle' },{ label: \"Search By Author\", field: 'author' },{ label: \"Search By Tags\", field: 'tagsearch' }],\n\n        selectsearch: [\n          { label: 'Status', field: 'status', values: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }]},{label:\"Search By Blog Category\",field:'blogcategory',values:this.value},\n          {\n            label: 'Search By Blog Featured', field: 'featured', values: [{ val: 1, name: \"Yes\" }, { val: 0, name: 'No' }]\n          },\n          {\n            label: 'Search By Blog Website', field: 'website', values: [{ val: 1, name: \"Mask Blog 1\" }, { val: 2, name: 'Mask Blog 2' },{val:3,name:\"Mask Blog 3\"}]\n          }\n        ]\n\n        // datesearch:[{startdatelabel:\"Start Date\",enddatelabel:\"End Date\",submit:\"Search By Date\",  field:\"created_at\"}],\n      },\n      //  /*Showing Image in the Modal*/\n      //  pendingmodelapplicationarray_detail_datatype: [{\n      //   key: \"image\",\n      //   value: 'image',\n      //   fileurl: 'https://s3.us-east-2.amazonaws.com/crmfiles.influxhostserver/testimonial/'             // Image path \n      // }],\n    }\n    this.loader = false;\n  }\n  // ====================================================================================================\n\n\n\n  constructor(private apiService: ApiService) {\n   \n  }\n\n  ngOnInit() {\n    let endpoint=this.blogListConfig.endpoint;\n    let endpointc=this.blogListConfig.endpointc;\n    let data:any={\n        \"condition\":{\n            \"limit\":10,\n            \"skip\":0\n        },\n    sort:{\n        \"type\":'desc',\n        \"field\":'priority'\n    }\n\n    }\n    this.apiService.getDataWithoutToken(endpointc, data).subscribe((res:any) => {\n        // console.log('in constructor');\n        // console.log(result);\n        this.date_search_source_count =res.count;\n        console.warn('blogData c',res);\n\n    }, error => {\n        console.log('Oooops!');\n    });\n\n    this.apiService.getDataWithoutToken(endpoint,data).subscribe((res:any) => {\n        // console.log('in constructor');\n        // console.log(result);\n        // this.pendingmodelapplicationarray =res.results.res;\n        //console.warn('blogData',res);\n\n    }, error => {\n        console.log('Oooops!');\n    });\n\n  }\n}","import { NgModule } from '@angular/core';\nimport { BlogComponent } from './blog.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { DemoMaterialModule } from './material-module'\nimport { FileUploadModule } from 'file-upload-lib-influxiq';\nimport { RouterModule } from '@angular/router';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AddBlogComponent,Modal2 } from './add-blog/add-blog.component';\nimport { ListingModule } from 'listing-angular7';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ApiService } from './api.service';\nimport { CommonModule } from '@angular/common';\nimport { AddeditBlogmanagementComponent,Modal, YoutubeComponent } from './addedit-blogmanagement/addedit-blogmanagement.component';\nimport { YoutubeplayerComponent } from './youtubeplayer/youtubeplayer.component';\nimport { ListingBlogmanagementlibComponent } from './listing-blogmanagementlib/listing-blogmanagementlib.component';\nimport { CKEditorModule } from 'ngx-ckeditor';\n\n@NgModule({\n  declarations: [\n    BlogComponent,\n    AddBlogComponent,\n    AddeditBlogmanagementComponent,\n    Modal,\n    YoutubeplayerComponent,\n    YoutubeComponent,\n    ListingBlogmanagementlibComponent,Modal2\n  ],\n  imports: [\n    DemoMaterialModule,\n    RouterModule,\n    AppRoutingModule,\n    ListingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserModule,\n    FileUploadModule,\n    CommonModule,\n    CKEditorModule\n  \n  ],\n  exports: [BlogComponent, AddBlogComponent, AddeditBlogmanagementComponent,ListingBlogmanagementlibComponent],\n  providers: [ApiService],\n  entryComponents: [Modal2,Modal, YoutubeComponent],\n\n})\nexport class BlogModule { }\n"]}