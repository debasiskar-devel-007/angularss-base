{"version":3,"sources":["ng://blog-lib-influxiq/lib/blog.service.ts","ng://blog-lib-influxiq/lib/blog.component.ts","ng://blog-lib-influxiq/lib/material-module.ts","ng://blog-lib-influxiq/lib/add-blog/add-blog.component.ts","ng://blog-lib-influxiq/lib/app-routing.module.ts","ng://blog-lib-influxiq/lib/api.service.ts","ng://blog-lib-influxiq/lib/addedit-blogmanagement/addedit-blogmanagement.component.ts","ng://blog-lib-influxiq/lib/youtubeplayer/youtubeplayer.component.ts","ng://blog-lib-influxiq/lib/listing-blogmanagementlib/listing-blogmanagementlib.component.ts","ng://blog-lib-influxiq/lib/blog.module.ts"],"names":["BlogService","prototype","isTokenExpired","addData","endpoint","requestdata","httpOptions","headers","HttpHeaders","Content-Type","Authorization","this","accesstoken","_http","post","serverUrl","JSON","stringify","pipe","map","res","UpdateData","getData","deleteSingleData","deleteMultipleData","UpdateStatusForSingleData","UpdateStatusForMultipleData","CustomRequest","Injectable","args","providedIn","HttpClient","CookieService","_authHttp","cookieService","progress","uploaderror","get","fileservername","getdata_endpointUrl","Object","defineProperty","BlogComponent","receivedData","blogListConfig","apiUrl","apiBaseUrl","listEndPoint","datasource","tableName","listArray_skip","listArray_modify_header","blogtitle","description","priority","status","parentcategoryname","blogcat","date","admintablenameTableName","statusarr","val","name","updateurl","updateEndpoint","editUrl","jwtToken","deleteEndPoint","view","search_settings","textsearch","label","field","selectsearch","values","loader","ngOnInit","Component","selector","template","Input","DemoMaterialModule","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","AddBlogComponent","generateForm","getParentData","configData","action","buttonText","successMessage","setDefaultValue","defaultData","header_txt","defaultValue","blogCatForm","patchValue","parent_id","formBuilder","group","Validators","required","maxLength","getConfig","openDialog","x","dialogRef","dialog","open","Modal2","width","data","msg","afterClosed","subscribe","result","_this","postData","source","token","blogService","endpoint2","response","getParentCatArr","onSubmit","controls","markAsTouched","invalid","value","parseInt","assign","condition","sourceobj","setTimeout","close","router","navigate","callBack","alert","error","inputBlur","markAsUntouched","FormBuilder","Router","MatDialog","editorConfig","placeholder","model","editorData","editorconfig","extraAllowedContent","onNoClick","MatDialogRef","Inject","MAT_DIALOG_DATA","appRoutes","path","component","AppRoutingModule","imports","RouterModule","forRoot","ApiService","setServerUrl","subjectForServerUrl","next","clearServerUrl","getServerUrl","asObservable","setaddEndpoint","subjectForaddEndpointUrl","clearaddEndpoint","getaddEndpoint","setuploadEndpont","subjectForuploadEndpointUrl","clearuploadEndpoint","getuploadEndpoint","setupdateEndpoint","subjectForupdateEndpointUrl","clearupdateEndpoint","getupdateEndpoint","setdeletesingleEndpoint","subjectFordeletesingleEndpointUrl","cleardeletesingleEndpoint","getdeletesingleEndpoint","setupdatestatus_singleEndpoint","subjectForupdatestatusSingleEndpointUrl","clearupdatestatus_singleEndpoint","getupdatestatus_singleEndpoint","setgetdataEndpoint","subjectForGetdataEndpointUrl","cleargetdataEndpoint","getdataEndpoint","console","log","addendpointUrl","uploadFile","uploadEndpointUrl","updateendpointUrl","deletesingle_endpointUrl","updatestatus_single_endpointUrl","Subject","subscriptionServer","message","subscriptionaddEndpoint","subscriptionuploadEndpoint","subscriptionupdateEndpoint","subscriptiondeletesingleEndpoint","subscriptionupdatestatusSingleEndpoint","subscriptionGetdataEndpoint","AddeditBlogmanagementComponent","serverUrlData","endpointUrlval","getDataEndpointData","addEndpointData","listval","listUrl","apiservice","action2","addYoutubeVideo","getBlogCategory","getTagsCount","headerText","flag","params_id","setData","_id","blogManagementForm","blogs_image","blogs_file","author","i","length","img_var","basepath","image","image_name","image_type","type","images_array_edit","push","images_array","i2","file_array_edit","file_array","file","vid","credentials","video_url","video_title","video_description","tags","forEach","element","tags_array","filteredOptions","myControl","valueChanges","startWith","_filter","filterValue","toLowerCase","options","filter","option","indexOf","imageConfigData","fileConfigData","Modal","height","trackByFn","index","vid_url","vid_tit","vid_desc","deleteCreds","removeAt","blogCategoryArray","editDatavals","loop","files","concat","upload","valid","messageText","id","metatitle","metadesc","openSnackBar2","isSubmitted","navigateByUrl","showval","event","keyCode","target","snackBar","duration","preview_video","video_index","clearTags","splice","openSnackBar","openFromComponent","YoutubeComponent","panelClass","clear_image","pop","clearFileTags","ActivatedRoute","MatSnackBar","http","activatedRoute","video_prefix","FormControl","testTag","array","videoid","YoutubeplayerComponent","sanitizer","bypassSecurityTrustResourceUrl","DomSanitizer","ListingBlogmanagementlibComponent","apiService","BlogModule","declarations","ListingModule","HttpClientModule","FormsModule","ReactiveFormsModule","BrowserModule","CKEditorModule","FileUploadModule","CommonModule","providers","entryComponents"],"mappings":"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","sourcesContent":["\n\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpClientModule } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { CookieService } from 'ngx-cookie-service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlogService {\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress: any = [];\n  public uploadtype;\n  public uploaderror: any = '';\n  public accesstoken: any = this.cookieService.get('jwtToken');;\n  public fileservername: any = [];\n  public serverUrl: any = '';\n  public addendpointUrl: any;\n  public updateendpointUrl: any;\n  public deletesingle_endpointUrl: any;\n  public updatestatus_single_endpointUrl: any;\n  public deletemultiple_endpointUrl: any;\n  public updatestatus_multiple_endpointUrl: any;\n  public getdata_endpointUrl: any = 'datalist';\n\n  constructor(private _http: HttpClient, private _authHttp: HttpClient,private cookieService : CookieService) { }\n\n  isTokenExpired() {\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n  }\n\n  addData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  getData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteSingleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteMultipleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForSingleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForMultipleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint + 'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  CustomRequest(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n}\n","\n/** This is the category listing **/\n\nimport { Component, OnInit, Input } from '@angular/core';\nimport { RouterModule, Routes, Router, ActivatedRoute } from '@angular/router';\nimport { ApiService } from './api.service';\n\n@Component({\n  selector: 'lib-Blog',\n  templateUrl: 'blog.component.html',\n  styleUrls: ['style.css']\n})\nexport class BlogComponent implements OnInit {\n \n  // ===========================================declaration================================\n  blogListConfig:any;\n  loader:boolean=false;\n  // ======================================================================================\n\n  // ================================================Input For Lib Listing================================\n  @Input()\n  set config(receivedData: any) {\n   \n    this.blogListConfig = {\n      apiUrl: receivedData.apiBaseUrl,\n      listEndPoint: receivedData.listEndPoint,\n      datasource: receivedData.datasource,\n      tableName: receivedData.tableName,\n      listArray_skip: [\"_id\", \"userId\", \"created_at\", \"updated_at\",\"image\",\"description_html\",\"parentcategoryname_search\",\"blogtitle_search\"],\n      listArray_modify_header: { \"blogtitle\":\"Blog Title\", \"description\": \"Description\", \"priority\": \"Priority\", \"status\": \"Status\" ,\"parentcategoryname\":\"Parent Category Name\",\"blogcat\":\"Blog Category\",\"date\":\"Date\"},\n      admintablenameTableName: \"admin\",\n      statusarr: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }],\n      updateurl: receivedData.updateEndpoint,\n      editUrl: receivedData.editUrl,\n      jwtToken: receivedData.jwtToken,\n      deleteEndPoint: receivedData.deleteEndPoint,\n      view: receivedData.view,\n      search_settings:{\n        textsearch: [{ label: \"Search by blog title...\", field: 'blogtitle_search' },{ label: \"Search by parent category...\", field: 'parentcategoryname_search' }],\n        selectsearch: [{ label: 'Search By status', field: 'status', values: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }] }]\n      }\n      //  /*Showing Image in the Modal*/\n      //  pendingmodelapplicationarray_detail_datatype: [{\n      //   key: \"image\",\n      //   value: 'image',\n      //   fileurl: 'https://s3.us-east-2.amazonaws.com/crmfiles.influxhostserver/testimonial/'             // Image path \n      // }],\n    }\n    this.loader = false;\n  }\n  // ====================================================================================================\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n//import { MatFileUploadModule } from 'angular-material-fileupload';\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n    //MatFileUploadModule\n  ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license */","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BlogService } from '../blog.service';\n\n// import * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { CookieService } from 'ngx-cookie-service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nexport interface DialogData {\n  msg: string;\n}\n\n@Component({\n  selector: 'lib-add-blog',\n  templateUrl: './add-blog.component.html',\n  styleUrls: ['./add-blog.component.css']\n})\nexport class AddBlogComponent implements OnInit {\n\n  /**ckeditor start here*/\n  // public Editor = ClassicEditor;  //for ckeditor\n  editorConfig = {\n    placeholder: 'Type the content here!',\n  };\n  public model = {\n    editorData: ''\n  };\n  /**ckeditor end here*/\n\n\n  // ====================declarations==================\n  blogCatForm: FormGroup;\n  header_txt: any = \"Add Blog Category\";\n  buttonText: any = \"SUBMIT\";\n  configData: any;\n  loader: boolean = false;\n  successMessage: any = \"Category Added Successfully!!!\"\n  getParentCatArr: any = [];\n  dialogRef: any;\n  public editorconfig: any = {};\n  // ==================================================\n\n\n\n  constructor(private formBuilder: FormBuilder, private blogService: BlogService, private router: Router,\n    private cookieService: CookieService, public dialog: MatDialog) {\n    this.editorconfig.extraAllowedContent = '*[class](*),span;ul;li;table;td;style;*[id];*(*);*{*}';\n  }\n\n  ngOnInit() {\n    //generating the form\n    this.generateForm();\n    //getting the parent category\n    this.getParentData();\n    // --------------------------------checking the cases------------------------ \n    switch (this.configData.action) {\n      case 'add':\n        /* Button text */\n        this.buttonText = \"SUBMIT\";\n        break;\n      case 'edit':\n        /* Button text */\n        this.buttonText = \"UPDATE\";\n        this.successMessage = \"One row updated!!!\";\n        this.setDefaultValue(this.configData.defaultData);\n        this.header_txt = \"EDIT\";\n        break;\n    }\n    // --------------------------------------------------------------------------\n\n  }\n\n\n  // ================================================Default value======================================\n  setDefaultValue(defaultValue) {\n    this.blogCatForm.patchValue({\n      blogtitle: defaultValue.blogtitle,\n      priority: defaultValue.priority,\n      status: defaultValue.status,\n      description: defaultValue.description,\n      parent_id: defaultValue.parent_id\n    });\n\n  }\n  // ==================================================================================================\n\n\n  //  ============================GENERATING THE FORM=======================\n  generateForm() {\n    this.blogCatForm = this.formBuilder.group({\n      blogtitle: ['', [Validators.required, Validators.maxLength(50)]],\n      priority: ['', [Validators.required, Validators.maxLength(2)]],\n      status: [true,],\n      description: ['', [Validators.required, Validators.maxLength(100)]],\n      parent_id: [0,]\n    });\n  }\n  // ========================================================================\n\n\n  //  Getting the input Configuration \n  @Input()\n  set config(getConfig: any) {\n    this.configData = getConfig;\n\n  }\n\n  // =========================================MODAL functions==========================================\n  openDialog(x: any): void {\n    this.dialogRef = this.dialog.open(Modal2, {\n      width: '250px',\n      data: { msg: x }\n    });\n\n    this.dialogRef.afterClosed().subscribe(result => {\n\n    });\n  }\n  // ===================================================================================================\n\n\n\n\n  //Getting the parent category\n  getParentData() {\n    let postData: any = {\n      source: this.configData.source,\n      token: this.cookieService.get('jwtToken')\n\n    };\n    this.blogService.getData(this.configData.endpoint2 + 'datalist', postData).subscribe((response: any) => {\n      this.getParentCatArr = response.res;\n    })\n  }\n\n\n\n\n\n  // =========================SUBMIT function==================\n  onSubmit() {\n    this.blogCatForm.controls['description'].markAsTouched();\n\n    this.loader = true;\n    /* stop here if form is invalid */\n    if (this.blogCatForm.invalid) {\n      return;\n    } else {\n      if (this.blogCatForm.value.status) {\n        this.blogCatForm.value.status = parseInt(\"1\");\n      } else {\n        this.blogCatForm.value.status = parseInt(\"0\");;\n      }\n\n      /* start process to submited data */\n      let postData: any = {\n        source: this.configData.source,\n        data: Object.assign(this.blogCatForm.value, this.configData.condition),\n        \"sourceobj\": [\"parent_id\"]\n      };\n\n      this.blogService.addData(this.configData.endpoint, postData).subscribe((response: any) => {\n        if (response.status == \"success\") {\n\n          this.openDialog(this.successMessage);\n          setTimeout(() => {\n            this.dialogRef.close();\n          }, 2000);\n\n          this.router.navigate([this.configData.callBack]);\n        } else {\n          alert(\"Some error occurred. Please try again.\");\n        }\n      }, (error) => {\n        alert(\"Some error occurred. Please try again.\");\n      });\n    }\n  }\n  // ==========================================================\n\n\n  //Blur function\n  inputBlur(val: any) {\n    this.blogCatForm.controls[val].markAsUntouched();\n  }\n}\n\n// ============================================MODAL COMPONENT===========================================\n@Component({\n  selector: 'app-modal',\n  templateUrl: 'modal.html',\n})\nexport class Modal2 {\n\n  constructor(\n    public dialogRef: MatDialogRef<Modal2>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n// ======================================================================================================\n\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MetaGuard } from '@ngx-meta/core';\nimport { AddBlogComponent } from './add-blog/add-blog.component'\nconst appRoutes: Routes = [\n  {path:'add', component : AddBlogComponent },\n  {path:'edit/:id', component : AddBlogComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { ElementRef, EventEmitter, Injectable, Input, ViewChild } from '@angular/core';\nimport { switchMap, map, takeWhile } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n// for setting observables to get serverurl and endpointurl from app\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport{CookieService} from 'ngx-cookie-service';\n\n\n@Injectable({   \n  providedIn: 'root'\n})\nexport class ApiService {\n\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress: any = [];\n  public uploadtype;\n  public uploaderror: any = '';\n  public accesstoken:any=this.cookieService.get('jwtToken');\n  fileservername: any = [];\n  serverUrl: any;\n  addendpointUrl: any;\n  uploadEndpointUrl:any; //souresh\n  updateendpointUrl: any;\n  deletesingle_endpointUrl: any;\n  updatestatus_single_endpointUrl: any;\n  deletemultiple_endpointUrl: any;\n  updatestatus_multiple_endpointUrl: any;\n  getdata_endpointUrl: any;\n  private subjectForServerUrl = new Subject<any>();\n  private subjectForaddEndpointUrl = new Subject<any>();\n  private subjectForuploadEndpointUrl = new Subject<any>();  //added by souresh\n  private subjectForupdateEndpointUrl = new Subject<any>();\n  private subjectFordeletesingleEndpointUrl = new Subject<any>();\n  private subjectForupdatestatusSingleEndpointUrl = new Subject<any>();\n  private subjectForGetdataEndpointUrl = new Subject<any>();\n  public subscriptionServer: Subscription;\n  public subscriptionaddEndpoint: Subscription;\n  public subscriptionuploadEndpoint: Subscription;   //added by souresh\n  public subscriptionupdateEndpoint: Subscription;\n  public subscriptiondeletesingleEndpoint: Subscription;\n  public subscriptionupdatestatusSingleEndpoint: Subscription;\n  public subscriptionGetdataEndpoint: Subscription;\n\n  constructor(private _http: HttpClient,\n    private _authHttp: HttpClient,private cookieService :CookieService) {\n    this.subscriptionServer = this.getServerUrl().subscribe(message => {\n     let result: any;\n      result = message;\n      if (result != null) {\n        this.serverUrl = result;\n      } else {\n        this.serverUrl = null;\n      }\n    });\n    this.subscriptionaddEndpoint = this.getaddEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.addendpointUrl = result;\n      } else {\n        this.addendpointUrl = null;\n      }\n    });\n    /*********added by souresh***********/\n    this.subscriptionuploadEndpoint=this.getuploadEndpoint().subscribe(message=>{\n      let result:any;\n      result=message;\n        if(result!=null){\n          this.uploadEndpointUrl = result;\n        } else{\n          this.uploadEndpointUrl = null;\n        }\n    })\n    /************souresh end here**************/\n    this.subscriptionupdateEndpoint = this.getupdateEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.updateendpointUrl = result;\n      } else {\n        this.updateendpointUrl = null;\n      }\n    });\n    this.subscriptiondeletesingleEndpoint = this.getdeletesingleEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.deletesingle_endpointUrl = result;\n      } else {\n        this.deletesingle_endpointUrl = null;\n      }\n    });\n    this.subscriptionupdatestatusSingleEndpoint = this.getupdatestatus_singleEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.updatestatus_single_endpointUrl = result;\n      } else {\n        this.updatestatus_single_endpointUrl = null;\n      }\n    });\n    this.subscriptionGetdataEndpoint = this.getdataEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.getdata_endpointUrl = result;\n      } else {\n        this.getdata_endpointUrl = null;\n      }\n    });\n\n    \n  }\n\n  setServerUrl(value: any) {\n    this.subjectForServerUrl.next(value);\n  }\n  public clearServerUrl() {\n    this.subjectForServerUrl.next(null);\n  }\n  public getServerUrl(): Observable<any> {\n    return this.subjectForServerUrl.asObservable();\n  }\n\n  setaddEndpoint(value: any) {\n    this.subjectForaddEndpointUrl.next(value);\n  }\n  public clearaddEndpoint() {\n    this.subjectForaddEndpointUrl.next(null);\n  }\n  public getaddEndpoint(): Observable<any> {\n    return this.subjectForaddEndpointUrl.asObservable();\n  }\n/*****added by souresh******/\n  setuploadEndpont(value:any){\n    this.subjectForuploadEndpointUrl.next(value);\n  }\n  public clearuploadEndpoint(){\n    this.subjectForuploadEndpointUrl.next(null);\n  }\n  public getuploadEndpoint(): Observable <any> {\n    return this.subjectForuploadEndpointUrl.asObservable();\n  }\n   /********souresh end here********/\n\n\n  setupdateEndpoint(value: any) {\n    this.subjectForupdateEndpointUrl.next(value);\n  }\n  public clearupdateEndpoint() {\n    this.subjectForupdateEndpointUrl.next(null);\n  }\n  public getupdateEndpoint(): Observable<any> {\n    return this.subjectForupdateEndpointUrl.asObservable();\n  }\n\n  setdeletesingleEndpoint(value: any) {\n    this.subjectFordeletesingleEndpointUrl.next(value);\n  }\n  public cleardeletesingleEndpoint() {\n    this.subjectFordeletesingleEndpointUrl.next(null);\n  }\n  public getdeletesingleEndpoint(): Observable<any> {\n    return this.subjectFordeletesingleEndpointUrl.asObservable();\n  }\n\n  setupdatestatus_singleEndpoint(value: any) {\n    this.subjectForupdatestatusSingleEndpointUrl.next(value);\n  }\n  public clearupdatestatus_singleEndpoint() {\n    this.subjectForupdatestatusSingleEndpointUrl.next(null);\n  }\n  public getupdatestatus_singleEndpoint(): Observable<any> {\n    return this.subjectForupdatestatusSingleEndpointUrl.asObservable();\n  }\n\n  setgetdataEndpoint(value: any) {\n    this.subjectForGetdataEndpointUrl.next(value);\n  }\n  public cleargetdataEndpoint() {\n    this.subjectForGetdataEndpointUrl.next(null);\n  }\n  public getdataEndpoint(): Observable<any> {\n    return this.subjectForGetdataEndpointUrl.asObservable();\n  }\n\n\n\n  isTokenExpired() {\n\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n  }\n\n  addData(requestdata: any) {\n    console.log('in adddata apiservice');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken          //hard code written Authorization(temp)\n      })\n    };\n\n    console.log('httpoptions',httpOptions,this.serverUrl,requestdata);\n    var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n  /*******added by souresh************/\n  uploadFile(requestdata:any){\n    const httpOptions={\n        headers: new HttpHeaders({\n          'Content-Type':'application/json',\n          'Authorization':this.accesstoken          //hard code written Authorization(temp)\n        })\n    };\n    var result=this._http.post(this.serverUrl + this.uploadEndpointUrl,JSON.stringify(requestdata),httpOptions).pipe(map(res=>res));\n    return result;\n  }\n  /*******souresh end here********/\n  UpdateData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken          //hard code written Authorization(temp)\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.updateendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  getData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.getdata_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteSingleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.deletesingle_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteMultipleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.deletesingle_endpointUrl+'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForSingleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.updatestatus_single_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForMultipleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.updatestatus_single_endpointUrl+'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n  CustomRequest(requestdata: any, endpoint:any ) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl +endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n\n\n\n}","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { FormBuilder, FormControl, FormGroup, Validators, FormArray } from '@angular/forms';\nimport { ApiService } from '../api.service';\nimport { Observable } from 'rxjs';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog, MatSnackBar } from \"@angular/material\";\nimport { map, startWith } from 'rxjs/operators';\n// import * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { BlogService } from '../blog.service';\n// import { DemoMaterialModule } from '../material-module';\n\n\n\nexport interface DialogData {\n  msg: any;\n  videourl: any;\n}\n\n\n\n@Component({\n  selector: 'lib-addedit-blogmanagement',\n  templateUrl: './addedit-blogmanagement.component.html',\n  styleUrls: ['./addedit-blogmanagement.component.css']\n})\n\nexport class AddeditBlogmanagementComponent implements OnInit {\n\n\n/**ckeditor start here*/\n// public Editor = ClassicEditor;  //for ckeditor\neditorConfig = {\n  placeholder: 'Write testimonial...',\n};\npublic model = {\n  editorData: ''\n};\n/**ckeditor end here*/\n\n  // ---------------------declarations-------------------------------------\n  public headerText: any = 'Add Blog Management Data';\n  public buttonText: any = 'SUBMIT';\n  public blogCategoryArray: any = [];\n  public configData: any;\n  blogManagementForm: FormGroup;\n  public serverUrlData: any;\n  public getDataEndpointData: any;\n  public addEndpointData: any;\n  isSubmitted = false;\n  video_prefix: any = 'https://www.youtube.com/watch?v=';\n  options: any = [''];\n  filteredOptions: Observable<string[]>;\n  myControl = new FormControl();\n  public tags_array: any = [];\n  public dialogRef: any;\n  public params_id: any;\n  public setData: any;\n  public messageText: any;\n  public listUrl: any;\n  public testTag: any = [];\n  public imageConfigData: any;\n  public ErrCode: any;\n  public img_var: any;\n  public image_name: any;\n  public image_type: any;\n  public flag: boolean = false;\n  public images_array: any = [];\n  public images_array_edit: any = [];\n  public fileConfigData: any;\n  public file_array: any = [];\n  public file_array_edit: any = [];\n  public action2: any;\n  public editorconfig: any = {};\n  // -----------------------------------------------------------------------\n\n\n\n\n\n  // ----------------------------------------------Input Section-----------------------\n\n  // Input receiving from add/edit app \n  @Input()\n  set config(getConfig: any) {\n    this.configData = getConfig;\n\n  }\n\n  @Input()          //setting the server url from project\n  set serverUrl(serverUrl: any) {\n    this.serverUrlData = (serverUrl) || '<no name set>';\n    this.serverUrlData = serverUrl;\n\n  }\n\n  @Input()          //setting the server url from project\n  set getDataEndpoint(endpointUrlval: any) {\n    this.getDataEndpointData = (endpointUrlval) || '<no name set>';\n    this.getDataEndpointData = endpointUrlval;\n\n\n  }\n  @Input()          //setting the server url from project\n  set addEndpoint(endpointUrlval: any) {\n    this.addEndpointData = (endpointUrlval) || '<no name set>';\n    this.addEndpointData = endpointUrlval;\n  }\n\n\n  @Input()         //setting the listing url form the application\n  set listRoute(listval: any) {\n    this.listUrl = (listval) || '<no name set>';\n    this.listUrl = listval;\n\n  }\n  // -----------------------------------------------------------------------------------------\n\n  constructor(private http: HttpClient, private apiservice: ApiService,\n    private activatedRoute: ActivatedRoute, private router: Router,\n    private formBuilder: FormBuilder, public dialog: MatDialog,\n    public snackBar: MatSnackBar, private blogService: BlogService) {\n    \n      this.editorconfig.extraAllowedContent = '*[class](*),span;ul;li;table;td;style;*[id];*(*);*{*}';\n\n    this.blogManagementForm = this.formBuilder.group({\n      blogtitle: ['', [Validators.required]],\n      blogcat: ['',],\n      description: ['', [Validators.required]],\n      priority: ['', [Validators.required]],\n      status: ['true',],\n      // metatitle: ['', [Validators.required]],\n      // metadesc: ['', [Validators.required]],\n      author: ['', [Validators.required]],\n      credentials: this.formBuilder.array([]),\n      tags: [''],\n      blogs_image: [''],\n      blogs_file: ['']\n    });\n    \n  }\n\n\n  ngOnInit() {\n    /**Observable start here**/\n    this.apiservice.clearServerUrl();\n    setTimeout(() => {\n      this.apiservice.setServerUrl(this.serverUrlData);\n    }, 50);\n    this.apiservice.cleargetdataEndpoint();\n    setTimeout(() => {\n      this.apiservice.setgetdataEndpoint(this.getDataEndpointData);\n    }, 50);\n    this.apiservice.clearaddEndpoint();\n    setTimeout(() => {\n      this.apiservice.setaddEndpoint(this.addEndpointData);\n    }, 50);\n    /**Observable end here**/\n\n    if (this.action2 != 'edit')\n      setTimeout(() => {\n        this.addYoutubeVideo('', '', '');\n      }, 500)\n\n    setTimeout(() => {\n      this.getBlogCategory();\n    }, 50)\n\n\n    setTimeout(() => {\n      this.getTagsCount();\n    }, 50)\n\n\n    if (this.action2 == 'edit') {\n      this.headerText = \"Edit Blog Management Data\";\n      this.flag = true;\n      this.params_id = this.setData._id;\n      this.buttonText = \"Update\";\n      this.blogManagementForm.controls['blogtitle'].patchValue(this.setData.blogtitle);\n      this.blogManagementForm.controls['blogcat'].patchValue(this.setData.blogcat);\n      this.blogManagementForm.controls['description'].patchValue(this.setData.description);\n      this.blogManagementForm.controls['priority'].patchValue(this.setData.priority);\n      this.blogManagementForm.controls['status'].patchValue(this.setData.status);\n      this.blogManagementForm.controls['blogs_image'].patchValue(this.setData.blogs_image);\n      this.blogManagementForm.controls['blogs_file'].patchValue(this.setData.blogs_file);\n      this.blogManagementForm.controls['author'].patchValue(this.setData.author);\n\n\n      /*Image works*/\n      for (let i = 0; i < this.setData.blogs_image.length; i++) {\n        this.img_var = this.setData.blogs_image[i].basepath + this.setData.blogs_image[i].image;\n        this.image_name = this.setData.blogs_image[i].name;\n        this.image_type = this.setData.blogs_image[i].type;\n        this.images_array_edit.push({ 'img_var': this.img_var, 'image_name': this.image_name, 'image_type': this.image_type });\n        this.images_array.push({\n          \"basepath\": this.setData.blogs_image[i].basepath,\n          \"image\": this.setData.blogs_image[i].image,\n          \"name\": this.setData.blogs_image[i].name,\n          \"type\": this.setData.blogs_image[i].type\n        });\n      }\n\n      /*File works*/\n      for (let i2 = 0; i2 < this.setData.blogs_file.length; i2++) {\n        this.file_array_edit.push(this.setData.blogs_file[i2].name);\n        this.file_array.push({\n          \"basepath\": this.setData.blogs_file[i2].basepath,\n          \"file\": this.setData.blogs_file[i2].file,\n          \"name\": this.setData.blogs_file[i2].name,\n          \"type\": this.setData.blogs_file[i2].type\n        });\n      }\n\n\n      for (const vid in this.setData.credentials) {\n        this.addYoutubeVideo(this.setData.credentials[vid].video_url,\n          this.setData.credentials[vid].video_title,\n          this.setData.credentials[vid].video_description);\n      }\n\n      if (this.setData.tags != \"\")\n        this.setData.tags.forEach(element => {\n          this.tags_array.push(element);\n        });\n\n\n    }\n\n\n\n\n\n    // ------------------------------Autocomplete Functions----------------------------------\n\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filter(value))\n    );\n    // ------------------------------------------------------------------------------------------\n  }\n\n\n  // ------------------------------------_Filter FUnction----------------------------------\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    return this.options.filter(option => option.toLowerCase().indexOf(filterValue) === 0);\n  }\n  // --------------------------------------------------------------------------------------------\n\n\n  @Input()\n  set action(action: any) {\n    this.action2 = action;\n  }\n\n\n  @Input()\n  set imageUpload(getConfig: any) {\n    this.imageConfigData = getConfig;\n  }\n\n  @Input()\n  set fileUpload(getConfig: any) {\n    this.fileConfigData = getConfig;\n  }\n\n\n\n\n  // ------------------------------------MODAL Function--------------------------------------------\n  openDialog(x: any): void {\n    this.dialogRef = this.dialog.open(Modal, {\n      width: '45%',\n      height: '500px',\n      data: { msg: x }\n\n    });\n\n    // this.sanitizer.bypassSecurityTrustResourceUrl\n    this.dialogRef.afterClosed().subscribe(result => {\n\n    });\n  }\n  // ----------------------------------------------------------------------------------------------\n\n\n\n\n\n\n\n\n\n\n\n  // ----------------------------Ediatble material Form Array-------------------\n  trackByFn(index) {\n    return index;\n  }\n  // -----------------------------------------------------------------------------\n\n\n\n\n\n\n\n  // ----------------------------------Add Credential Fucntions-----------------\n  addYoutubeVideo(vid_url: any, vid_tit: any, vid_desc: any) {\n    const creds = this.blogManagementForm.controls.credentials as FormArray;\n    creds.push(this.formBuilder.group({\n      video_url: [vid_url],\n      video_title: [vid_tit],\n      video_description: [vid_desc]\n    }));\n  }\n  // ---------------------------------------------------------------------------\n\n\n\n\n\n\n  // ---------------------------------Delete Credetial Fucntions----------------\n  deleteCreds() {\n    const creds = this.blogManagementForm.controls.credentials as FormArray;\n    creds.removeAt(1);\n  }\n  // ----------------------------------------------------------------------------\n\n\n\n\n\n\n  // ----------------------------------Get Blog Category Function-------------------\n\n  getBlogCategory() {\n    var data: any;\n    data = {\n      'source': 'blog_category'\n    };\n    this.apiservice.getData(data).subscribe(response => {\n      let result: any;\n      result = response;\n      this.blogCategoryArray = result.res;\n    });\n  }\n  // ----------------------------------------------------------------------------------\n\n\n\n\n\n  // ----------------------------------TAGS view Function-------------------\n\n  getTagsCount() {\n    var data: any;\n    data = {\n      'source': 'tags_view'\n    };\n    this.apiservice.getData(data).subscribe(response => {\n      let result: any;\n      result = response;\n      if (result != null && result.res != null && result.res[0] != null)\n        this.options = result.res[0].tags;\n    });\n  }\n  // ----------------------------------------------------------------------------------\n\n\n\n\n\n  //  -----------------------------EDIT RESOLVE FUNCTION------------------------------\n  @Input()          //single data from resolve call  & set the value for edit\n  set singleData(editDatavals: any) {\n    this.setData = editDatavals;\n  }\n  // -----------------------------------------------------------------------------------\n\n\n  // ---------------------------------SUBMIT----------------------------------------\n  onSubmit() {\n\n    /*__________________________IMAGE UPLOADER________________________________________*/\n    if (this.imageConfigData) {\n      for (const loop in this.imageConfigData.files) {\n        this.images_array =\n          this.images_array.concat({\n            \"basepath\": this.imageConfigData.files[loop].upload.data.basepath + '/' + this.imageConfigData.path + '/',\n            \"image\": this.imageConfigData.files[loop].upload.data.data.fileservername,\n            \"name\": this.imageConfigData.files[loop].name,\n            \"type\": this.imageConfigData.files[loop].type\n          });\n      }\n      this.blogManagementForm.value.blogs_image = this.images_array;\n    } else {\n      this.blogManagementForm.value.blogs_image = false;\n    }\n    /*_____________________________________________________________________________________*/\n\n\n    /*_________________________________________FILE UPLOADER_______________________________*/\n\n    if (this.fileConfigData) {\n      for (const loop in this.fileConfigData.files) {\n        this.file_array =\n          this.file_array.concat({\n            \"basepath\": this.fileConfigData.files[loop].upload.data.basepath + '/' + this.fileConfigData.path + '/',\n            \"file\": this.fileConfigData.files[loop].upload.data.data.fileservername,\n            \"name\": this.fileConfigData.files[loop].name,\n            \"type\": this.fileConfigData.files[loop].type\n          });\n      }\n      this.blogManagementForm.value.blogs_file = this.file_array;\n    } else {\n      this.blogManagementForm.value.blogs_file = false;\n    }\n    // ___________________________________________________________________________________\n\n    this.blogManagementForm.value.tags = this.tags_array;\n\n    this.blogManagementForm.controls['description'].markAsTouched();\n\n    if (this.blogManagementForm.valid) {\n      if (this.blogManagementForm.value.status)\n        this.blogManagementForm.value.status = parseInt(\"1\");\n      else\n        this.blogManagementForm.value.status = parseInt(\"0\");\n      if (this.params_id != null) {    //update part\n        this.messageText = \"One row updated!!!\";\n        this.blogManagementForm.value.tags = this.tags_array;\n        data = {\n          \"source\": \"blogs\",\n          \"data\": {\n            \"id\": this.params_id,\n            \"blogtitle\": this.blogManagementForm.value.blogtitle,\n            \"blogcat\": this.blogManagementForm.value.blogcat,\n            \"description\": this.blogManagementForm.value.description,\n            \"priority\": this.blogManagementForm.value.priority,\n            \"status\": this.blogManagementForm.value.status,\n            \"metatitle\": this.blogManagementForm.value.metatitle,\n            \"metadesc\": this.blogManagementForm.value.metadesc,\n            \"tags\": this.blogManagementForm.value.tags,\n            \"credentials\": this.blogManagementForm.value.credentials,\n            \"blogs_image\": this.blogManagementForm.value.blogs_image,\n            \"blogs_file\": this.blogManagementForm.value.blogs_file,\n            \"author\": this.blogManagementForm.value.author\n\n          },\n          \"sourceobj\": [\"blogcat\"]\n        };\n        this.openSnackBar2(\"Blog Details Updated Successfully!!!\", \"OK\");\n      } else {\n        this.isSubmitted = true;\n        var data: any;\n        data = {                                         //add part\n          \"source\": \"blogs\",\n          \"data\": this.blogManagementForm.value,\n          \"sourceobj\": [\"blogcat\"]\n        };\n        this.openSnackBar2(\"Blog Details Added Successfully!!!\", \"OK\");\n      }\n\n      this.blogService.addData(this.serverUrlData + this.addEndpointData, data).subscribe(response => {\n        let result: any;\n        result = response;\n\n\n\n        setTimeout(() => {\n          this.router.navigateByUrl('/' + this.listUrl);\n        }, 1000);\n\n      });\n\n\n    }\n    else\n      console.log(\"Form is invalid\");\n\n  }\n\n\n  // -----------------------------------------------------------------------------------\n\n\n\n\n  get onSignUpValidate() {\n    return this.blogManagementForm.controls;\n  }\n\n\n  inputBlur(val: any) {\n    this.blogManagementForm.controls[val].markAsUntouched();\n  }\n\n\n\n\n\n\n\n\n  // -------------------------------Select Tags AutoComplete Field-----------------------\n  showval(event: any) {\n\n    if (event.keyCode == 13) {\n      this.tags_array.push(event.target.value);\n      this.blogManagementForm.controls['tags'].patchValue(\"\");\n      return;\n    }\n\n  }\n  // ------------------------------------------------------------------------------------\n\n  openSnackBar2(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 2000,\n    });\n  }\n\n\n  // ---------------------------------------VIDEO URL PREVIEW-----------------------------\n  preview_video(video_index) {\n    this.openDialog(this.blogManagementForm.value.credentials[video_index].video_url);\n  }\n  // -------------------------------------------------------------------------------------\n\n\n  // --------------------------------------------CLEAR TAGS---------------------------------\n  clearTags(index) {\n    this.tags_array.splice(index, 1);\n  }\n  // -------------------------------------------------------------------------------------\n\n  openSnackBar() {\n    this.snackBar.openFromComponent(YoutubeComponent, {\n      // duration: 1500,\n      panelClass: ['snackbar-color']\n    });\n  }\n  // --------------------------------------Blogs Image clear-------------------------------\n  clear_image(index) {\n    this.images_array.pop(this.setData.blogs_image[index]);\n    this.images_array_edit.splice(index, 1);\n  }\n  // ------------------------------------------------------------------------------------\n\n  // --------------------------------------Blogs File clear-------------------------------\n  clearFileTags(index) {\n    this.file_array.pop(this.setData.blogs_file[index]);\n    this.file_array_edit.splice(index, 1);\n  }\n  // ------------------------------------------------------------------------------------\n}\n\n\n\n\n\n\n\n\n// ------------------------------------Modal Component Works------------------------------\n@Component({\n  selector: 'app-modal',\n  templateUrl: 'modal.html',\n})\nexport class Modal {\n  videoid: any = '';\n\n  constructor(\n    public dialogRef: MatDialogRef<Modal>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n\n\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n// ---------------------------------------------------------------------------------------\n@Component({\n  templateUrl: 'youtubetip.html',\n  styleUrls: ['./addedit-blogmanagement.component.css']\n})\nexport class YoutubeComponent {\n\n}\n\n","import { Component, OnInit , Input} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'lib-youtubeplayer',\n  templateUrl: './youtubeplayer.component.html',\n  styleUrls: ['./youtubeplayer.component.css']\n})\nexport class YoutubeplayerComponent implements OnInit {\n  id:any;\n\n  @Input()          //setting the server url from project\n  set videoid(id: any) {\n    this.id = (id) || '<no name set>';\n    this.id = this.sanitizer.bypassSecurityTrustResourceUrl('https://www.youtube.com/embed/'+id);\n  }\n  constructor(public sanitizer:DomSanitizer) { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ApiService } from '../api.service';\n\n/** This is the actuali main blog page **/\n\n@Component({\n  selector: 'lib-listing-blogmanagementlib',\n  templateUrl: './listing-blogmanagementlib.component.html',\n  styleUrls: ['./listing-blogmanagementlib.component.css']\n})\nexport class ListingBlogmanagementlibComponent implements OnInit {\n\n\n\n  // ===========================================declaration================================\n  blogListConfig: any;\n  loader: boolean = false;\n  // ======================================================================================\n\n  // ================================================Input For Lib Listing================================\n  @Input()\n  set config(receivedData: any) {\n\n    this.blogListConfig = {\n      apiUrl: receivedData.apiBaseUrl,\n      listEndPoint: receivedData.listEndPoint,\n      datasource: receivedData.datasource,\n      tableName: receivedData.tableName,\n      listArray_skip: [\"_id\", \"userId\", \"created_at\", \"updated_at\", \"image\", \"metatitle\", \"metadesc\", \"description_html\", \"credentials\", \"blogs_file\", \"blogs_image\",\"blogtitle_search\",\"author_search\"],\n      listArray_modify_header: {\n        \"blogtitle\": \"Blog Title\", \"description\": \"Description\",\n        \"priority\": \"Priority\", \"status\": \"Status\", \"parentcategoryname\": \"Parent Category Name\",\n        \"author\": \"Author\",\"blogcat\":\"Blog Category\",\"date\":\"Date\"\n      },\n      admintablenameTableName: \"admin\",\n      statusarr: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }],\n      updateurl: receivedData.updateEndpoint,\n      editUrl: receivedData.editUrl,\n      jwtToken: receivedData.jwtToken,\n      deleteEndPoint: receivedData.deleteEndPoint,\n      view: receivedData.view,\n      search_settings: {\n        textsearch: [{ label: \"blog title...\", field: 'blogtitle_search' },{ label: \"author...\", field: 'author_search' }],\n        selectsearch: [{ label: 'status...', field: 'status', values: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }] }],\n      },\n      //  /*Showing Image in the Modal*/\n      //  pendingmodelapplicationarray_detail_datatype: [{\n      //   key: \"image\",\n      //   value: 'image',\n      //   fileurl: 'https://s3.us-east-2.amazonaws.com/crmfiles.influxhostserver/testimonial/'             // Image path \n      // }],\n    }\n    this.loader = false;\n  }\n  // ====================================================================================================\n\n\n\n  constructor(private apiService: ApiService) {\n\n  }\n\n  ngOnInit() {\n\n  }\n}","import { NgModule } from '@angular/core';\nimport { BlogComponent } from './blog.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { DemoMaterialModule } from './material-module'\nimport { FileUploadModule } from 'file-upload-lib-influxiq';\nimport { RouterModule } from '@angular/router';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AddBlogComponent,Modal2 } from './add-blog/add-blog.component';\nimport { ListingModule } from 'listing-angular7';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ApiService } from './api.service';\nimport { CommonModule } from '@angular/common';\nimport { AddeditBlogmanagementComponent,Modal, YoutubeComponent } from './addedit-blogmanagement/addedit-blogmanagement.component';\nimport { YoutubeplayerComponent } from './youtubeplayer/youtubeplayer.component';\nimport { ListingBlogmanagementlibComponent } from './listing-blogmanagementlib/listing-blogmanagementlib.component';\nimport { CKEditorModule } from 'ngx-ckeditor';\n\n@NgModule({\n  declarations: [\n    BlogComponent,\n    AddBlogComponent,\n    AddeditBlogmanagementComponent,\n    Modal,\n    YoutubeplayerComponent,\n    YoutubeComponent,\n    ListingBlogmanagementlibComponent,Modal2\n  ],\n  imports: [\n    DemoMaterialModule,\n    RouterModule,\n    AppRoutingModule,\n    ListingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserModule,\n    CKEditorModule,\n    FileUploadModule,\n    CommonModule,\n  \n  ],\n  exports: [BlogComponent, AddBlogComponent, AddeditBlogmanagementComponent,ListingBlogmanagementlibComponent],\n  providers: [ApiService],\n  entryComponents: [Modal2,Modal, YoutubeComponent],\n\n})\nexport class BlogModule { }\n"]}