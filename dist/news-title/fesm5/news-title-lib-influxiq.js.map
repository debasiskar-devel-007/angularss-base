{"version":3,"file":"news-title-lib-influxiq.js.map","sources":["ng://news-title-lib-influxiq/lib/news-title.service.ts","ng://news-title-lib-influxiq/lib/api.service.ts","ng://news-title-lib-influxiq/lib/news-title.component.ts","ng://news-title-lib-influxiq/lib/material-module.ts","ng://news-title-lib-influxiq/lib/Components/listing-newsletter/listing-newsletter.component.ts","ng://news-title-lib-influxiq/lib/Components/subscriptioncategory/add-edit-subcategory/add-edit-subcategory.component.ts","ng://news-title-lib-influxiq/lib/Components/subscriptioncategory/listing-subcategory/listing-subcategory.component.ts","ng://news-title-lib-influxiq/lib/Components/add-edit-subscriptiongroup/add-edit-subscriptiongroup.component.ts","ng://news-title-lib-influxiq/lib/Components/newsletter/add-edit-newsletterlib/add-edit-newsletterlib.component.ts","ng://news-title-lib-influxiq/lib/Components/newsletter/listing-newsletterlib/listing-newsletterlib.component.ts","ng://news-title-lib-influxiq/lib/Components/senderslist/add-edit-sender/add-edit-sender.component.ts","ng://news-title-lib-influxiq/lib/Components/senderslist/listing-sender/listing-sender.component.ts","ng://news-title-lib-influxiq/lib/Components/testemails/add-edit-testemaillib/add-edit-testemaillib.component.ts","ng://news-title-lib-influxiq/lib/Components/testemails/listing-testemaillib/listing-testemaillib.component.ts","ng://news-title-lib-influxiq/lib/news-title.module.ts"],"sourcesContent":["\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpClientModule } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { CookieService } from 'ngx-cookie-service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NewsTitleService {\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress: any = [];\n  public uploadtype;\n  public uploaderror: any = '';\n  public accesstoken: any = this.cookieService.get('jwtToken');;\n  public fileservername: any = [];\n  public serverUrl: any = '';\n  public addendpointUrl: any;\n  public updateendpointUrl: any;\n  public deletesingle_endpointUrl: any;\n  public updatestatus_single_endpointUrl: any;\n  public deletemultiple_endpointUrl: any;\n  public updatestatus_multiple_endpointUrl: any;\n  public getdata_endpointUrl: any = 'datalist';\n\n  constructor(private _http: HttpClient, private _authHttp: HttpClient,private cookieService : CookieService) { }\n\n  isTokenExpired() {\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n  }\n\n  addData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  getData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteSingleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteMultipleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForSingleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForMultipleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint + 'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  CustomRequest(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n}\n","import { ElementRef, EventEmitter, Injectable, Input, ViewChild } from '@angular/core';\nimport { switchMap, map, takeWhile } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n// for setting observables to get serverurl and endpointurl from app\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport{CookieService} from 'ngx-cookie-service';\n\n\n@Injectable({   \n  providedIn: 'root'\n})\nexport class ApiService {\n\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress: any = [];\n  public uploadtype;\n  public uploaderror: any = '';\n  public accesstoken:any=this.cookieService.get('jwtToken');\n  // public accesstoken:any='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIiLCJleHAiOjE1NjgzNTgyMTAsImlhdCI6MTU2ODI3MTgxMH0.2ltvxVKwfX1uwMOwQ2Zzgp1K2jiaCDj051Wyho0Iw-Q';\n  fileservername: any = [];\n  serverUrl: any;\n  addendpointUrl: any;\n  uploadEndpointUrl:any; //souresh\n  updateendpointUrl: any;\n  deletesingle_endpointUrl: any;\n  updatestatus_single_endpointUrl: any;\n  deletemultiple_endpointUrl: any;\n  updatestatus_multiple_endpointUrl: any;\n  getdata_endpointUrl: any;\n  private subjectForServerUrl = new Subject<any>();\n  private subjectForaddEndpointUrl = new Subject<any>();\n  private subjectForuploadEndpointUrl = new Subject<any>();  //added by souresh\n  private subjectForupdateEndpointUrl = new Subject<any>();\n  private subjectFordeletesingleEndpointUrl = new Subject<any>();\n  private subjectForupdatestatusSingleEndpointUrl = new Subject<any>();\n  private subjectForGetdataEndpointUrl = new Subject<any>();\n  public subscriptionServer: Subscription;\n  public subscriptionaddEndpoint: Subscription;\n  public subscriptionuploadEndpoint: Subscription;   //added by souresh\n  public subscriptionupdateEndpoint: Subscription;\n  public subscriptiondeletesingleEndpoint: Subscription;\n  public subscriptionupdatestatusSingleEndpoint: Subscription;\n  public subscriptionGetdataEndpoint: Subscription;\n\n  constructor(private _http: HttpClient,\n    private _authHttp: HttpClient,private cookieService :CookieService) {\n    this.subscriptionServer = this.getServerUrl().subscribe(message => {\n     let result: any;\n      result = message;\n      if (result != null) {\n        this.serverUrl = result;\n      } else {\n        this.serverUrl = null;\n      }\n    });\n    this.subscriptionaddEndpoint = this.getaddEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.addendpointUrl = result;\n      } else {\n        this.addendpointUrl = null;\n      }\n    });\n    /*********added by souresh***********/\n    this.subscriptionuploadEndpoint=this.getuploadEndpoint().subscribe(message=>{\n      let result:any;\n      result=message;\n        if(result!=null){\n          this.uploadEndpointUrl = result;\n        } else{\n          this.uploadEndpointUrl = null;\n        }\n    })\n    /************souresh end here**************/\n    this.subscriptionupdateEndpoint = this.getupdateEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.updateendpointUrl = result;\n      } else {\n        this.updateendpointUrl = null;\n      }\n    });\n    this.subscriptiondeletesingleEndpoint = this.getdeletesingleEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.deletesingle_endpointUrl = result;\n      } else {\n        this.deletesingle_endpointUrl = null;\n      }\n    });\n    this.subscriptionupdatestatusSingleEndpoint = this.getupdatestatus_singleEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.updatestatus_single_endpointUrl = result;\n      } else {\n        this.updatestatus_single_endpointUrl = null;\n      }\n    });\n    this.subscriptionGetdataEndpoint = this.getdataEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.getdata_endpointUrl = result;\n      } else {\n        this.getdata_endpointUrl = null;\n      }\n    });\n\n    \n  }\n\n  setServerUrl(value: any) {\n    this.subjectForServerUrl.next(value);\n  }\n  public clearServerUrl() {\n    this.subjectForServerUrl.next(null);\n  }\n  public getServerUrl(): Observable<any> {\n    return this.subjectForServerUrl.asObservable();\n  }\n\n  setaddEndpoint(value: any) {\n    this.subjectForaddEndpointUrl.next(value);\n  }\n  public clearaddEndpoint() {\n    this.subjectForaddEndpointUrl.next(null);\n  }\n  public getaddEndpoint(): Observable<any> {\n    return this.subjectForaddEndpointUrl.asObservable();\n  }\n/*****added by souresh******/\n  setuploadEndpont(value:any){\n    this.subjectForuploadEndpointUrl.next(value);\n  }\n  public clearuploadEndpoint(){\n    this.subjectForuploadEndpointUrl.next(null);\n  }\n  public getuploadEndpoint(): Observable <any> {\n    return this.subjectForuploadEndpointUrl.asObservable();\n  }\n   /********souresh end here********/\n\n\n  setupdateEndpoint(value: any) {\n    this.subjectForupdateEndpointUrl.next(value);\n  }\n  public clearupdateEndpoint() {\n    this.subjectForupdateEndpointUrl.next(null);\n  }\n  public getupdateEndpoint(): Observable<any> {\n    return this.subjectForupdateEndpointUrl.asObservable();\n  }\n\n  setdeletesingleEndpoint(value: any) {\n    this.subjectFordeletesingleEndpointUrl.next(value);\n  }\n  public cleardeletesingleEndpoint() {\n    this.subjectFordeletesingleEndpointUrl.next(null);\n  }\n  public getdeletesingleEndpoint(): Observable<any> {\n    return this.subjectFordeletesingleEndpointUrl.asObservable();\n  }\n\n  setupdatestatus_singleEndpoint(value: any) {\n    this.subjectForupdatestatusSingleEndpointUrl.next(value);\n  }\n  public clearupdatestatus_singleEndpoint() {\n    this.subjectForupdatestatusSingleEndpointUrl.next(null);\n  }\n  public getupdatestatus_singleEndpoint(): Observable<any> {\n    return this.subjectForupdatestatusSingleEndpointUrl.asObservable();\n  }\n\n  setgetdataEndpoint(value: any) {\n    this.subjectForGetdataEndpointUrl.next(value);\n  }\n  public cleargetdataEndpoint() {\n    this.subjectForGetdataEndpointUrl.next(null);\n  }\n  public getdataEndpoint(): Observable<any> {\n    return this.subjectForGetdataEndpointUrl.asObservable();\n  }\n\n\n\n  isTokenExpired() {\n\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n  }\n\n  addData(requestdata: any) {\n    console.log('in adddata apiservice');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken          //hard code written Authorization(temp)\n      })\n    };\n\n    console.log('httpoptions',httpOptions,this.serverUrl,requestdata);\n    var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n  /*******added by souresh************/\n  uploadFile(requestdata:any){\n    const httpOptions={\n        headers: new HttpHeaders({\n          'Content-Type':'application/json',\n          'Authorization':this.accesstoken          //hard code written Authorization(temp)\n        })\n    };\n    var result=this._http.post(this.serverUrl + this.uploadEndpointUrl,JSON.stringify(requestdata),httpOptions).pipe(map(res=>res));\n    return result;\n  }\n  /*******souresh end here********/\n  UpdateData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken          //hard code written Authorization(temp)\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.updateendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  getData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.getdata_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n/*************** Added by himadri start here ***************/ \n  addLogin(requestdata: any) {\n    console.log('in addLogin apiservice');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n        // 'Authorization': this.accesstoken          //hard code written Authorization(temp)\n      })\n    };\n\n    console.log(this.serverUrl,requestdata);\n    var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n  /*************** Added by himadri end here ***************/ \n\n/*************** Added by himadri start here ***************/ \nforgetPassword(requestdata: any) {\n  console.log('in forgetPassword apiservice');\n  const httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n      // 'Authorization': this.accesstoken          //hard code written Authorization(temp)\n    })\n  };\n\n  console.log(this.serverUrl,requestdata);\n  var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n  return result;\n}\n/*************** Added by himadri end here ***************/ \n\n\n  deleteSingleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.deletesingle_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteMultipleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.deletesingle_endpointUrl+'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForSingleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.updatestatus_single_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForMultipleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.updatestatus_single_endpointUrl+'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n  CustomRequest(requestdata: any, endpoint:any ) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl +endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import { Component, OnInit, Inject, Input, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormGroupDirective } from '@angular/forms';\nimport { ApiService } from './api.service';\nimport { MatSnackBar, MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material';\n\nexport interface DialogData {\n  formTitleValue: any;\n  serverUrlValue: any;\n  addEndpointValue: any;\n  logoValue:any;\n}\n\n\n\n@Component({\n  selector: 'lib-newsTitle',\n  // templateUrl:'./news-title.component.html',\n  template: ``,\n  styleUrls: ['./news-title.component.css']\n})\nexport class NewsTitleComponent implements OnInit {\n  public formTitleValue: any = '';\n  public serverUrlValue: any = '';\n  public addEndpointValue: any = '';\n  public logoValue: any='';\n\n  @Input()\n  set formTitle(formTitleVal: any) {\n    this.formTitleValue = formTitleVal;\n  }\n\n  @Input()\n  public set logo(v : string) {\n    this.logoValue = v;\n  }\n  \n\n  @Input()        // setting the server url from project\n  set serverUrl(serverUrlVal: any) {\n    this.serverUrlValue = (serverUrlVal) || '<no name set>';\n    this.serverUrlValue = serverUrlVal;\n    // console.log(\"======================\",this.serverUrlValue);\n\n  }\n  @Input()        // set the endpoint And source\n  public set addEndpoint(addEndpointVal: any) {\n    this.addEndpointValue = addEndpointVal;\n    // console.log(this.addEndpointValue)\n  }\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\n\n\n  public durationInSeconds: any = 10;\n\n  public newsLatterForm: FormGroup;\n  constructor(public fb: FormBuilder, public apiService: ApiService, private _snackBar: MatSnackBar, public dialog: MatDialog) {\n    // this.newsLatterForm = this.fb.group({\n    //   fullname: ['', Validators.required],\n    //   phone: ['', Validators.required],\n    //   company: ['', Validators.required],\n    //   email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])]\n    // });\n\n\n    // setInterval(()=> {\n    //   this.openSnackBar(); },4000); \n    \n  }\n\n  // openSnackBar() {\n  //   this._snackBar.openFromComponent(NewsTitleComponent, {\n  //     duration: this.durationInSeconds * 1000,\n  //   });\n  // }\n\n\n  ngOnInit() {\n    \n    setTimeout(() => {\n      this.openDialog();      \n    }, 500);\n   \n    \n  }\n\n  // newsLatterFormSubmit() {\n  //   for (const key in this.newsLatterForm.controls) {\n  //     this.newsLatterForm.controls[key].markAsTouched();\n  //   }\n  //   if (this.newsLatterForm.valid) {\n  //     console.log(this.newsLatterForm.value);\n  //     let data: any = {\n  //       'data': this.newsLatterForm.value,\n  //       \"source\": this.addEndpointValue.source\n  //     };\n  //     this.apiService.addData(data).subscribe((responce) => {\n  //       console.log(responce);\n  //       let result: any = {};\n  //       result = responce;\n  //       if (result.status == \"success\") {\n  //         this.formDirective.resetForm();\n  //       }\n  //     })\n  //   }\n\n  // }\n\n  // inputUntouched(val: any) {\n  //   console.log('ok----');\n  //   this.newsLatterForm.controls[val].markAsUntouched();\n  // }\n\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(modalData, {\n      // width: '250px',\n      data: {\n\n        addEndpointValue: this.addEndpointValue,\n        serverUrlValue: this.serverUrlValue,\n        formTitleValue:this.formTitleValue,\n        logoValue:this.logoValue\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      // console.log('The dialog was closed');\n      // console.log(result);\n    });\n  }\n\n\n\n\n}\n\n\n@Component({\n  selector: 'modalData',\n  templateUrl:'./news-title.component.html',\n  // templateUrl: './modale.html',\n  styleUrls: ['./news-title.component.css']\n})\nexport class modalData implements OnInit {\n\n  public newsLatterForm: FormGroup;\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\n\n  constructor(\n    public dialogRef: MatDialogRef<modalData>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    public apiService: ApiService, public fb: FormBuilder) {\n\n      // console.log(data);\n    this.newsLatterForm = this.fb.group({\n      fullname: ['', Validators.required],\n      group: [0,],\n      phone: ['', Validators.required],\n      company: ['', Validators.required],\n      email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])]\n    });\n  }\n\n  ngOnInit() {\n    this.apiService.clearServerUrl();       //  Clear the server url\n    setTimeout(() => {\n      this.apiService.setServerUrl(this.data.serverUrlValue);        //  set the server url\n    }, 50);\n    // console.log(\"+++++++++++++++\",this.data.serverUrlValue);\n\n\n    this.apiService.clearaddEndpoint();       //  Clear the endpoint\n    setTimeout(() => {\n      this.apiService.setaddEndpoint(this.data.addEndpointValue.endpoint);   //  set the endpoint\n    }, 50);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  newsLatterFormSubmit() {\n    console.log(this.newsLatterForm.value);\n    for (const key in this.newsLatterForm.controls) {\n      this.newsLatterForm.controls[key].markAsTouched();\n    }\n    if (this.newsLatterForm.valid) {\n      console.log(this.newsLatterForm.value);\n      let data: any = {\n        'data': this.newsLatterForm.value,\n        \"source\": this.data.addEndpointValue.source\n      };\n      this.apiService.addData(data).subscribe((responce) => {\n        console.log(responce);\n        let result: any = {};\n        result = responce;\n        if (result.status == \"success\") {\n          this.formDirective.resetForm();\n        }\n      })\n    }\n  }\n\n\n\n  inputUntouched(val: any) {\n    // console.log('ok---?-');\n    this.newsLatterForm.controls[val].markAsUntouched();\n  }\n\n}\n\n","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n Use of this source code is governed by an MIT-style license that\n can be found in the LICENSE file at http://angular.io/license */\n","import { Component, OnInit, Input } from '@angular/core';\n\n\n@Component({\n  selector: 'lib-listing-newsletter',\n  templateUrl: './listing-newsletter.component.html',\n  styleUrls: ['./listing-newsletter.component.css']\n})\nexport class ListingNewsletterComponent implements OnInit {\n\n  // ========================================declarations=====================================\n  public newsLetterListConfig: any;\n  public loader: boolean = true;\n  // =========================================================================================\n\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n\n  // ================================================Input For Lib Listing================================\n  @Input()\n  set config(receivedData: any) {\n    this.newsLetterListConfig = {\n      apiUrl: receivedData.apiBaseUrl,\n      listEndPoint: receivedData.listEndPoint,\n      datasource: receivedData.datasource,\n      tableName: receivedData.tableName,\n      listArray_skip: [\"_id\", \"userId\", \"created_at\", \"id\", \"updated_at\", \"image\",\"fullname_search\",\n      \"group_name_search\"],\n      listArray_modify_header: { \"fullname\": \"Full Name\", \"phone\": \"Phone\", \"company\": \"Company\", \"email\": \"Email\",\"group_name\":\"Group Name\",\"status\":\"Status\",\"date_added\":\"Date\" ,\"date added\":\"Date\",\n      \"group name\":\"Group Name\"},\n      admintablenameTableName: \"admin\",\n      status: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }],\n      updateurl: receivedData.updateEndpoint,\n      editUrl: receivedData.editUrl,\n      jwtToken: receivedData.jwtToken,\n      deleteEndPoint: receivedData.deleteEndPoint,\n      view: receivedData.view,\n      search_settings: {\n        selectsearch: [{ label: 'Search By Status', field: 'status', values: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }] }],\n        textsearch: [{ label: \"Search Name\", field: 'fullname_search' },{ label: \"Search By Email\", field: 'email' },{ label: \"Search By Group Name\", field: 'group_name_search' }],\n       \n      },\n      detail_header:['_id','fullname_search']\n    }\n    this.loader = false;\n  }\n  // ====================================================================================================\n\n}\n","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NewsTitleService } from '../../../news-title.service';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nexport interface DialogData {\n  msg: string;\n}\n\n\n@Component({\n  selector: 'lib-add-edit-subcategory',\n  templateUrl: './add-edit-subcategory.component.html',\n  styleUrls: ['./add-edit-subcategory.component.css']\n})\nexport class AddEditSubcategoryComponent implements OnInit {\n\n  // ====================declarations==================\n  buttonText: any = \"SUBMIT\";\n  header_name: any = \"Add Subscription Category\"\n  subscriptionCatForm: FormGroup;\n  configData: any;\n  successMessage: any = \"Submitted Successfully!!!\"\n  dialogRef: any;\n  public subscriber_name_array:any;\n  // ==================================================\n\n\n\n  @Input()\n  set config(getConfig: any) {\n    this.configData = getConfig;\n  }\n\n\n  constructor(private formBuilder: FormBuilder, private newsletterService: NewsTitleService,\n    private router: Router ,  public dialog: MatDialog) { }\n\n  ngOnInit() {\n    //generating the form\n    this.generateForm();\n    this.getSubscriberList();\n\n\n    // --------------------------------checking the cases------------------------ \n    switch (this.configData.action) {\n      case 'add':\n        /* Button text */\n\n        break;\n      case 'edit':\n        /* Button text */\n        this.buttonText = \"UPDATE\";\n        this.successMessage = \"One row updated!!!\";\n        this.setDefaultValue(this.configData.defaultData);\n        this.header_name = \"EDIT\";\n        break;\n    }\n    // --------------------------------------------------------------------------\n  }\n\n\n\n  //get subscriber list\n  getSubscriberList() {\n    var data: any = { 'source': this.configData.subscriber_table_name };\n    this.newsletterService.getData(this.configData.endpoint2 + 'datalist', data).subscribe(response => {\n      let result: any;\n      result = response;\n      this.subscriber_name_array = result.res;\n      console.log(this.subscriber_name_array)\n    });\n  }\n\n\n  // =========================================MODAL functions==========================================\n  openDialog(x: any): void {\n    this.dialogRef = this.dialog.open(Modal, {\n      width: '250px',\n      data: { msg: x }\n    });\n\n    this.dialogRef.afterClosed().subscribe(result => {\n\n    });\n  }\n  // =====================================================================================================\n\n  // ================================================Default value======================================\n  setDefaultValue(defaultValue) {\n    this.subscriptionCatForm.patchValue({\n      name: defaultValue.name,\n      priority: defaultValue.priority,\n      status: defaultValue.status,\n      subscriber:defaultValue.subscriber\n    });\n\n  }\n  // ==================================================================================================\n\n\n\n  /** blur function **/\n  inputBlur(val: any) {\n    this.subscriptionCatForm.controls[val].markAsUntouched();\n  }\n\n\n  // ======================form generation=====================\n  generateForm() {\n    this.subscriptionCatForm = this.formBuilder.group({\n      name: ['',Validators.required],\n      priority: ['',Validators.required],\n      status: [],\n      subscriber:[]\n    });\n  }\n  // ==========================================================\n\n\n  // =========================SUBMIT FUNCTION======================\n  onSubmit() {\n\n     /** marking as untouched **/\n     for (let x in this.subscriptionCatForm.controls) {\n      this.subscriptionCatForm.controls[x].markAsTouched();\n    }\n\n\n    /* stop here if form is invalid */\n    if (this.subscriptionCatForm.invalid) {\n      return;\n    } else {\n      if (this.subscriptionCatForm.value.status) {\n        this.subscriptionCatForm.value.status = parseInt(\"1\");\n      } else {\n        this.subscriptionCatForm.value.status = parseInt(\"0\");;\n      }\n\n      /* start process to submited data */\n      let postData: any = {\n        source: this.configData.source,\n        data: Object.assign(this.subscriptionCatForm.value, this.configData.condition)\n      };\n      this.newsletterService.addData(this.configData.endpoint, postData).subscribe((response: any) => {\n        if (response.status == \"success\") {\n          \n          this.openDialog(this.successMessage);\n          setTimeout(() => {\n            this.dialogRef.close();\n          }, 2000);\n          this.router.navigate([this.configData.callBack]);\n        } else {\n          alert(\"Some error occurred. Please try angain.\");\n        }\n      }, (error) => {\n        alert(\"Some error occurred. Please try angain.\");\n      });\n    }\n  }\n  // ==============================================================\n}\n\n\n\n// ============================================MODAL COMPONENT===========================================\n@Component({\n  selector: 'app-modal',\n  templateUrl: 'modal.html',\n})\nexport class Modal {\n\n  constructor(\n    public dialogRef: MatDialogRef<Modal>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n// ======================================================================================================\n","import { Component, OnInit ,Input} from '@angular/core';\n\n@Component({\n  selector: 'lib-listing-subcategory',\n  templateUrl: './listing-subcategory.component.html',\n  styleUrls: ['./listing-subcategory.component.css']\n})\nexport class ListingSubcategoryComponent implements OnInit {\n// ==============================================declaration============================================\npublic SubsCatListConfig: any;\npublic loader: boolean = true;\n// =====================================================================================================\n\n\n\n\n// ================================================Input For Lib Listing================================\n@Input()\nset config(receivedData: any) {\n \n  this.SubsCatListConfig = {\n    apiUrl: receivedData.apiBaseUrl,\n    listEndPoint: receivedData.listEndPoint,\n    datasource: receivedData.datasource,\n    tableName: receivedData.tableName,\n    listArray_skip: [\"_id\", \"userId\", \"created_at\", \"id\", \"updated_at\",\"image\",\"name_search\",\"sub_name_search\"],\n    listArray_modify_header: { \"name\": \"Name\", \"priority\": \"Priority\", \"status\": \"Status\" ,\"date_added\":\"Date\",\"date added\":\"Date\",\"subscriber_name\":\"Subscriber Name\",\"count\":\"Count\",\"subscriber name\":\"Subscriber Name\"},\n    admintablenameTableName: \"admin\",\n    statusarr: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }],\n    updateurl: receivedData.updateEndpoint,\n    editUrl: receivedData.editUrl,\n    jwtToken: receivedData.jwtToken,\n    deleteEndPoint: receivedData.deleteEndPoint,\n    view: receivedData.view,\n    search_settings:{\n      textsearch: [{ label: \"Search By Name\", field: 'name_search' },{ label: \"Search By Subscriber Name\", field: 'sub_name_search' }],\n      selectsearch: [{ label: 'Search By Status', field: 'status', values: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }] }],\n    },\n     /*Showing Image in the Modal*/\n     pendingmodelapplicationarray_detail_datatype: [{\n      key: \"image\",\n      value: 'image',\n      fileurl: 'https://s3.us-east-2.amazonaws.com/crmfiles.influxhostserver/testimonial/'             // Image path \n    }],\n    detail_header:['_id','name_search']\n  }\n  this.loader = false;\n}\n// ====================================================================================================\n\nconstructor() { }\n\nngOnInit() {\n}\n\n}\n\n\n","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder ,Validators} from '@angular/forms';\nimport { CookieService } from 'ngx-cookie-service';\nimport { NewsTitleService } from '../../news-title.service';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nexport interface DialogData {\n  msg: string;\n}\n\n\n@Component({\n  selector: 'lib-add-edit-subscriptiongroup',\n  templateUrl: './add-edit-subscriptiongroup.component.html',\n  styleUrls: ['./add-edit-subscriptiongroup.component.css']\n})\nexport class AddEditSubscriptiongroupComponent implements OnInit {\n\n\n  // =======================declaratiosn=====================\n  subGroupForm: FormGroup;\n  buttonText: any = \"SUBMIT\";\n  header_name: any = \"Add a group to subscriptions\";\n  configData: any;\n  group_array: any = [];\n  dialogRef: any;\n  successMessage: any = \"Subscription Added Successfully..!!!\";\n  // ========================================================\n\n\n  constructor(private formBuilder: FormBuilder, private cookieService: CookieService,\n    private newsService: NewsTitleService, private router: Router, public dialog: MatDialog) { }\n\n  ngOnInit() {\n\n    //generating the form\n    this.generateForm();\n\n    //getting the group\n    this.getGroup();\n\n    //Switch Case starts here\n\n    switch (this.configData.action) {\n      case 'add':\n        /* Button text */\n        this.buttonText = \"SUBMIT\";\n        this.header_name = \"Add a Group\";\n        break;\n      case 'edit':\n        /* Button text */\n        this.buttonText = \"UPDATE\";\n        this.successMessage = \"Subscription Updated Successfully..!!!\";\n        this.setDefaultValue(this.configData.defaultData);\n        this.header_name = \"Change/Remove Group\";\n        break;\n    }\n\n\n  }\n\n  @Input()\n  set config(getConfig: any) {\n    this.configData = getConfig;\n  }\n\n\n  // =====================generate form==============\n  generateForm() {\n    this.subGroupForm = this.formBuilder.group({\n      fullname: ['',[Validators.required]],\n      phone: ['',[Validators.required]],\n      email: ['',[Validators.required,Validators.email]],\n      company: ['',[Validators.required]],\n      group: [],\n      status:[]\n    });\n  }\n  // ================================================\n\n  // ================================================Default value======================================\n  setDefaultValue(defaultValue) {\n    this.subGroupForm.patchValue({\n      fullname: defaultValue.fullname,\n      phone: defaultValue.phone,\n      email: defaultValue.email,\n      company: defaultValue.company,\n      group: defaultValue.group,\n      status:defaultValue.status\n    });\n\n  }\n  // ==================================================================================================\n\n\n\n  // =========================================MODAL functions==========================================\n  openDialog(x: any): void {\n    this.dialogRef = this.dialog.open(Modal2, {\n      width: '250px',\n      data: { msg: x }\n    });\n\n    this.dialogRef.afterClosed().subscribe(result => {\n\n    });\n  }\n  // =====================================================================================================\n\n\n\n\n   /** blur function **/\n   inputBlur(val: any) {\n    this.subGroupForm.controls[val].markAsUntouched();\n  }\n\n\n\n  // ==========================================SUBMIT=================================================\n\n\n  onSubmit() {\n\n\n     /** marking as untouched **/\n     for (let x in this.subGroupForm.controls) {\n      this.subGroupForm.controls[x].markAsTouched();\n    }\n\n\n        /* stop here if form is invalid */\n  \n          if (this.subGroupForm.value.status) {\n            this.subGroupForm.value.status = parseInt(\"1\");\n          } else {\n            this.subGroupForm.value.status = parseInt(\"0\");;\n          }\n        \n\n    // if (this.subGroupForm.value.group == 0)\n    //   this.successMessage = \"Removed Group!!!\";    \n    /* stop here if form is invalid */\n    if (this.subGroupForm.invalid) {\n      return;\n    } else {\n\n      /* start process to submited data */\n      let postData: any = {\n        source: this.configData.source,\n        data: Object.assign(this.subGroupForm.value, this.configData.condition)\n      };\n      this.newsService.addData(this.configData.endpoint, postData).subscribe((response: any) => {\n        if (response.status == \"success\") {\n\n          this.openDialog(this.successMessage);\n          setTimeout(() => {\n            this.dialogRef.close();\n          }, 2000);\n          this.router.navigate([this.configData.callBack]);\n        } else {\n          alert(\"Some error occurred. Please try angain.\");\n        }\n      }, (error) => {\n        alert(\"Some error occurred. Please try angain.\");\n      });\n    }\n  }\n  // =================================================================================================\n\n  //Getting the parent category\n  getGroup() {\n    let postData: any = {\n      source: this.configData.group,\n      token: this.cookieService.get('jwtToken')\n\n    };\n    this.newsService.getData(this.configData.endpoint2 + 'datalist', postData).subscribe((response: any) => {\n      this.group_array = response.res;\n    })\n  }\n\n\n}\n\n\n// ============================================MODAL COMPONENT===========================================\n@Component({\n  selector: 'app-modal',\n  templateUrl: 'modal2.html',\n})\nexport class Modal2 {\n\n  constructor(\n    public dialogRef: MatDialogRef<Modal2>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n// ======================================================================================================\n","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { AmazingTimePickerService } from 'amazing-time-picker';\nimport { NewsTitleService } from '../../../news-title.service';\nimport { DatePipe } from '@angular/common';\nimport { CookieService } from 'ngx-cookie-service';\nimport { FormGroup, FormControl, FormArray, FormBuilder, Validators } from \"@angular/forms\";\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n\nexport interface DialogData {\n  msg: string;\n  test_mail: any;\n  title: any;\n  subject: any;\n  content: any;\n  testMail: any;\n  flag: any;\n\n\n\n}\n\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n@Component({\n  selector: 'lib-add-edit-newsletterlib',\n  templateUrl: './add-edit-newsletterlib.component.html',\n  styleUrls: ['./add-edit-newsletterlib.component.css'],\n})\nexport class AddEditNewsletterlibComponent implements OnInit {\n\n\n  // =================declaration==================\n  public header_name: any = \"Newsletter\"\n  public buttonText: any = \"SAVE\";\n  public group_name_array: any = [];\n  public sender_name_array: any = [];\n  public test_mail: any;\n  public configData: any;\n  public time: any;\n  public cookieValue: any;\n  public newsForm: FormGroup;\n  public frequency_flag: boolean = false;\n  public days_array: any = [];\n  // public editorconfig: any = {};\n  days_json: any;\n  public message: string;\n  public tmp_date: any;\n  public false_count: number;\n  public dialogRef: any;\n  public share_with_group: any;\n  public automatic_newsletter_to: any;\n  public reply_address_to: any\n  public senders_address_to: any;\n  public reply_data:any;\n  public email_address:any;\n  public reply_address_id:any;\n\n\n  // ==============================================\n\n  /**ckeditor start here*/\n  // public Editor = ClassicEditor;  //for ckeditor\n  // editorConfig = {\n  //   placeholder: 'Content:',\n  // };\n  // public model = {\n  //   editorData: ''\n  // };\n  /**ckeditor end here*/\n\n\n  @Input()\n  set config(getConfig: any) {\n    this.configData = getConfig;\n  }\n\n\n\n  constructor(private atp: AmazingTimePickerService, private newsService: NewsTitleService,\n    public datepipe: DatePipe, public cookieService: CookieService, private formBuilder: FormBuilder,\n    public router: Router, private snackBar: MatSnackBar, public dialog: MatDialog) {\n\n\n    // this.editorconfig.extraAllowedContent = '*[class](*),span;ul;li;table;td;style;*[id];*(*);*{*}';\n\n  }\n\n  // unix_timestamp(t) {\n  //   var d = new Date(t * 1000),\t// Convert the passed timestamp to milliseconds\n  //     yyyy = d.getFullYear(),\n  //     mm = ('0' + (d.getMonth() + 1)).slice(-2),\t// Months are zero based. Add leading 0.\n  //     dd = ('0' + d.getDate()).slice(-2),\t\t\t// Add leading 0.\t\n  //     time;\n\n  //   // ie: 2013-02-18, 8:35 AM\t\n  //   time = mm + \"/\" + dd + \"/\" + yyyy;\n\n  //   return time;\n  // }\n\n  ngOnInit() {\n\n    this.weekdays();\n\n    this.getReplyAddress();\n\n\n    if (this.configData.action == 'add'){\n      this.time = this.datepipe.transform(new Date(), 'H:mm');\n    }\n\n    if (this.configData.action == 'edit'){\n      this.getReplyAddress();\n    }\n\n\n\n\n    //Calling the group name\n    this.getGroupName();\n\n    //Get sender's getGroupName\n    this.getSenderAddress();\n\n    //Getting the cookie value\n    this.cookieValue = this.cookieService.getAll();\n\n    //  calling the form generation \n    this.generateForm();\n\n    this.newsForm.value.cookiemail = this.cookieService.get('get_email');\n\n    /*Switch case*/\n    switch (this.configData.action) {\n      case 'add':\n        /* Button text */\n        this.buttonText = \"SUBMIT\";\n        this.header_name = \"Add a Newsletter\";\n        this.message = \"Newsletter Added Successfully!!!\";\n\n        break;\n      case 'edit':\n        this.days_json = null;\n        /* Button text */\n        this.buttonText = \"UPDATE\";\n        this.time = \"\";\n        this.message = \"Newsletter Information Updated!!!\";\n        // this.reply_address=this.reply_data[0].email;\n        if (this.configData.defaultData.newsfrequency == \"daily\")\n          this.frequency_flag = false;\n        else\n          this.frequency_flag = true;\n\n\n        setTimeout(() => {\n\n          this.setDefaultValue(this.configData.defaultData);\n        }, 1000);\n\n        if (this.configData.defaultData.days_of_weeks != null)\n          this.frequency_flag = true;\n\n\n        setTimeout(() => {\n          this.days_json = this.configData.defaultData.days_of_weeks;\n        }, 1000);\n\n        break;\n    }\n\n\n  }\n\n\n\n  weekdays() {\n\n    this.days_json = [\n      {\n        \"day\": \"Sunday\",\n        \"value\": 1,\n        isSelected: false\n      },\n      {\n        \"day\": \"Monday\",\n        \"value\": 2,\n        isSelected: false\n      },\n      {\n        \"day\": \"Tuesday\",\n        \"value\": 3,\n        isSelected: false\n      },\n      {\n        \"day\": \"Wednesday\",\n        \"value\": 4,\n        isSelected: false\n      },\n      {\n        \"day\": \"Thursday\",\n        \"value\": 5,\n        isSelected: true\n      },\n      {\n        \"day\": \"Friday\",\n        \"value\": 6,\n        isSelected: false\n      },\n      {\n        \"day\": \"Saturday\",\n        \"value\": 7,\n        isSelected: false\n      }\n    ];\n  }\n\n\n\n\n  /** mat snackbar **/\n  openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 3000,\n    });\n  }\n\n\n  /** opening up the time picker **/\n  open() {\n    const amazingTimePicker = this.atp.open();\n    amazingTimePicker.afterClose().subscribe(time => {\n    });\n  }\n\n\n  // getTestMail(){\n  //   var data1: any = { 'source': this.configData.test_mail_table };\n  //   this.newsService.getData(this.configData.endpoint2 + 'datalist', data1).subscribe(response => {\n  //     let result: any;\n  //     result = response;\n  //     this.test_mail = result.res;\n  //      console.log('+++',this.test_mail)\n  //     this.openDialog(this.newsForm.value,this.test_mail)\n  //   })\n  // }\n\n\n\n  /** open Modal **/\n  openDialog(x: any, y: any): void {\n    // console.log(y)\n\n    this.dialogRef = this.dialog.open(PREVIEW, {\n      panelClass:'newspreview-dialog',\n      data: {\n        msg: x,\n        test_mail: y,\n\n      }\n\n    });\n\n    this.dialogRef.afterClosed().subscribe(result => {\n\n      // console.log(result)\n\n\n      let mailData: any = {\n        \"title\": result.title,\n        \"subject\": result.subject,\n        \"description\": result.content,\n        \"testMail\": result.testMail\n      }\n\n      if (result.flag == \"yes\") {\n\n        let data1: any = {\n          source: this.configData.source_for_test_mail_add,\n          data: mailData\n        };\n        this.newsService.addData(this.configData.endpoint, data1).subscribe((response: any) => {\n          if (response.status == \"success\") {\n\n            this.openSnackBar('Email Send Successfully.','OK');\n            // this.dialogRef.close();\n          } else {\n            this.openSnackBar('Error Occure....!','');\n          }\n\n        });\n\n      }\n\n    });\n\n  }\n\n\n  /** preview all **/\n  preview_all() {\n\n  if(this.newsForm.value.content == '' || this.newsForm.value.newssubject == '' ) {\n      alert(\"Subject and Description field is requird for test email....!\")\n    } else {\n\n      var data1: any = { 'source': this.configData.test_mail_table };\n      this.newsService.getData(this.configData.endpoint2 + 'datalist', data1).subscribe(response => {\n        let result: any;\n        result = response;\n        this.test_mail = result.res;\n        this.openDialog((Object.values(this.newsForm.value)), (this.test_mail));\n        // console.log('+++', this.test_mail)\n      })\n      // this.openDialog(this.newsForm.value,this.test_mail)\n      // this.openDialog((Object.values(this.newsForm.value)),(this.test_mail));\n\n      // console.log(this.newsForm.value)\n    }\n\n\n  }\n\n\n  /*getting the group name*/\n  getGroupName() {\n    var data: any = { 'source': this.configData.group_table };\n    this.newsService.getData(this.configData.endpoint2 + 'datalist', data).subscribe(response => {\n      let result: any;\n      result = response;\n      this.group_name_array = result.res;\n    });\n  }\n\n  /*getting the sender's email*/\n  getReplyAddress() {\n    var data: any = { 'source': this.configData.reply_address_table };\n    this.newsService.getData(this.configData.endpoint2 + 'datalist', data).subscribe(response => {\n      let result: any;\n      result = response;\n      this.reply_data = result.res;\n      this.email_address=this.reply_data[0].email;\n      this.reply_address_id=this.reply_data[0]._id;\n      // console.log(this.email_address.email)\n\n    });\n  }\n\n  // reply address \n\n  getSenderAddress() {\n    var data: any = { 'source': this.configData.sender_table };\n    this.newsService.getData(this.configData.endpoint2 + 'datalist', data).subscribe(response => {\n      let result: any;\n      result = response;\n      this.sender_name_array = result.res;\n      // console.log(this.sender_name_array)\n    });\n  }\n\n\n  //generate form\n  generateForm() {\n    this.newsForm = this.formBuilder.group({\n      newstitle: ['', [Validators.required]],\n      newssubject: ['', [Validators.required]],\n      share_news: [],\n      publishdate_normal_format: [],\n      senderaddress: [],\n      publishdate: ['', [Validators.required]],\n      settime: [this.time],\n      content: ['', [Validators.required]],\n      newsfrequency: [],\n      days_of_weeks: [],\n      timeofday: [this.time],\n      timezone: [],\n      startdate: ['', [Validators.required]],\n      enddate: ['', [Validators.required]],\n      reply_email: [this.reply_address_id],\n      status: [1]\n    });\n  }\n\n\n\n  //setting the default value\n  setDefaultValue(defaultValue) {\n    this.tmp_date = defaultValue.publishdate;\n    let date = new Date(this.tmp_date);\n    defaultValue.publishdate = date,\n\n      this.tmp_date = defaultValue.startdate;\n    date = new Date(this.tmp_date);\n    defaultValue.startdate = date,\n\n      this.tmp_date = defaultValue.enddate;\n    date = new Date(this.tmp_date);\n    defaultValue.enddate = date,\n\n      this.newsForm.patchValue({\n        newstitle: defaultValue.newstitle,\n        newssubject: defaultValue.newssubject,\n        share_news: defaultValue.share_news,\n        senderaddress: defaultValue.senderaddress,\n        publishdate: defaultValue.publishdate,\n        settime: defaultValue.settime,\n        content: defaultValue.content,\n        days_of_weeks: defaultValue.days_of_weeks,\n        newsfrequency: defaultValue.newsfrequency,\n        timeofday: defaultValue.timeofday,\n        timezone: defaultValue.timezone,\n        startdate: defaultValue.startdate,\n        enddate: defaultValue.enddate,\n        reply_email: defaultValue.reply_email\n      });\n    // this.share_with_group = defaultValue.share_news;   \n\n  }\n\n\n  /** blur function **/\n  inputBlur(val: any) {\n    this.newsForm.controls[val].markAsUntouched();\n  }\n\n\n  /** marking the checkbox as true **/\n  getDays(day_var: any) {\n    if (day_var.isSelected === true)\n      day_var.isSelected = false;\n    else\n      day_var.isSelected = true;\n  }\n\n  //submit function\n  onSubmit() {\n\n    this.days_array = [];\n    this.false_count = 0;\n    if (this.frequency_flag != false)\n      for (var i = 0; i < this.days_json.length; i++) {\n        if (this.days_json[i].isSelected) {\n          this.days_array.push(this.days_json[i]);\n          this.false_count--;\n        }\n        else\n          this.days_array.push(this.days_json[i]);\n        this.false_count++;\n      }\n\n    if (this.false_count == 7)\n      return;\n\n\n    if (this.frequency_flag == true)\n      this.newsForm.value.days_of_weeks = this.days_array;\n    else\n      this.newsForm.value.days_of_weeks = null;\n\n\n\n\n    this.newsForm.value.publishdate = moment(this.newsForm.value.publishdate).format('MM/DD/YYYY');\n    this.newsForm.value.startdate = moment(this.newsForm.value.startdate).format('MM/DD/YYYY');\n    this.newsForm.value.enddate = moment(this.newsForm.value.enddate).format('MM/DD/YYYY');\n    this.newsForm.value.reply_email=this.reply_data[0]._id;\n\n    let x: any = moment(this.newsForm.value.publishdate).unix();\n    this.newsForm.value.publishdate_normal_format = parseInt(x) * 1000;\n\n\n\n    /** marking as untouched **/\n    for (let x in this.newsForm.controls) {\n      this.newsForm.controls[x].markAsTouched();\n    }\n\n\n\n    /* stop here if form is invalid */\n    if (this.newsForm.invalid) {\n      return;\n    } else {\n\n      /* start process to submited data */\n      let postData: any = {\n        source: this.configData.source,\n        data: Object.assign(this.newsForm.value, this.configData.condition),\n        \"sourceobj\": [\"senderaddress\",\"reply_email\"]\n      };\n      this.newsService.addData(this.configData.endpoint, postData).subscribe((response: any) => {\n        if (response.status == \"success\") {\n\n          this.openSnackBar(this.message, \"OK\");\n          this.router.navigate([this.configData.callBack]);\n        } else {\n          alert(\"Some error occurred. Please try angain.\");\n        }\n      }, (error) => {\n        alert(\"Some error occurred. Please try angain.\");\n      });\n    }\n  }\n\n\n}\n\n\n// ============================================MODAL COMPONENT===========================================\n@Component({\n  selector: 'app-preview',\n  templateUrl: 'preview_all_data.html',\n  styleUrls: ['./add-edit-newsletterlib.component.css'],\n})\nexport class PREVIEW {\n\n  public configData: any;\n\n\n  @Input()\n  set config(getConfig: any) {\n    this.configData = getConfig;\n  }\n\n\n  public testMail: any;\n  public title: AnalyserNode;\n  public subject: any;\n  public content: any;\n  public flag: any;\n\n  constructor(\n    public dialogRef: MatDialogRef<PREVIEW>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData, public newsService: NewsTitleService, public cookieService: CookieService) {\n\n    // console.log('>>', data)\n\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  selectOption(val) {\n    // console.log(val)\n  }\n\n  testMailSubmit(title: any, subject: any, content: any, testMail: any, flag: any) {\n    // console.log(title, subject, content, testMail);\n\n    this.data.title = title;\n    this.data.subject = subject;\n    this.data.content = content;\n    this.data.testMail = this.testMail;\n    this.data.flag = flag;\n\n    this.dialogRef.close(this.data);\n\n    // let endpoint:any='https://9ozbyvv5v0.execute-api.us-east-1.amazonaws.com/production/api/addorupdatedata'\n\n    // let mailData: any = {\n    //   source: 'newsTestMailData',\n    //   data: {\n    //     \"title\":title,\n    //     \"subject\":subject,\n    //     \"content\":content,\n    //     \"testMail\":this.testMail\n    //   },\n    //   \"sourceobj\": [\"testMail\"],\n    //   \"token\":this.cookieService.get('jwtToken')\n    // };\n    // this.newsService.addData(endpoint, mailData).subscribe((response: any) => {\n    //   if (response.status == \"success\") {\n\n    //     // this.openSnackBar(this.message, \"OK\");\n    //     this.dialogRef.close();\n\n    //   }\n\n    // });\n\n\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'lib-listing-newsletterlib',\n  templateUrl: './listing-newsletterlib.component.html',\n  styleUrls: ['./listing-newsletterlib.component.css']\n})\nexport class ListingNewsletterlibComponent implements OnInit {\n\n  // ==============================================declaration============================================\n  public newsConfigForm: any;\n  public loader: boolean = true;\n  // =====================================================================================================\n\n\n\n\n  // ================================================Input For Lib Listing================================\n  @Input()\n  set config(receivedData: any) {\n    this.newsConfigForm = {\n      apiUrl: receivedData.apiBaseUrl,\n      listEndPoint: receivedData.listEndPoint,\n      datasource: receivedData.datasource,\n      tableName: receivedData.tableName,\n      listArray_skip: [\"_id\", \"userId\", \"created_at\", \"id\", \"updated_at\",\"title_search\",\"publishdate_normal_format\",\"subject_search\"],\n      listArray_modify_header: {\n        'title': 'Title', 'subject': 'Subject', 'userGroup': 'User Group', 'time': 'Publish Time',\n        'publishdate': 'Publish Date', 'status': 'Status','date added':'Date Added'\n      },\n      admintablenameTableName: \"admin\",\n      status: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }],\n      updateurl: receivedData.updateEndpoint,\n      editUrl: receivedData.editUrl,\n      jwtToken: receivedData.jwtToken,\n      deleteEndPoint: receivedData.deleteEndPoint,\n      view: receivedData.view,\n      detail_header: ['_id','publishdate_normal_format','title_search'],\n      date_search_source:receivedData.view,\n      date_search_endpoint:'datalist',\n      search_settings: {\n        textsearch: [{ label: \"Search by title...\", field: 'title_search' },\n        { label: \"Search by subject...\", field: 'subject_search' }],\n        selectsearch: [{ label: 'Search By Status', field: 'status', values: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }] }],\n        datesearch:[{startdatelabel:\"Start Date\",enddatelabel:\"End Date\",submit:\"Search By Date\",  field:\"publishdate_normal_format\"}],\n        // search: [{ label: \"Search By group\", field: '' }]\n      },  \n    }\n    this.loader = false;\n  }\n  // ====================================================================================================\n\n  constructor() {\n\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { NewsTitleService } from '../../../news-title.service';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nexport interface DialogData {\n  msg: string;\n}\n\n\n\n@Component({\n  selector: 'lib-add-edit-sender',\n  templateUrl: './add-edit-sender.component.html',\n  styleUrls: ['./add-edit-sender.component.css']\n})\nexport class AddEditSenderComponent implements OnInit {\n\n\n  // ===============Declarations================\n  senderForm: FormGroup;\n  buttonText: any = \"SUBMIT\";\n  header_name: any = \"Add Sender\"\n  configData: any;\n  successMessage: any = \"Submitted Successfully!!!\";\n  dialogRef: any;\n  // ===========================================\n  constructor(private formBuilder: FormBuilder, private newsService: NewsTitleService\n    , private router: Router, public dialog: MatDialog) { }\n\n  ngOnInit() {\n    //generating the form\n    this.generateForm();\n\n\n    // --------------------------------checking the cases------------------------ \n    switch (this.configData.action) {\n      case 'add':\n        /* Button text */\n\n        break;\n      case 'edit':\n        /* Button text */\n        this.buttonText = \"UPDATE\";\n        this.successMessage = \"One row updated!!!\";\n        this.setDefaultValue(this.configData.defaultData);\n        this.header_name = \"Edit Sender's Information\";\n        break;\n    }\n    // --------------------------------------------------------------------------\n  }\n\n\n\n  // ===============generate form====================\n  generateForm() {\n    this.senderForm = this.formBuilder.group({\n      name: ['',[Validators.required]],\n      email: ['',[Validators.required,Validators.email]]\n    });\n  }\n  // ================================================\n\n\n\n  @Input()\n  set config(getConfig: any) {\n    this.configData = getConfig;\n  }\n\n  // =========================================MODAL functions==========================================\n  openDialog(x: any): void {\n    this.dialogRef = this.dialog.open(Modal3, {\n      width: '250px',\n      data: { msg: x }\n    });\n\n    this.dialogRef.afterClosed().subscribe(result => {\n\n    });\n  }\n  // =====================================================================================================\n\n\n /** blur function **/\n inputBlur(val: any) {\n  this.senderForm.controls[val].markAsUntouched();\n}\n\n\n  // ================================================Default value======================================\n  setDefaultValue(defaultValue) {\n    this.senderForm.patchValue({\n      name: defaultValue.name,\n      email: defaultValue.email\n    });\n\n  }\n  // ==================================================================================================\n\n\n\n\n  // =======================On SUBMIT======================\n  onSubmit() {\n\n      /** marking as untouched **/\n      for (let x in this.senderForm.controls) {\n        this.senderForm.controls[x].markAsTouched();\n      }\n\n    /* stop here if form is invalid */\n    if (this.senderForm.invalid) {\n      return;\n    } else {\n\n      /* start process to submited data */\n      let postData: any = {\n        source: this.configData.source,\n        data: Object.assign(this.senderForm.value, this.configData.condition),\n      };\n      this.newsService.addData(this.configData.endpoint, postData).subscribe((response: any) => {\n        if (response.status == \"success\") {\n          \n          this.openDialog(this.successMessage);\n          setTimeout(() => {\n            this.dialogRef.close();\n          }, 2000);\n          this.router.navigate([this.configData.callBack]);\n        } else {\n          alert(\"Some error occurred. Please try angain.\");\n        }\n      }, (error) => {\n        alert(\"Some error occurred. Please try angain.\");\n      });\n    }\n  }\n  // ======================================================\n}\n\n\n\n\n\n// ============================================MODAL COMPONENT===========================================\n@Component({\n  selector: 'app-modal',\n  templateUrl: 'modal3.html',\n})\nexport class Modal3 {\n\n  constructor(\n    public dialogRef: MatDialogRef<Modal3>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n// ======================================================================================================\n","import { Component, OnInit, Input } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'lib-listing-sender',\n  templateUrl: './listing-sender.component.html',\n  styleUrls: ['./listing-sender.component.css']\n})\nexport class ListingSenderComponent implements OnInit {\n\n  // ==============================================declaration============================================\n  public senderConfigForm2: any;\n  public loader: boolean = true;\n  // =====================================================================================================\n\n\n\n\n  // ================================================Input For Lib Listing================================\n  @Input()\n  set config(receivedData: any) {\n\n    this.senderConfigForm2 = {\n      apiUrl: receivedData.apiUrl,\n      listEndPoint: receivedData.listEndPoint,\n      datasource: receivedData.datasource,\n      tableName: receivedData.tableName,\n      listArray_skip: [\"_id\", \"userId\", \"created_at\", \"id\", \"updated_at\"],\n      listArray_modify_header: { \"name\": \"Sender's Name\", \"email\": \"Sender's Email\", \"date\": \"Date\" },\n      admintablenameTableName: \"admin\",\n      statusarr: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }],\n      updateurl: receivedData.updateEndpoint,\n      editUrl: receivedData.editUrl,\n      jwtToken: receivedData.jwtToken,\n      deleteEndPoint: receivedData.deleteEndPoint,\n      view: receivedData.view,\n      detail_header:['_id']\n    }\n    this.loader = false;\n  }\n  // ====================================================================================================\n\n  constructor(private cookieService: CookieService) {\n    \n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n","import { Component, OnInit,Input ,Inject} from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { NewsTitleService } from '../../../news-title.service';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nexport interface DialogData {\n  msg: string;\n}\n\n\n@Component({\n  selector: 'lib-add-edit-testemaillib',\n  templateUrl: './add-edit-testemaillib.component.html',\n  styleUrls: ['./add-edit-testemaillib.component.css']\n})\nexport class AddEditTestemaillibComponent implements OnInit {\n\n\n  // ===============Declarations================\n  senderFormTest: FormGroup;\n  buttonText: any = \"SUBMIT\";\n  header_name: any = \"Add Sender(Test)\"\n  configData: any;\n  successMessage: any = \"Submitted Successfully!!!\";\n  dialogRef: any;\n  // ===========================================\n  constructor(private formBuilder: FormBuilder, private newsService: NewsTitleService\n    , private router: Router, public dialog: MatDialog) { }\n\n  ngOnInit() {\n    //generating the form\n    this.generateForm();\n\n\n    // --------------------------------checking the cases------------------------ \n    switch (this.configData.action) {\n      case 'add':\n        /* Button text */\n\n        break;\n      case 'edit':\n        /* Button text */\n        this.buttonText = \"UPDATE\";\n        this.successMessage = \"One row updated!!!\";\n        this.setDefaultValue(this.configData.defaultData);\n        this.header_name = \"Edit sender's Information\";\n        break;\n    }\n    // --------------------------------------------------------------------------\n  }\n\n\n\n  // ===============generate form====================\n  generateForm() {\n    this.senderFormTest = this.formBuilder.group({\n      name: ['',[Validators.required]],\n      email: ['',[Validators.required,Validators.email]]\n    });\n  }\n  // ================================================\n\n\n\n  @Input()\n  set config(getConfig: any) {\n    this.configData = getConfig;\n  }\n\n  // =========================================MODAL functions==========================================\n  openDialog(x: any): void {\n    this.dialogRef = this.dialog.open(Modal4, {\n      width: '250px',\n      data: { msg: x }\n    });\n\n    this.dialogRef.afterClosed().subscribe(result => {\n\n    });\n  }\n  // =====================================================================================================\n\n\n\n\n  // ================================================Default value======================================\n  setDefaultValue(defaultValue) {\n    this.senderFormTest.patchValue({\n      name: defaultValue.name,\n      email: defaultValue.email\n    });\n\n  }\n  // ==================================================================================================\n\n\n  /** blur function **/\n  inputBlur(val: any) {\n    this.senderFormTest.controls[val].markAsUntouched();\n  }\n\n\n\n  // =======================On SUBMIT======================\n  onSubmit() {\n\n     /** marking as untouched **/\n     for (let x in this.senderFormTest.controls) {\n      this.senderFormTest.controls[x].markAsTouched();\n    }\n    \n    /* stop here if form is invalid */\n    if (this.senderFormTest.invalid) {\n      return;\n    } else {\n\n      /* start process to submited data */\n      let postData: any = {\n        source: this.configData.source,\n        data: Object.assign(this.senderFormTest.value, this.configData.condition),\n      };\n      this.newsService.addData(this.configData.endpoint, postData).subscribe((response: any) => {\n        if (response.status == \"success\") {\n          console.log(response.status);\n          this.openDialog(this.successMessage);\n          setTimeout(() => {\n            this.dialogRef.close();\n          }, 2000);\n          this.router.navigate([this.configData.callBack]);\n        } else {\n          alert(\"Some error occurred. Please try angain.\");\n        }\n      }, (error) => {\n        alert(\"Some error occurred. Please try angain.\");\n      });\n    }\n  }\n  // ======================================================\n}\n\n\n\n\n\n// ============================================MODAL COMPONENT===========================================\n@Component({\n  selector: 'app-modal',\n  templateUrl: 'modal4.html',\n})\nexport class Modal4 {\n\n  constructor(\n    public dialogRef: MatDialogRef<Modal4>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n// ======================================================================================================\n","import { Component, OnInit ,Input} from '@angular/core';\n\n@Component({\n  selector: 'lib-listing-testemaillib',\n  templateUrl: './listing-testemaillib.component.html',\n  styleUrls: ['./listing-testemaillib.component.css']\n})\nexport class ListingTestemaillibComponent implements OnInit {\n\n  // ==============================================declaration============================================\n  public senderConfigForm: any;\n  public loader: boolean = true;\n  // =====================================================================================================\n  \n  \n  \n  \n  // ================================================Input For Lib Listing================================\n  @Input()\n  set config(receivedData: any) {\n   \n    this.senderConfigForm = {\n      apiUrl: receivedData.apiBaseUrl,\n      listEndPoint: receivedData.listEndPoint,\n      datasource: receivedData.datasource,\n      tableName: receivedData.tableName,\n      listArray_skip: [\"_id\", \"userId\", \"created_at\", \"id\", \"updated_at\"],\n      listArray_modify_header: { \"name\": \"Sender's Name\", \"email\":\"Sender's Email\"},\n      admintablenameTableName: \"admin\",\n      statusarr: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }],\n      updateurl: receivedData.updateEndpoint,\n      editUrl: receivedData.editUrl,\n      jwtToken: receivedData.jwtToken,\n      deleteEndPoint: receivedData.deleteEndPoint,\n      view: receivedData.view,\n      detail_header:['_id']\n    \n    }\n    this.loader = false;\n  }\n  // ====================================================================================================\n  \n  constructor() { }\n  \n  ngOnInit() {\n  }\n  \n  }\n  \n  \n  ","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { NewsTitleComponent, modalData } from './news-title.component';\nimport { DemoMaterialModule } from './material-module';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\nimport { ApiService } from './api.service';\nimport { ListingNewsletterComponent } from './Components/listing-newsletter/listing-newsletter.component';\nimport { ListingModule } from 'listing-angular7';\nimport { AddEditSubcategoryComponent,Modal } from './Components/subscriptioncategory/add-edit-subcategory/add-edit-subcategory.component';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ListingSubcategoryComponent } from './Components/subscriptioncategory/listing-subcategory/listing-subcategory.component';\nimport { AddEditSubscriptiongroupComponent,Modal2 } from './Components/add-edit-subscriptiongroup/add-edit-subscriptiongroup.component';\nimport { AddEditNewsletterlibComponent , PREVIEW} from './Components/newsletter/add-edit-newsletterlib/add-edit-newsletterlib.component';\nimport { ListingNewsletterlibComponent } from './Components/newsletter/listing-newsletterlib/listing-newsletterlib.component';\nimport { AddEditSenderComponent , Modal3} from './Components/senderslist/add-edit-sender/add-edit-sender.component';\nimport { ListingSenderComponent } from './Components/senderslist/listing-sender/listing-sender.component';\nimport { AddEditTestemaillibComponent,Modal4 } from './Components/testemails/add-edit-testemaillib/add-edit-testemaillib.component';\nimport { ListingTestemaillibComponent } from './Components/testemails/listing-testemaillib/listing-testemaillib.component';\nimport { AmazingTimePickerModule } from 'amazing-time-picker';\n// import {NgxMaterialTimepickerModule} from 'ngx-material-timepicker';\nimport { DatePipe} from '@angular/common';\nimport { CKEditorModule } from 'ngx-ckeditor';\nimport { MomentModule } from 'ngx-moment';\n\n\n@NgModule({\n  declarations: [Modal4,Modal2,Modal,NewsTitleComponent, modalData, ListingNewsletterComponent, \n    AddEditSubcategoryComponent, ListingSubcategoryComponent, AddEditSubscriptiongroupComponent, \n    AddEditNewsletterlibComponent, ListingNewsletterlibComponent, AddEditSenderComponent, \n    ListingSenderComponent,Modal3, AddEditTestemaillibComponent, ListingTestemaillibComponent,PREVIEW\n    ],\n  imports: [\n    DemoMaterialModule,\n    ReactiveFormsModule,FormsModule,\n    BrowserAnimationsModule,\n    CommonModule,\n    ListingModule,\n    RouterModule,\n    HttpClientModule,\n    AmazingTimePickerModule,\n    // NgxMaterialTimepickerModule,\n    CKEditorModule,\n    MomentModule\n    \n  ],\n  exports: [AddEditSenderComponent,AddEditNewsletterlibComponent,AddEditSubscriptiongroupComponent,\n    Modal,NewsTitleComponent,ListingNewsletterComponent,AddEditSubcategoryComponent,\n    ListingSubcategoryComponent,AddEditTestemaillibComponent,ListingTestemaillibComponent,ListingNewsletterlibComponent,\n    ListingSenderComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  providers: [ApiService,DatePipe],\n  entryComponents:[PREVIEW,Modal4,Modal3,NewsTitleComponent, modalData,Modal,Modal2]\n})\nexport class NewsTitleModule { }\n\n\n\n"],"names":["MatDialog","MatDialogRef","MAT_DIALOG_DATA","MatSnackBar"],"mappings":"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"}
