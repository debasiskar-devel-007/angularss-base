{"version":3,"sources":["ng://news-title/lib/news-title.service.ts","ng://news-title/lib/api.service.ts","ng://news-title/lib/news-title.component.ts","ng://news-title/lib/material-module.ts","ng://news-title/lib/Components/listing-newsletter/listing-newsletter.component.ts","ng://news-title/lib/Components/subscriptioncategory/add-edit-subcategory/add-edit-subcategory.component.ts","ng://news-title/lib/Components/subscriptioncategory/listing-subcategory/listing-subcategory.component.ts","ng://news-title/lib/news-title.module.ts"],"names":["NewsTitleService","prototype","isTokenExpired","addData","endpoint","requestdata","httpOptions","headers","HttpHeaders","Content-Type","Authorization","this","accesstoken","_http","post","serverUrl","JSON","stringify","pipe","map","res","UpdateData","getData","deleteSingleData","deleteMultipleData","UpdateStatusForSingleData","UpdateStatusForMultipleData","CustomRequest","Injectable","args","providedIn","HttpClient","CookieService","_authHttp","cookieService","progress","uploaderror","get","fileservername","getdata_endpointUrl","ApiService","setServerUrl","value","subjectForServerUrl","next","clearServerUrl","getServerUrl","asObservable","setaddEndpoint","subjectForaddEndpointUrl","clearaddEndpoint","getaddEndpoint","setuploadEndpont","subjectForuploadEndpointUrl","clearuploadEndpoint","getuploadEndpoint","setupdateEndpoint","subjectForupdateEndpointUrl","clearupdateEndpoint","getupdateEndpoint","setdeletesingleEndpoint","subjectFordeletesingleEndpointUrl","cleardeletesingleEndpoint","getdeletesingleEndpoint","setupdatestatus_singleEndpoint","subjectForupdatestatusSingleEndpointUrl","clearupdatestatus_singleEndpoint","getupdatestatus_singleEndpoint","setgetdataEndpoint","subjectForGetdataEndpointUrl","cleargetdataEndpoint","getdataEndpoint","console","log","addendpointUrl","uploadFile","uploadEndpointUrl","updateendpointUrl","addLogin","forgetPassword","deletesingle_endpointUrl","updatestatus_single_endpointUrl","_this","Subject","subscriptionServer","subscribe","message","result","subscriptionaddEndpoint","subscriptionuploadEndpoint","subscriptionupdateEndpoint","subscriptiondeletesingleEndpoint","subscriptionupdatestatusSingleEndpoint","subscriptionGetdataEndpoint","NewsTitleComponent","Object","defineProperty","formTitleVal","formTitleValue","v","logoValue","serverUrlVal","serverUrlValue","addEndpointVal","addEndpointValue","ngOnInit","setTimeout","openDialog","dialog","open","modalData","data","afterClosed","Component","selector","template","FormBuilder","MatSnackBar","MatDialog","Input","ViewChild","FormGroupDirective","fb","apiService","_snackBar","durationInSeconds","onNoClick","dialogRef","close","newsLatterFormSubmit","key","newsLatterForm","controls","markAsTouched","valid","source","responce","status","formDirective","resetForm","inputUntouched","val","markAsUntouched","MatDialogRef","Inject","MAT_DIALOG_DATA","group","fullname","Validators","required","phone","company","email","compose","pattern","DemoMaterialModule","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","ListingNewsletterComponent","receivedData","newsLetterListConfig","apiUrl","apiBaseUrl","listEndPoint","datasource","tableName","listArray_skip","listArray_modify_header","admintablenameTableName","statusarr","name","updateurl","updateEndpoint","editUrl","jwtToken","deleteEndPoint","view","search_settings","textsearch","label","field","search","loader","AddEditSubcategoryComponent","getConfig","configData","generateForm","action","buttonText","successMessage","setDefaultValue","defaultData","header_name","defaultValue","subscriptionCatForm","patchValue","priority","formBuilder","onSubmit","invalid","parseInt","postData","assign","condition","newsletterService","response","router","navigate","callBack","alert","error","Router","ListingSubcategoryComponent","SubsCatListConfig","date_added","selectsearch","values","pendingmodelapplicationarray_detail_datatype","fileurl","NewsTitleModule","declarations","imports","ReactiveFormsModule","FormsModule","BrowserAnimationsModule","CommonModule","ListingModule","RouterModule","HttpClientModule","schemas","CUSTOM_ELEMENTS_SCHEMA","providers","entryComponents"],"mappings":"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","sourcesContent":["\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpClientModule } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, catchError, tap } from 'rxjs/operators';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NewsTitleService {\r\n  public lengthis;\r\n  public percentageis;\r\n  public inprogress;\r\n  public progress: any = [];\r\n  public uploadtype;\r\n  public uploaderror: any = '';\r\n  public accesstoken: any = this.cookieService.get('jwtToken');;\r\n  public fileservername: any = [];\r\n  public serverUrl: any = '';\r\n  public addendpointUrl: any;\r\n  public updateendpointUrl: any;\r\n  public deletesingle_endpointUrl: any;\r\n  public updatestatus_single_endpointUrl: any;\r\n  public deletemultiple_endpointUrl: any;\r\n  public updatestatus_multiple_endpointUrl: any;\r\n  public getdata_endpointUrl: any = 'datalist';\r\n\r\n  constructor(private _http: HttpClient, private _authHttp: HttpClient,private cookieService : CookieService) { }\r\n\r\n  isTokenExpired() {\r\n    // const helper = new JwtHelperService();\r\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\r\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\r\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\r\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\r\n    // console.log('id_token isExpired:',isIdTokenExpired)\r\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\r\n  }\r\n\r\n  addData(endpoint: any, requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  UpdateData(endpoint: any, requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  getData(endpoint: any, requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  deleteSingleData(endpoint: any, requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  deleteMultipleData(endpoint: any, requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  UpdateStatusForSingleData(endpoint: any, requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  UpdateStatusForMultipleData(endpoint: any, requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + endpoint + 'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  CustomRequest(endpoint: any, requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n}\r\n","import { ElementRef, EventEmitter, Injectable, Input, ViewChild } from '@angular/core';\r\nimport { switchMap, map, takeWhile } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n// for setting observables to get serverurl and endpointurl from app\r\nimport { Observable, Subject, Subscription } from 'rxjs';\r\nimport{CookieService} from 'ngx-cookie-service';\r\n\r\n\r\n@Injectable({   \r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  public lengthis;\r\n  public percentageis;\r\n  public inprogress;\r\n  public progress: any = [];\r\n  public uploadtype;\r\n  public uploaderror: any = '';\r\n  public accesstoken:any=this.cookieService.get('jwtToken');\r\n  // public accesstoken:any='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIiLCJleHAiOjE1NjgzNTgyMTAsImlhdCI6MTU2ODI3MTgxMH0.2ltvxVKwfX1uwMOwQ2Zzgp1K2jiaCDj051Wyho0Iw-Q';\r\n  fileservername: any = [];\r\n  serverUrl: any;\r\n  addendpointUrl: any;\r\n  uploadEndpointUrl:any; //souresh\r\n  updateendpointUrl: any;\r\n  deletesingle_endpointUrl: any;\r\n  updatestatus_single_endpointUrl: any;\r\n  deletemultiple_endpointUrl: any;\r\n  updatestatus_multiple_endpointUrl: any;\r\n  getdata_endpointUrl: any;\r\n  private subjectForServerUrl = new Subject<any>();\r\n  private subjectForaddEndpointUrl = new Subject<any>();\r\n  private subjectForuploadEndpointUrl = new Subject<any>();  //added by souresh\r\n  private subjectForupdateEndpointUrl = new Subject<any>();\r\n  private subjectFordeletesingleEndpointUrl = new Subject<any>();\r\n  private subjectForupdatestatusSingleEndpointUrl = new Subject<any>();\r\n  private subjectForGetdataEndpointUrl = new Subject<any>();\r\n  public subscriptionServer: Subscription;\r\n  public subscriptionaddEndpoint: Subscription;\r\n  public subscriptionuploadEndpoint: Subscription;   //added by souresh\r\n  public subscriptionupdateEndpoint: Subscription;\r\n  public subscriptiondeletesingleEndpoint: Subscription;\r\n  public subscriptionupdatestatusSingleEndpoint: Subscription;\r\n  public subscriptionGetdataEndpoint: Subscription;\r\n\r\n  constructor(private _http: HttpClient,\r\n    private _authHttp: HttpClient,private cookieService :CookieService) {\r\n    this.subscriptionServer = this.getServerUrl().subscribe(message => {\r\n     let result: any;\r\n      result = message;\r\n      if (result != null) {\r\n        this.serverUrl = result;\r\n      } else {\r\n        this.serverUrl = null;\r\n      }\r\n    });\r\n    this.subscriptionaddEndpoint = this.getaddEndpoint().subscribe(message => {\r\n      let result: any;\r\n      result = message;\r\n      if (result != null) {\r\n        this.addendpointUrl = result;\r\n      } else {\r\n        this.addendpointUrl = null;\r\n      }\r\n    });\r\n    /*********added by souresh***********/\r\n    this.subscriptionuploadEndpoint=this.getuploadEndpoint().subscribe(message=>{\r\n      let result:any;\r\n      result=message;\r\n        if(result!=null){\r\n          this.uploadEndpointUrl = result;\r\n        } else{\r\n          this.uploadEndpointUrl = null;\r\n        }\r\n    })\r\n    /************souresh end here**************/\r\n    this.subscriptionupdateEndpoint = this.getupdateEndpoint().subscribe(message => {\r\n      let result: any;\r\n      result = message;\r\n      if (result != null) {\r\n        this.updateendpointUrl = result;\r\n      } else {\r\n        this.updateendpointUrl = null;\r\n      }\r\n    });\r\n    this.subscriptiondeletesingleEndpoint = this.getdeletesingleEndpoint().subscribe(message => {\r\n      let result: any;\r\n      result = message;\r\n      if (result != null) {\r\n        this.deletesingle_endpointUrl = result;\r\n      } else {\r\n        this.deletesingle_endpointUrl = null;\r\n      }\r\n    });\r\n    this.subscriptionupdatestatusSingleEndpoint = this.getupdatestatus_singleEndpoint().subscribe(message => {\r\n      let result: any;\r\n      result = message;\r\n      if (result != null) {\r\n        this.updatestatus_single_endpointUrl = result;\r\n      } else {\r\n        this.updatestatus_single_endpointUrl = null;\r\n      }\r\n    });\r\n    this.subscriptionGetdataEndpoint = this.getdataEndpoint().subscribe(message => {\r\n      let result: any;\r\n      result = message;\r\n      if (result != null) {\r\n        this.getdata_endpointUrl = result;\r\n      } else {\r\n        this.getdata_endpointUrl = null;\r\n      }\r\n    });\r\n\r\n    \r\n  }\r\n\r\n  setServerUrl(value: any) {\r\n    this.subjectForServerUrl.next(value);\r\n  }\r\n  public clearServerUrl() {\r\n    this.subjectForServerUrl.next(null);\r\n  }\r\n  public getServerUrl(): Observable<any> {\r\n    return this.subjectForServerUrl.asObservable();\r\n  }\r\n\r\n  setaddEndpoint(value: any) {\r\n    this.subjectForaddEndpointUrl.next(value);\r\n  }\r\n  public clearaddEndpoint() {\r\n    this.subjectForaddEndpointUrl.next(null);\r\n  }\r\n  public getaddEndpoint(): Observable<any> {\r\n    return this.subjectForaddEndpointUrl.asObservable();\r\n  }\r\n/*****added by souresh******/\r\n  setuploadEndpont(value:any){\r\n    this.subjectForuploadEndpointUrl.next(value);\r\n  }\r\n  public clearuploadEndpoint(){\r\n    this.subjectForuploadEndpointUrl.next(null);\r\n  }\r\n  public getuploadEndpoint(): Observable <any> {\r\n    return this.subjectForuploadEndpointUrl.asObservable();\r\n  }\r\n   /********souresh end here********/\r\n\r\n\r\n  setupdateEndpoint(value: any) {\r\n    this.subjectForupdateEndpointUrl.next(value);\r\n  }\r\n  public clearupdateEndpoint() {\r\n    this.subjectForupdateEndpointUrl.next(null);\r\n  }\r\n  public getupdateEndpoint(): Observable<any> {\r\n    return this.subjectForupdateEndpointUrl.asObservable();\r\n  }\r\n\r\n  setdeletesingleEndpoint(value: any) {\r\n    this.subjectFordeletesingleEndpointUrl.next(value);\r\n  }\r\n  public cleardeletesingleEndpoint() {\r\n    this.subjectFordeletesingleEndpointUrl.next(null);\r\n  }\r\n  public getdeletesingleEndpoint(): Observable<any> {\r\n    return this.subjectFordeletesingleEndpointUrl.asObservable();\r\n  }\r\n\r\n  setupdatestatus_singleEndpoint(value: any) {\r\n    this.subjectForupdatestatusSingleEndpointUrl.next(value);\r\n  }\r\n  public clearupdatestatus_singleEndpoint() {\r\n    this.subjectForupdatestatusSingleEndpointUrl.next(null);\r\n  }\r\n  public getupdatestatus_singleEndpoint(): Observable<any> {\r\n    return this.subjectForupdatestatusSingleEndpointUrl.asObservable();\r\n  }\r\n\r\n  setgetdataEndpoint(value: any) {\r\n    this.subjectForGetdataEndpointUrl.next(value);\r\n  }\r\n  public cleargetdataEndpoint() {\r\n    this.subjectForGetdataEndpointUrl.next(null);\r\n  }\r\n  public getdataEndpoint(): Observable<any> {\r\n    return this.subjectForGetdataEndpointUrl.asObservable();\r\n  }\r\n\r\n\r\n\r\n  isTokenExpired() {\r\n\r\n    // const helper = new JwtHelperService();\r\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\r\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\r\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\r\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\r\n    // console.log('id_token isExpired:',isIdTokenExpired)\r\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\r\n  }\r\n\r\n  addData(requestdata: any) {\r\n    console.log('in adddata apiservice');\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken          //hard code written Authorization(temp)\r\n      })\r\n    };\r\n\r\n    console.log('httpoptions',httpOptions,this.serverUrl,requestdata);\r\n    var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n  /*******added by souresh************/\r\n  uploadFile(requestdata:any){\r\n    const httpOptions={\r\n        headers: new HttpHeaders({\r\n          'Content-Type':'application/json',\r\n          'Authorization':this.accesstoken          //hard code written Authorization(temp)\r\n        })\r\n    };\r\n    var result=this._http.post(this.serverUrl + this.uploadEndpointUrl,JSON.stringify(requestdata),httpOptions).pipe(map(res=>res));\r\n    return result;\r\n  }\r\n  /*******souresh end here********/\r\n  UpdateData(requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken          //hard code written Authorization(temp)\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + this.updateendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  getData(requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + this.getdata_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n/*************** Added by himadri start here ***************/ \r\n  addLogin(requestdata: any) {\r\n    console.log('in addLogin apiservice');\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n        // 'Authorization': this.accesstoken          //hard code written Authorization(temp)\r\n      })\r\n    };\r\n\r\n    console.log(this.serverUrl,requestdata);\r\n    var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n  /*************** Added by himadri end here ***************/ \r\n\r\n/*************** Added by himadri start here ***************/ \r\nforgetPassword(requestdata: any) {\r\n  console.log('in forgetPassword apiservice');\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n      // 'Authorization': this.accesstoken          //hard code written Authorization(temp)\r\n    })\r\n  };\r\n\r\n  console.log(this.serverUrl,requestdata);\r\n  var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n  return result;\r\n}\r\n/*************** Added by himadri end here ***************/ \r\n\r\n\r\n  deleteSingleData(requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + this.deletesingle_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  deleteMultipleData(requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + this.deletesingle_endpointUrl+'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  UpdateStatusForSingleData(requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + this.updatestatus_single_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  UpdateStatusForMultipleData(requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + this.updatestatus_single_endpointUrl+'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n  CustomRequest(requestdata: any, endpoint:any ) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl +endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit, Inject, Input, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormGroupDirective } from '@angular/forms';\r\nimport { ApiService } from './api.service';\r\nimport { MatSnackBar, MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material';\r\n\r\nexport interface DialogData {\r\n  formTitleValue: any;\r\n  serverUrlValue: any;\r\n  addEndpointValue: any;\r\n  logoValue:any;\r\n}\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'lib-newsTitle',\r\n  // templateUrl:'./news-title.component.html',\r\n  template: ``,\r\n  styleUrls: ['./news-title.component.css']\r\n})\r\nexport class NewsTitleComponent implements OnInit {\r\n  public formTitleValue: any = '';\r\n  public serverUrlValue: any = '';\r\n  public addEndpointValue: any = '';\r\n  public logoValue: any='';\r\n\r\n  @Input()\r\n  set formTitle(formTitleVal: any) {\r\n    this.formTitleValue = formTitleVal;\r\n  }\r\n\r\n  @Input()\r\n  public set logo(v : string) {\r\n    this.logoValue = v;\r\n  }\r\n  \r\n\r\n  @Input()        // setting the server url from project\r\n  set serverUrl(serverUrlVal: any) {\r\n    this.serverUrlValue = (serverUrlVal) || '<no name set>';\r\n    this.serverUrlValue = serverUrlVal;\r\n    // console.log(this.serverUrlValue);\r\n\r\n  }\r\n  @Input()        // set the endpoint And source\r\n  public set addEndpoint(addEndpointVal: any) {\r\n    this.addEndpointValue = addEndpointVal;\r\n    // console.log(this.addEndpointValue)\r\n  }\r\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\r\n\r\n\r\n  public durationInSeconds: any = 10;\r\n\r\n  public newsLatterForm: FormGroup;\r\n  constructor(public fb: FormBuilder, public apiService: ApiService, private _snackBar: MatSnackBar, public dialog: MatDialog) {\r\n    // this.newsLatterForm = this.fb.group({\r\n    //   fullname: ['', Validators.required],\r\n    //   phone: ['', Validators.required],\r\n    //   company: ['', Validators.required],\r\n    //   email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])]\r\n    // });\r\n\r\n\r\n    // setInterval(()=> {\r\n    //   this.openSnackBar(); },4000); \r\n    \r\n  }\r\n\r\n  // openSnackBar() {\r\n  //   this._snackBar.openFromComponent(NewsTitleComponent, {\r\n  //     duration: this.durationInSeconds * 1000,\r\n  //   });\r\n  // }\r\n\r\n\r\n  ngOnInit() {\r\n    \r\n    setTimeout(() => {\r\n      this.openDialog();      \r\n    }, 500);\r\n   \r\n    \r\n  }\r\n\r\n  // newsLatterFormSubmit() {\r\n  //   for (const key in this.newsLatterForm.controls) {\r\n  //     this.newsLatterForm.controls[key].markAsTouched();\r\n  //   }\r\n  //   if (this.newsLatterForm.valid) {\r\n  //     console.log(this.newsLatterForm.value);\r\n  //     let data: any = {\r\n  //       'data': this.newsLatterForm.value,\r\n  //       \"source\": this.addEndpointValue.source\r\n  //     };\r\n  //     this.apiService.addData(data).subscribe((responce) => {\r\n  //       console.log(responce);\r\n  //       let result: any = {};\r\n  //       result = responce;\r\n  //       if (result.status == \"success\") {\r\n  //         this.formDirective.resetForm();\r\n  //       }\r\n  //     })\r\n  //   }\r\n\r\n  // }\r\n\r\n  // inputUntouched(val: any) {\r\n  //   console.log('ok----');\r\n  //   this.newsLatterForm.controls[val].markAsUntouched();\r\n  // }\r\n\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(modalData, {\r\n      // width: '250px',\r\n      data: {\r\n\r\n        addEndpointValue: this.addEndpointValue,\r\n        serverUrlValue: this.serverUrlValue,\r\n        formTitleValue:this.formTitleValue,\r\n        logoValue:this.logoValue\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      console.log(result);\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'modalData',\r\n  templateUrl:'./news-title.component.html',\r\n  // templateUrl: './modale.html',\r\n  styleUrls: ['./news-title.component.css']\r\n})\r\nexport class modalData implements OnInit {\r\n\r\n  public newsLatterForm: FormGroup;\r\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<modalData>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\r\n    public apiService: ApiService, public fb: FormBuilder) {\r\n\r\n      // console.log(data);\r\n    this.newsLatterForm = this.fb.group({\r\n      fullname: ['', Validators.required],\r\n      phone: ['', Validators.required],\r\n      company: ['', Validators.required],\r\n      email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.apiService.clearServerUrl();       //  Clear the server url\r\n    setTimeout(() => {\r\n      this.apiService.setServerUrl(this.data.serverUrlValue);        //  set the server url\r\n    }, 50);\r\n    // console.log(this.serverURL);\r\n\r\n\r\n    this.apiService.clearaddEndpoint();       //  Clear the endpoint\r\n    setTimeout(() => {\r\n      this.apiService.setaddEndpoint(this.data.addEndpointValue.endpoint);   //  set the endpoint\r\n    }, 50);\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  newsLatterFormSubmit() {\r\n    console.log(this.newsLatterForm.value);\r\n    for (const key in this.newsLatterForm.controls) {\r\n      this.newsLatterForm.controls[key].markAsTouched();\r\n    }\r\n    if (this.newsLatterForm.valid) {\r\n      console.log(this.newsLatterForm.value);\r\n      let data: any = {\r\n        'data': this.newsLatterForm.value,\r\n        \"source\": this.data.addEndpointValue.source\r\n      };\r\n      this.apiService.addData(data).subscribe((responce) => {\r\n        console.log(responce);\r\n        let result: any = {};\r\n        result = responce;\r\n        if (result.status == \"success\") {\r\n          this.formDirective.resetForm();\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n\r\n  inputUntouched(val: any) {\r\n    console.log('ok----');\r\n    this.newsLatterForm.controls[val].markAsUntouched();\r\n  }\r\n\r\n}\r\n\r\n","import {NgModule} from '@angular/core';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\n\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n  ]\r\n})\r\nexport class DemoMaterialModule {}\r\n\r\n\r\n/**  Copyright 2019 Google Inc. All Rights Reserved.\r\n Use of this source code is governed by an MIT-style license that\r\n can be found in the LICENSE file at http://angular.io/license */\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'lib-listing-newsletter',\r\n  templateUrl: './listing-newsletter.component.html',\r\n  styleUrls: ['./listing-newsletter.component.css']\r\n})\r\nexport class ListingNewsletterComponent implements OnInit {\r\n\r\n  // ========================================declarations=====================================\r\n  public newsLetterListConfig: any;\r\n  public loader: boolean = true;\r\n  // =========================================================================================\r\n\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  // ================================================Input For Lib Listing================================\r\n  @Input()\r\n  set config(receivedData: any) {\r\n    this.newsLetterListConfig = {\r\n      apiUrl: receivedData.apiBaseUrl,\r\n      listEndPoint: receivedData.listEndPoint,\r\n      datasource: receivedData.datasource,\r\n      tableName: receivedData.tableName,\r\n      listArray_skip: [\"_id\", \"userId\", \"created_at\", \"id\", \"updated_at\", \"image\"],\r\n      listArray_modify_header: { \"fullname\": \"Full Name\", \"phone\": \"Phone\", \"company\": \"Company\", \"email\": \"Email\" },\r\n      admintablenameTableName: \"admin\",\r\n      statusarr: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }],\r\n      updateurl: receivedData.updateEndpoint,\r\n      editUrl: receivedData.editUrl,\r\n      jwtToken: receivedData.jwtToken,\r\n      deleteEndPoint: receivedData.deleteEndPoint,\r\n      view: receivedData.view,\r\n      search_settings: {\r\n        textsearch: [{ label: \"Search by customer name...\", field: 'fullname' }],\r\n        search: [{ label: \"email\", field: 'email' }],\r\n        //  search:[{label:\"Search By autocomplete\",field:'fullname'}]   //autocomplete field//\r\n      }\r\n\r\n    }\r\n    this.loader = false;\r\n  }\r\n  // ====================================================================================================\r\n\r\n}\r\n","import { Component, OnInit, Input, Inject } from '@angular/core';\r\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NewsTitleService } from '../../../news-title.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nexport interface DialogData {\r\n  msg: string;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'lib-add-edit-subcategory',\r\n  templateUrl: './add-edit-subcategory.component.html',\r\n  styleUrls: ['./add-edit-subcategory.component.css']\r\n})\r\nexport class AddEditSubcategoryComponent implements OnInit {\r\n\r\n  // ====================declarations==================\r\n  buttonText: any = \"SUBMIT\";\r\n  header_name: any = \"Add Subscription Category\"\r\n  subscriptionCatForm: FormGroup;\r\n  configData: any;\r\n  successMessage: any = \"Submitted Successfully!!!\"\r\n  dialogRef: any;\r\n  // ==================================================\r\n\r\n\r\n\r\n  @Input()\r\n  set config(getConfig: any) {\r\n    this.configData = getConfig;\r\n  }\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder, private newsletterService: NewsTitleService,\r\n    private router: Router ,  public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    //generating the form\r\n    this.generateForm();\r\n\r\n\r\n    // --------------------------------checking the cases------------------------ \r\n    switch (this.configData.action) {\r\n      case 'add':\r\n        /* Button text */\r\n\r\n        break;\r\n      case 'edit':\r\n        /* Button text */\r\n        this.buttonText = \"UPDATE\";\r\n        this.successMessage = \"One row updated\";\r\n        this.setDefaultValue(this.configData.defaultData);\r\n        this.header_name = \"EDIT\";\r\n        break;\r\n    }\r\n    // --------------------------------------------------------------------------\r\n  }\r\n\r\n\r\n  // =========================================MODAL functions==========================================\r\n  // openDialog(x: any): void {\r\n  //   this.dialogRef = this.dialog.open(Modal, {\r\n  //     width: '250px',\r\n  //     data: { msg: x }\r\n  //   });\r\n\r\n  //   this.dialogRef.afterClosed().subscribe(result => {\r\n\r\n  //   });\r\n  // }\r\n  // =====================================================================================================\r\n\r\n  // ================================================Default value======================================\r\n  setDefaultValue(defaultValue) {\r\n    this.subscriptionCatForm.patchValue({\r\n      name: defaultValue.name,\r\n      priority: defaultValue.priority,\r\n      status: defaultValue.status,\r\n\r\n    });\r\n\r\n  }\r\n  // ==================================================================================================\r\n\r\n\r\n  // ======================form generation=====================\r\n  generateForm() {\r\n    this.subscriptionCatForm = this.formBuilder.group({\r\n      name: [],\r\n      priority: [],\r\n      status: []\r\n    });\r\n  }\r\n  // ==========================================================\r\n\r\n\r\n  // =========================SUBMIT FUNCTION======================\r\n  onSubmit() {\r\n\r\n    /* stop here if form is invalid */\r\n    if (this.subscriptionCatForm.invalid) {\r\n      return;\r\n    } else {\r\n      if (this.subscriptionCatForm.value.status) {\r\n        this.subscriptionCatForm.value.status = parseInt(\"1\");\r\n      } else {\r\n        this.subscriptionCatForm.value.status = parseInt(\"0\");;\r\n      }\r\n\r\n      /* start process to submited data */\r\n      let postData: any = {\r\n        source: this.configData.source,\r\n        data: Object.assign(this.subscriptionCatForm.value, this.configData.condition)\r\n      };\r\n      this.newsletterService.addData(this.configData.endpoint, postData).subscribe((response: any) => {\r\n        if (response.status == \"success\") {\r\n          \r\n          // this.openDialog(this.successMessage);\r\n          // setTimeout(() => {\r\n          //   this.dialogRef.close();\r\n          // }, 2000);\r\n          this.router.navigate([this.configData.callBack]);\r\n        } else {\r\n          alert(\"Some error occurred. Please try angain.\");\r\n        }\r\n      }, (error) => {\r\n        alert(\"Some error occurred. Please try angain.\");\r\n      });\r\n    }\r\n  }\r\n  // ==============================================================\r\n}\r\n\r\n\r\n\r\n// ============================================MODAL COMPONENT===========================================\r\n// @Component({\r\n//   selector: 'app-modal',\r\n//   templateUrl: 'modal.html',\r\n// })\r\n// export class Modal {\r\n\r\n//   constructor(\r\n//     public dialogRef: MatDialogRef<Modal>,\r\n//     @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\r\n\r\n//   onNoClick(): void {\r\n//     this.dialogRef.close();\r\n//   }\r\n\r\n// }\r\n// ======================================================================================================\r\n","import { Component, OnInit ,Input} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-listing-subcategory',\r\n  templateUrl: './listing-subcategory.component.html',\r\n  styleUrls: ['./listing-subcategory.component.css']\r\n})\r\nexport class ListingSubcategoryComponent implements OnInit {\r\n// ==============================================declaration============================================\r\npublic SubsCatListConfig: any;\r\npublic loader: boolean = true;\r\n// =====================================================================================================\r\n\r\n\r\n\r\n\r\n// ================================================Input For Lib Listing================================\r\n@Input()\r\nset config(receivedData: any) {\r\n \r\n  this.SubsCatListConfig = {\r\n    apiUrl: receivedData.apiBaseUrl,\r\n    listEndPoint: receivedData.listEndPoint,\r\n    datasource: receivedData.datasource,\r\n    tableName: receivedData.tableName,\r\n    listArray_skip: [\"_id\", \"userId\", \"created_at\", \"id\", \"updated_at\",\"image\"],\r\n    listArray_modify_header: { \"name\": \"Name\", \"priority\": \"Priority\", \"status\": \"Status\" ,\"date_added\":\"Date\"},\r\n    admintablenameTableName: \"admin\",\r\n    statusarr: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }],\r\n    updateurl: receivedData.updateEndpoint,\r\n    editUrl: receivedData.editUrl,\r\n    jwtToken: receivedData.jwtToken,\r\n    deleteEndPoint: receivedData.deleteEndPoint,\r\n    view: receivedData.view,\r\n    search_settings:{\r\n      textsearch: [{ label: \"name...\", field: 'name' }],\r\n      selectsearch: [{ label: 'Search By Status', field: 'status', values: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }] }],\r\n    },\r\n     /*Showing Image in the Modal*/\r\n     pendingmodelapplicationarray_detail_datatype: [{\r\n      key: \"image\",\r\n      value: 'image',\r\n      fileurl: 'https://s3.us-east-2.amazonaws.com/crmfiles.influxhostserver/testimonial/'             // Image path \r\n    }],\r\n  }\r\n  this.loader = false;\r\n}\r\n// ====================================================================================================\r\n\r\nconstructor() { }\r\n\r\nngOnInit() {\r\n}\r\n\r\n}\r\n\r\n\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { NewsTitleComponent, modalData } from './news-title.component';\r\nimport { DemoMaterialModule } from './material-module';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ApiService } from './api.service';\r\nimport { ListingNewsletterComponent } from './Components/listing-newsletter/listing-newsletter.component';\r\nimport { ListingModule } from 'listing-angular7';\r\nimport { AddEditSubcategoryComponent } from './Components/subscriptioncategory/add-edit-subcategory/add-edit-subcategory.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ListingSubcategoryComponent } from './Components/subscriptioncategory/listing-subcategory/listing-subcategory.component';\r\n\r\n@NgModule({\r\n  declarations: [NewsTitleComponent, modalData, ListingNewsletterComponent, AddEditSubcategoryComponent, ListingSubcategoryComponent],\r\n  imports: [\r\n    DemoMaterialModule,\r\n    ReactiveFormsModule,FormsModule,\r\n    BrowserAnimationsModule,\r\n    CommonModule,\r\n    ListingModule,\r\n    RouterModule,\r\n    HttpClientModule\r\n  ],\r\n  exports: [NewsTitleComponent,ListingNewsletterComponent,AddEditSubcategoryComponent,ListingSubcategoryComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  providers: [ApiService],\r\n  entryComponents:[NewsTitleComponent, modalData]\r\n})\r\nexport class NewsTitleModule { }\r\n\r\n\r\n\r\n"]}