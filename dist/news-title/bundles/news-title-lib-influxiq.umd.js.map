{"version":3,"file":"news-title-lib-influxiq.umd.js.map","sources":["ng://news-title-lib-influxiq/lib/news-title.service.ts","ng://news-title-lib-influxiq/lib/api.service.ts","ng://news-title-lib-influxiq/lib/news-title.component.ts","ng://news-title-lib-influxiq/lib/material-module.ts","ng://news-title-lib-influxiq/lib/Components/listing-newsletter/listing-newsletter.component.ts","ng://news-title-lib-influxiq/lib/Components/subscriptioncategory/add-edit-subcategory/add-edit-subcategory.component.ts","ng://news-title-lib-influxiq/lib/Components/subscriptioncategory/listing-subcategory/listing-subcategory.component.ts","ng://news-title-lib-influxiq/lib/Components/add-edit-subscriptiongroup/add-edit-subscriptiongroup.component.ts","ng://news-title-lib-influxiq/lib/Components/newsletter/add-edit-newsletterlib/add-edit-newsletterlib.component.ts","ng://news-title-lib-influxiq/lib/Components/newsletter/listing-newsletterlib/listing-newsletterlib.component.ts","ng://news-title-lib-influxiq/lib/Components/senderslist/add-edit-sender/add-edit-sender.component.ts","ng://news-title-lib-influxiq/lib/Components/senderslist/listing-sender/listing-sender.component.ts","ng://news-title-lib-influxiq/lib/Components/testemails/add-edit-testemaillib/add-edit-testemaillib.component.ts","ng://news-title-lib-influxiq/lib/Components/testemails/listing-testemaillib/listing-testemaillib.component.ts","ng://news-title-lib-influxiq/lib/news-title.module.ts"],"sourcesContent":["\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpClientModule } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { CookieService } from 'ngx-cookie-service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NewsTitleService {\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress: any = [];\n  public uploadtype;\n  public uploaderror: any = '';\n  public accesstoken: any = this.cookieService.get('jwtToken');;\n  public fileservername: any = [];\n  public serverUrl: any = '';\n  public addendpointUrl: any;\n  public updateendpointUrl: any;\n  public deletesingle_endpointUrl: any;\n  public updatestatus_single_endpointUrl: any;\n  public deletemultiple_endpointUrl: any;\n  public updatestatus_multiple_endpointUrl: any;\n  public getdata_endpointUrl: any = 'datalist';\n\n  constructor(private _http: HttpClient, private _authHttp: HttpClient,private cookieService : CookieService) { }\n\n  isTokenExpired() {\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n  }\n\n  addData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  getData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteSingleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteMultipleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForSingleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForMultipleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint + 'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  CustomRequest(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n}\n","import { ElementRef, EventEmitter, Injectable, Input, ViewChild } from '@angular/core';\nimport { switchMap, map, takeWhile } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n// for setting observables to get serverurl and endpointurl from app\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport{CookieService} from 'ngx-cookie-service';\n\n\n@Injectable({   \n  providedIn: 'root'\n})\nexport class ApiService {\n\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress: any = [];\n  public uploadtype;\n  public uploaderror: any = '';\n  public accesstoken:any=this.cookieService.get('jwtToken');\n  // public accesstoken:any='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIiLCJleHAiOjE1NjgzNTgyMTAsImlhdCI6MTU2ODI3MTgxMH0.2ltvxVKwfX1uwMOwQ2Zzgp1K2jiaCDj051Wyho0Iw-Q';\n  fileservername: any = [];\n  serverUrl: any;\n  addendpointUrl: any;\n  uploadEndpointUrl:any; //souresh\n  updateendpointUrl: any;\n  deletesingle_endpointUrl: any;\n  updatestatus_single_endpointUrl: any;\n  deletemultiple_endpointUrl: any;\n  updatestatus_multiple_endpointUrl: any;\n  getdata_endpointUrl: any;\n  private subjectForServerUrl = new Subject<any>();\n  private subjectForaddEndpointUrl = new Subject<any>();\n  private subjectForuploadEndpointUrl = new Subject<any>();  //added by souresh\n  private subjectForupdateEndpointUrl = new Subject<any>();\n  private subjectFordeletesingleEndpointUrl = new Subject<any>();\n  private subjectForupdatestatusSingleEndpointUrl = new Subject<any>();\n  private subjectForGetdataEndpointUrl = new Subject<any>();\n  public subscriptionServer: Subscription;\n  public subscriptionaddEndpoint: Subscription;\n  public subscriptionuploadEndpoint: Subscription;   //added by souresh\n  public subscriptionupdateEndpoint: Subscription;\n  public subscriptiondeletesingleEndpoint: Subscription;\n  public subscriptionupdatestatusSingleEndpoint: Subscription;\n  public subscriptionGetdataEndpoint: Subscription;\n\n  constructor(private _http: HttpClient,\n    private _authHttp: HttpClient,private cookieService :CookieService) {\n    this.subscriptionServer = this.getServerUrl().subscribe(message => {\n     let result: any;\n      result = message;\n      if (result != null) {\n        this.serverUrl = result;\n      } else {\n        this.serverUrl = null;\n      }\n    });\n    this.subscriptionaddEndpoint = this.getaddEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.addendpointUrl = result;\n      } else {\n        this.addendpointUrl = null;\n      }\n    });\n    /*********added by souresh***********/\n    this.subscriptionuploadEndpoint=this.getuploadEndpoint().subscribe(message=>{\n      let result:any;\n      result=message;\n        if(result!=null){\n          this.uploadEndpointUrl = result;\n        } else{\n          this.uploadEndpointUrl = null;\n        }\n    })\n    /************souresh end here**************/\n    this.subscriptionupdateEndpoint = this.getupdateEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.updateendpointUrl = result;\n      } else {\n        this.updateendpointUrl = null;\n      }\n    });\n    this.subscriptiondeletesingleEndpoint = this.getdeletesingleEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.deletesingle_endpointUrl = result;\n      } else {\n        this.deletesingle_endpointUrl = null;\n      }\n    });\n    this.subscriptionupdatestatusSingleEndpoint = this.getupdatestatus_singleEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.updatestatus_single_endpointUrl = result;\n      } else {\n        this.updatestatus_single_endpointUrl = null;\n      }\n    });\n    this.subscriptionGetdataEndpoint = this.getdataEndpoint().subscribe(message => {\n      let result: any;\n      result = message;\n      if (result != null) {\n        this.getdata_endpointUrl = result;\n      } else {\n        this.getdata_endpointUrl = null;\n      }\n    });\n\n    \n  }\n\n  setServerUrl(value: any) {\n    this.subjectForServerUrl.next(value);\n  }\n  public clearServerUrl() {\n    this.subjectForServerUrl.next(null);\n  }\n  public getServerUrl(): Observable<any> {\n    return this.subjectForServerUrl.asObservable();\n  }\n\n  setaddEndpoint(value: any) {\n    this.subjectForaddEndpointUrl.next(value);\n  }\n  public clearaddEndpoint() {\n    this.subjectForaddEndpointUrl.next(null);\n  }\n  public getaddEndpoint(): Observable<any> {\n    return this.subjectForaddEndpointUrl.asObservable();\n  }\n/*****added by souresh******/\n  setuploadEndpont(value:any){\n    this.subjectForuploadEndpointUrl.next(value);\n  }\n  public clearuploadEndpoint(){\n    this.subjectForuploadEndpointUrl.next(null);\n  }\n  public getuploadEndpoint(): Observable <any> {\n    return this.subjectForuploadEndpointUrl.asObservable();\n  }\n   /********souresh end here********/\n\n\n  setupdateEndpoint(value: any) {\n    this.subjectForupdateEndpointUrl.next(value);\n  }\n  public clearupdateEndpoint() {\n    this.subjectForupdateEndpointUrl.next(null);\n  }\n  public getupdateEndpoint(): Observable<any> {\n    return this.subjectForupdateEndpointUrl.asObservable();\n  }\n\n  setdeletesingleEndpoint(value: any) {\n    this.subjectFordeletesingleEndpointUrl.next(value);\n  }\n  public cleardeletesingleEndpoint() {\n    this.subjectFordeletesingleEndpointUrl.next(null);\n  }\n  public getdeletesingleEndpoint(): Observable<any> {\n    return this.subjectFordeletesingleEndpointUrl.asObservable();\n  }\n\n  setupdatestatus_singleEndpoint(value: any) {\n    this.subjectForupdatestatusSingleEndpointUrl.next(value);\n  }\n  public clearupdatestatus_singleEndpoint() {\n    this.subjectForupdatestatusSingleEndpointUrl.next(null);\n  }\n  public getupdatestatus_singleEndpoint(): Observable<any> {\n    return this.subjectForupdatestatusSingleEndpointUrl.asObservable();\n  }\n\n  setgetdataEndpoint(value: any) {\n    this.subjectForGetdataEndpointUrl.next(value);\n  }\n  public cleargetdataEndpoint() {\n    this.subjectForGetdataEndpointUrl.next(null);\n  }\n  public getdataEndpoint(): Observable<any> {\n    return this.subjectForGetdataEndpointUrl.asObservable();\n  }\n\n\n\n  isTokenExpired() {\n\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n  }\n\n  addData(requestdata: any) {\n    console.log('in adddata apiservice');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken          //hard code written Authorization(temp)\n      })\n    };\n\n    console.log('httpoptions',httpOptions,this.serverUrl,requestdata);\n    var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n  /*******added by souresh************/\n  uploadFile(requestdata:any){\n    const httpOptions={\n        headers: new HttpHeaders({\n          'Content-Type':'application/json',\n          'Authorization':this.accesstoken          //hard code written Authorization(temp)\n        })\n    };\n    var result=this._http.post(this.serverUrl + this.uploadEndpointUrl,JSON.stringify(requestdata),httpOptions).pipe(map(res=>res));\n    return result;\n  }\n  /*******souresh end here********/\n  UpdateData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken          //hard code written Authorization(temp)\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.updateendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  getData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.getdata_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n/*************** Added by himadri start here ***************/ \n  addLogin(requestdata: any) {\n    console.log('in addLogin apiservice');\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n        // 'Authorization': this.accesstoken          //hard code written Authorization(temp)\n      })\n    };\n\n    console.log(this.serverUrl,requestdata);\n    var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n  /*************** Added by himadri end here ***************/ \n\n/*************** Added by himadri start here ***************/ \nforgetPassword(requestdata: any) {\n  console.log('in forgetPassword apiservice');\n  const httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n      // 'Authorization': this.accesstoken          //hard code written Authorization(temp)\n    })\n  };\n\n  console.log(this.serverUrl,requestdata);\n  var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n  return result;\n}\n/*************** Added by himadri end here ***************/ \n\n\n  deleteSingleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.deletesingle_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteMultipleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.deletesingle_endpointUrl+'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForSingleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.updatestatus_single_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForMultipleData(requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + this.updatestatus_single_endpointUrl+'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n  CustomRequest(requestdata: any, endpoint:any ) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl +endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import { Component, OnInit, Inject, Input, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormGroupDirective } from '@angular/forms';\nimport { ApiService } from './api.service';\nimport { MatSnackBar, MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material';\n\nexport interface DialogData {\n  formTitleValue: any;\n  serverUrlValue: any;\n  addEndpointValue: any;\n  logoValue:any;\n}\n\n\n\n@Component({\n  selector: 'lib-newsTitle',\n  // templateUrl:'./news-title.component.html',\n  template: ``,\n  styleUrls: ['./news-title.component.css']\n})\nexport class NewsTitleComponent implements OnInit {\n  public formTitleValue: any = '';\n  public serverUrlValue: any = '';\n  public addEndpointValue: any = '';\n  public logoValue: any='';\n\n  @Input()\n  set formTitle(formTitleVal: any) {\n    this.formTitleValue = formTitleVal;\n  }\n\n  @Input()\n  public set logo(v : string) {\n    this.logoValue = v;\n  }\n  \n\n  @Input()        // setting the server url from project\n  set serverUrl(serverUrlVal: any) {\n    this.serverUrlValue = (serverUrlVal) || '<no name set>';\n    this.serverUrlValue = serverUrlVal;\n    // console.log(\"======================\",this.serverUrlValue);\n\n  }\n  @Input()        // set the endpoint And source\n  public set addEndpoint(addEndpointVal: any) {\n    this.addEndpointValue = addEndpointVal;\n    // console.log(this.addEndpointValue)\n  }\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\n\n\n  public durationInSeconds: any = 10;\n\n  public newsLatterForm: FormGroup;\n  constructor(public fb: FormBuilder, public apiService: ApiService, private _snackBar: MatSnackBar, public dialog: MatDialog) {\n    // this.newsLatterForm = this.fb.group({\n    //   fullname: ['', Validators.required],\n    //   phone: ['', Validators.required],\n    //   company: ['', Validators.required],\n    //   email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])]\n    // });\n\n\n    // setInterval(()=> {\n    //   this.openSnackBar(); },4000); \n    \n  }\n\n  // openSnackBar() {\n  //   this._snackBar.openFromComponent(NewsTitleComponent, {\n  //     duration: this.durationInSeconds * 1000,\n  //   });\n  // }\n\n\n  ngOnInit() {\n    \n    setTimeout(() => {\n      this.openDialog();      \n    }, 500);\n   \n    \n  }\n\n  // newsLatterFormSubmit() {\n  //   for (const key in this.newsLatterForm.controls) {\n  //     this.newsLatterForm.controls[key].markAsTouched();\n  //   }\n  //   if (this.newsLatterForm.valid) {\n  //     console.log(this.newsLatterForm.value);\n  //     let data: any = {\n  //       'data': this.newsLatterForm.value,\n  //       \"source\": this.addEndpointValue.source\n  //     };\n  //     this.apiService.addData(data).subscribe((responce) => {\n  //       console.log(responce);\n  //       let result: any = {};\n  //       result = responce;\n  //       if (result.status == \"success\") {\n  //         this.formDirective.resetForm();\n  //       }\n  //     })\n  //   }\n\n  // }\n\n  // inputUntouched(val: any) {\n  //   console.log('ok----');\n  //   this.newsLatterForm.controls[val].markAsUntouched();\n  // }\n\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(modalData, {\n      // width: '250px',\n      data: {\n\n        addEndpointValue: this.addEndpointValue,\n        serverUrlValue: this.serverUrlValue,\n        formTitleValue:this.formTitleValue,\n        logoValue:this.logoValue\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      // console.log('The dialog was closed');\n      // console.log(result);\n    });\n  }\n\n\n\n\n}\n\n\n@Component({\n  selector: 'modalData',\n  templateUrl:'./news-title.component.html',\n  // templateUrl: './modale.html',\n  styleUrls: ['./news-title.component.css']\n})\nexport class modalData implements OnInit {\n\n  public newsLatterForm: FormGroup;\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\n\n  constructor(\n    public dialogRef: MatDialogRef<modalData>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    public apiService: ApiService, public fb: FormBuilder) {\n\n      // console.log(data);\n    this.newsLatterForm = this.fb.group({\n      fullname: ['', Validators.required],\n      group: [0,],\n      phone: ['', Validators.required],\n      company: ['', Validators.required],\n      email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])]\n    });\n  }\n\n  ngOnInit() {\n    this.apiService.clearServerUrl();       //  Clear the server url\n    setTimeout(() => {\n      this.apiService.setServerUrl(this.data.serverUrlValue);        //  set the server url\n    }, 50);\n    // console.log(\"+++++++++++++++\",this.data.serverUrlValue);\n\n\n    this.apiService.clearaddEndpoint();       //  Clear the endpoint\n    setTimeout(() => {\n      this.apiService.setaddEndpoint(this.data.addEndpointValue.endpoint);   //  set the endpoint\n    }, 50);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  newsLatterFormSubmit() {\n    console.log(this.newsLatterForm.value);\n    for (const key in this.newsLatterForm.controls) {\n      this.newsLatterForm.controls[key].markAsTouched();\n    }\n    if (this.newsLatterForm.valid) {\n      console.log(this.newsLatterForm.value);\n      let data: any = {\n        'data': this.newsLatterForm.value,\n        \"source\": this.data.addEndpointValue.source\n      };\n      this.apiService.addData(data).subscribe((responce) => {\n        console.log(responce);\n        let result: any = {};\n        result = responce;\n        if (result.status == \"success\") {\n          this.formDirective.resetForm();\n        }\n      })\n    }\n  }\n\n\n\n  inputUntouched(val: any) {\n    // console.log('ok---?-');\n    this.newsLatterForm.controls[val].markAsUntouched();\n  }\n\n}\n\n","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n Use of this source code is governed by an MIT-style license that\n can be found in the LICENSE file at http://angular.io/license */\n","import { Component, OnInit, Input } from '@angular/core';\n\n\n@Component({\n  selector: 'lib-listing-newsletter',\n  templateUrl: './listing-newsletter.component.html',\n  styleUrls: ['./listing-newsletter.component.css']\n})\nexport class ListingNewsletterComponent implements OnInit {\n\n  // ========================================declarations=====================================\n  public newsLetterListConfig: any;\n  public loader: boolean = true;\n  // =========================================================================================\n\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n\n  // ================================================Input For Lib Listing================================\n  @Input()\n  set config(receivedData: any) {\n    this.newsLetterListConfig = {\n      apiUrl: receivedData.apiBaseUrl,\n      listEndPoint: receivedData.listEndPoint,\n      datasource: receivedData.datasource,\n      tableName: receivedData.tableName,\n      listArray_skip: [\"_id\", \"userId\", \"created_at\", \"id\", \"updated_at\", \"image\",\"fullname_search\",\n      \"group_name_search\"],\n      listArray_modify_header: { \"fullname\": \"Full Name\", \"phone\": \"Phone\", \"company\": \"Company\", \"email\": \"Email\",\"group_name\":\"Group Name\",\"status\":\"Status\",\"date_added\":\"Date\" ,\"date added\":\"Date\",\n      \"group name\":\"Group Name\"},\n      admintablenameTableName: \"admin\",\n      status: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }],\n      updateurl: receivedData.updateEndpoint,\n      editUrl: receivedData.editUrl,\n      jwtToken: receivedData.jwtToken,\n      deleteEndPoint: receivedData.deleteEndPoint,\n      view: receivedData.view,\n      search_settings: {\n        selectsearch: [{ label: 'Search By Status', field: 'status', values: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }] }],\n        textsearch: [{ label: \"Search Name\", field: 'fullname_search' },{ label: \"Search By Email\", field: 'email' },{ label: \"Search By Group Name\", field: 'group_name_search' }],\n       \n      },\n      detail_header:['_id','fullname_search']\n    }\n    this.loader = false;\n  }\n  // ====================================================================================================\n\n}\n","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NewsTitleService } from '../../../news-title.service';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nexport interface DialogData {\n  msg: string;\n}\n\n\n@Component({\n  selector: 'lib-add-edit-subcategory',\n  templateUrl: './add-edit-subcategory.component.html',\n  styleUrls: ['./add-edit-subcategory.component.css']\n})\nexport class AddEditSubcategoryComponent implements OnInit {\n\n  // ====================declarations==================\n  buttonText: any = \"SUBMIT\";\n  header_name: any = \"Add Subscription Category\"\n  subscriptionCatForm: FormGroup;\n  configData: any;\n  successMessage: any = \"Submitted Successfully!!!\"\n  dialogRef: any;\n  public subscriber_name_array:any;\n  // ==================================================\n\n\n\n  @Input()\n  set config(getConfig: any) {\n    this.configData = getConfig;\n  }\n\n\n  constructor(private formBuilder: FormBuilder, private newsletterService: NewsTitleService,\n    private router: Router ,  public dialog: MatDialog) { }\n\n  ngOnInit() {\n    //generating the form\n    this.generateForm();\n    this.getSubscriberList();\n\n\n    // --------------------------------checking the cases------------------------ \n    switch (this.configData.action) {\n      case 'add':\n        /* Button text */\n\n        break;\n      case 'edit':\n        /* Button text */\n        this.buttonText = \"UPDATE\";\n        this.successMessage = \"One row updated!!!\";\n        this.setDefaultValue(this.configData.defaultData);\n        this.header_name = \"EDIT\";\n        break;\n    }\n    // --------------------------------------------------------------------------\n  }\n\n\n\n  //get subscriber list\n  getSubscriberList() {\n    var data: any = { 'source': this.configData.subscriber_table_name };\n    this.newsletterService.getData(this.configData.endpoint2 + 'datalist', data).subscribe(response => {\n      let result: any;\n      result = response;\n      this.subscriber_name_array = result.res;\n      console.log(this.subscriber_name_array)\n    });\n  }\n\n\n  // =========================================MODAL functions==========================================\n  openDialog(x: any): void {\n    this.dialogRef = this.dialog.open(Modal, {\n      width: '250px',\n      data: { msg: x }\n    });\n\n    this.dialogRef.afterClosed().subscribe(result => {\n\n    });\n  }\n  // =====================================================================================================\n\n  // ================================================Default value======================================\n  setDefaultValue(defaultValue) {\n    this.subscriptionCatForm.patchValue({\n      name: defaultValue.name,\n      priority: defaultValue.priority,\n      status: defaultValue.status,\n      subscriber:defaultValue.subscriber\n    });\n\n  }\n  // ==================================================================================================\n\n\n\n  /** blur function **/\n  inputBlur(val: any) {\n    this.subscriptionCatForm.controls[val].markAsUntouched();\n  }\n\n\n  // ======================form generation=====================\n  generateForm() {\n    this.subscriptionCatForm = this.formBuilder.group({\n      name: ['',Validators.required],\n      priority: ['',Validators.required],\n      status: [],\n      subscriber:[]\n    });\n  }\n  // ==========================================================\n\n\n  // =========================SUBMIT FUNCTION======================\n  onSubmit() {\n\n     /** marking as untouched **/\n     for (let x in this.subscriptionCatForm.controls) {\n      this.subscriptionCatForm.controls[x].markAsTouched();\n    }\n\n\n    /* stop here if form is invalid */\n    if (this.subscriptionCatForm.invalid) {\n      return;\n    } else {\n      if (this.subscriptionCatForm.value.status) {\n        this.subscriptionCatForm.value.status = parseInt(\"1\");\n      } else {\n        this.subscriptionCatForm.value.status = parseInt(\"0\");;\n      }\n\n      /* start process to submited data */\n      let postData: any = {\n        source: this.configData.source,\n        data: Object.assign(this.subscriptionCatForm.value, this.configData.condition)\n      };\n      this.newsletterService.addData(this.configData.endpoint, postData).subscribe((response: any) => {\n        if (response.status == \"success\") {\n          \n          this.openDialog(this.successMessage);\n          setTimeout(() => {\n            this.dialogRef.close();\n          }, 2000);\n          this.router.navigate([this.configData.callBack]);\n        } else {\n          alert(\"Some error occurred. Please try angain.\");\n        }\n      }, (error) => {\n        alert(\"Some error occurred. Please try angain.\");\n      });\n    }\n  }\n  // ==============================================================\n}\n\n\n\n// ============================================MODAL COMPONENT===========================================\n@Component({\n  selector: 'app-modal',\n  templateUrl: 'modal.html',\n})\nexport class Modal {\n\n  constructor(\n    public dialogRef: MatDialogRef<Modal>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n// ======================================================================================================\n","import { Component, OnInit ,Input} from '@angular/core';\n\n@Component({\n  selector: 'lib-listing-subcategory',\n  templateUrl: './listing-subcategory.component.html',\n  styleUrls: ['./listing-subcategory.component.css']\n})\nexport class ListingSubcategoryComponent implements OnInit {\n// ==============================================declaration============================================\npublic SubsCatListConfig: any;\npublic loader: boolean = true;\n// =====================================================================================================\n\n\n\n\n// ================================================Input For Lib Listing================================\n@Input()\nset config(receivedData: any) {\n \n  this.SubsCatListConfig = {\n    apiUrl: receivedData.apiBaseUrl,\n    listEndPoint: receivedData.listEndPoint,\n    datasource: receivedData.datasource,\n    tableName: receivedData.tableName,\n    listArray_skip: [\"_id\", \"userId\", \"created_at\", \"id\", \"updated_at\",\"image\",\"name_search\",\"sub_name_search\"],\n    listArray_modify_header: { \"name\": \"Name\", \"priority\": \"Priority\", \"status\": \"Status\" ,\"date_added\":\"Date\",\"date added\":\"Date\",\"subscriber_name\":\"Subscriber Name\",\"count\":\"Count\",\"subscriber name\":\"Subscriber Name\"},\n    admintablenameTableName: \"admin\",\n    statusarr: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }],\n    updateurl: receivedData.updateEndpoint,\n    editUrl: receivedData.editUrl,\n    jwtToken: receivedData.jwtToken,\n    deleteEndPoint: receivedData.deleteEndPoint,\n    view: receivedData.view,\n    search_settings:{\n      textsearch: [{ label: \"Search By Name\", field: 'name_search' },{ label: \"Search By Subscriber Name\", field: 'sub_name_search' }],\n      selectsearch: [{ label: 'Search By Status', field: 'status', values: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }] }],\n    },\n     /*Showing Image in the Modal*/\n     pendingmodelapplicationarray_detail_datatype: [{\n      key: \"image\",\n      value: 'image',\n      fileurl: 'https://s3.us-east-2.amazonaws.com/crmfiles.influxhostserver/testimonial/'             // Image path \n    }],\n    detail_header:['_id','name_search']\n  }\n  this.loader = false;\n}\n// ====================================================================================================\n\nconstructor() { }\n\nngOnInit() {\n}\n\n}\n\n\n","import { Component, OnInit, Input, Inject,ViewChild,ElementRef } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder ,Validators} from '@angular/forms';\nimport { CookieService } from 'ngx-cookie-service';\nimport { NewsTitleService } from '../../news-title.service';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {MatAutocompleteSelectedEvent, MatChipInputEvent} from '@angular/material';\nimport {Observable} from 'rxjs';\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport {map, startWith} from 'rxjs/operators';\n\n\nexport interface DialogData {\n  msg: string;\n}\n\n\n@Component({\n  selector: 'lib-add-edit-subscriptiongroup',\n  templateUrl: './add-edit-subscriptiongroup.component.html',\n  styleUrls: ['./add-edit-subscriptiongroup.component.css']\n})\nexport class AddEditSubscriptiongroupComponent implements OnInit {\n\n\n  // =======================declaratiosn=====================\n  subGroupForm: FormGroup;\n  buttonText: any = \"SUBMIT\";\n  header_name: any = \"Add a group to subscriptions\";\n  configData: any;\n  groupname:any;\n\n  nameValForGroup:any='';\n  group_array: any;\n  dialogRef: any;\n  successMessage: any = \"Subscription Added Successfully..!!!\";\n  // ========================================================\n\n  filtered_group_array: Observable<any[]>;\n\n  // group = new FormControl();\n\n  visible: boolean = true;\n  selectable: boolean = true;\n  removable: boolean = true;\n  addOnBlur: boolean = false;\n\n\n  separatorKeysCodes = [ENTER, COMMA];\n\n  @ViewChild('fruitInput') groupInput: ElementRef;\n\n  constructor(private formBuilder: FormBuilder, private cookieService: CookieService,\n    private newsService: NewsTitleService, private router: Router, public dialog: MatDialog) {\n\n      // this.filtered_group_array = this.group.valueChanges.pipe(startWith(null),\n      //   map((item: any) => item ? this.filter(item) : this.nameValForGroup.slice()));\n\n        console.log('filtered_group_array--->',this.nameValForGroup)\n     }\n\n  ngOnInit() {\n\n    //generating the form\n    this.generateForm();\n\n    //getting the group\n    this.getGroup();\n\n    //Switch Case starts here\n\n    switch (this.configData.action) {\n      case 'add':\n        /* Button text */\n        this.buttonText = \"SUBMIT\";\n        this.header_name = \"Add a Group\";\n        break;\n      case 'edit':\n        /* Button text */\n        this.buttonText = \"UPDATE\";\n        this.successMessage = \"Subscription Updated Successfully..!!!\";\n        this.setDefaultValue(this.configData.defaultData);\n        this.header_name = \"Change/Remove Group\";\n        break;\n    }\n\n\n  }\n\n  @Input()\n  set config(getConfig: any) {\n    this.configData = getConfig;\n  }\n\n\n  // =====================generate form==============\n  generateForm() {\n    this.subGroupForm = this.formBuilder.group({\n      fullname: ['',[Validators.required]],\n      phone: ['',[Validators.required]],\n      email: ['',[Validators.required,Validators.email]],\n      company: ['',[Validators.required]],\n      group: [],\n      status:[]\n    });\n  }\n  // ================================================\n\n  // ================================================Default value======================================\n  setDefaultValue(defaultValue) {\n    this.subGroupForm.patchValue({\n      fullname: defaultValue.fullname,\n      phone: defaultValue.phone,\n      email: defaultValue.email,\n      company: defaultValue.company,\n      group: defaultValue.group,\n      status:defaultValue.status\n    });\n\n  }\n  // ==================================================================================================\n\n\n  // =========================================MODAL functions==========================================\n  openDialog(x: any): void {\n    this.dialogRef = this.dialog.open(Modal2, {\n      width: '250px',\n      data: { msg: x }\n    });\n\n    this.dialogRef.afterClosed().subscribe(result => {\n\n    });\n  }\n  // =====================================================================================================\n   /** blur function **/\n   inputBlur(val: any) {\n    this.subGroupForm.controls[val].markAsUntouched();\n  }\n\n  // ==========================================SUBMIT=================================================\n\n\n  onSubmit() {\n\n\n     /** marking as untouched **/\n     for (let x in this.subGroupForm.controls) {\n      this.subGroupForm.controls[x].markAsTouched();\n    }\n\n\n        /* stop here if form is invalid */\n  \n          if (this.subGroupForm.value.status) {\n            this.subGroupForm.value.status = parseInt(\"1\");\n          } else {\n            this.subGroupForm.value.status = parseInt(\"0\");;\n          }\n        \n\n    // if (this.subGroupForm.value.group == 0)\n    //   this.successMessage = \"Removed Group!!!\";    \n    /* stop here if form is invalid */\n    if (this.subGroupForm.invalid) {\n      return;\n    } else {\n\n      /* start process to submited data */\n      let postData: any = {\n        source: this.configData.source,\n        data: Object.assign(this.subGroupForm.value, this.configData.condition)\n      };\n      this.newsService.addData(this.configData.endpoint, postData).subscribe((response: any) => {\n        if (response.status == \"success\") {\n\n          this.openDialog(this.successMessage);\n          setTimeout(() => {\n            this.dialogRef.close();\n          }, 2000);\n          this.router.navigate([this.configData.callBack]);\n        } else {\n          alert(\"Some error occurred. Please try angain.\");\n        }\n      }, (error) => {\n        alert(\"Some error occurred. Please try angain.\");\n      });\n    }\n  }\n  // =================================================================================================\n\n  // Getting the parent category\n  getGroup() {\n    let postData: any = {\n      source: this.configData.groupData,\n      token: this.cookieService.get('jwtToken')\n\n    };\n    this.newsService.getData(this.configData.endpoint2 + 'datalist', postData).subscribe((response: any) => {\n      this.group_array = response.res;\n      console.log('>>>',this.group_array)\n\n \n    })\n  }\n\n\n\n  // mat chip use for listing \n\n  filter(name: any) {\n    this.nameValForGroup=this.group_array;\n    for(let i in this.group_array){\n      // console.log(this.group_array[i].name)\n     this.groupname=this.group_array[i].name;\n     return this.groupname.filter(item =>\n      item.toLowerCase().indexOf(name.toLowerCase()) === 0)\n\n    }\n    ;\n  }\n\n \n  add(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n\n    // Add our fruit\n    if ((value || '').trim()) {\n      this.nameValForGroup.push(value.trim());\n    }\n\n    // Reset the input value\n    if (input) {\n      input.value = '';\n    }\n\n    // this.group.setValue(null);\n  }\n\n  remove(item: any,index:any): void {\n    console.log('index-->',item,index)\n\n    this.nameValForGroup=this.group_array;\n    for(let i in this.group_array){\n      // console.log(this.group_array[i].name)\n     this.groupname=this.group_array[i].name;\n\n      if(this.group_array[i]._id == item){\n        this.group_array.splice(index,1);\n      }\n\n      // console.log('>>',this.groupname)\n    }\n\n    // const index = this.nameValForGroup.indexOf(item);\n\n    if (index >= 0) {\n    }\n  }\n\n  // filter(name: string) {\n  //   return this.group_array.filter(fruit =>\n  //       fruit.toLowerCase().indexOf(name.toLowerCase()) === 0);\n  // }\n\n  selected(event: MatAutocompleteSelectedEvent): void {\n    this.nameValForGroup.push(event.option.viewValue);\n    this.groupInput.nativeElement.value = '';\n    // this.group.setValue(null);\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n}\n\n\n// ============================================MODAL COMPONENT===========================================\n@Component({\n  selector: 'app-modal',\n  templateUrl: 'modal2.html',\n})\nexport class Modal2 {\n\n  constructor(\n    public dialogRef: MatDialogRef<Modal2>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n// ======================================================================================================\n","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { AmazingTimePickerService } from 'amazing-time-picker';\nimport { NewsTitleService } from '../../../news-title.service';\nimport { DatePipe } from '@angular/common';\nimport { CookieService } from 'ngx-cookie-service';\nimport { FormGroup, FormControl, FormArray, FormBuilder, Validators } from \"@angular/forms\";\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n\nexport interface DialogData {\n  msg: string;\n  test_mail: any;\n  title: any;\n  subject: any;\n  content: any;\n  testMail: any;\n  flag: any;\n\n\n\n}\n\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\n@Component({\n  selector: 'lib-add-edit-newsletterlib',\n  templateUrl: './add-edit-newsletterlib.component.html',\n  styleUrls: ['./add-edit-newsletterlib.component.css'],\n})\nexport class AddEditNewsletterlibComponent implements OnInit {\n\n\n  // =================declaration==================\n  public header_name: any = \"Newsletter\"\n  public buttonText: any = \"SAVE\";\n  public group_name_array: any = [];\n  public sender_name_array: any = [];\n  public test_mail: any;\n  public configData: any;\n  public time: any;\n  public cookieValue: any;\n  public newsForm: FormGroup;\n  public frequency_flag: boolean = false;\n  public days_array: any = [];\n  // public editorconfig: any = {};\n  days_json: any;\n  public message: string;\n  public tmp_date: any;\n  public false_count: number;\n  public dialogRef: any;\n  public share_with_group: any;\n  public automatic_newsletter_to: any;\n  public reply_address_to: any\n  public senders_address_to: any;\n  public reply_data:any;\n  public email_address:any;\n  public reply_address_id:any;\n\n\n  // ==============================================\n\n  /**ckeditor start here*/\n  // public Editor = ClassicEditor;  //for ckeditor\n  // editorConfig = {\n  //   placeholder: 'Content:',\n  // };\n  // public model = {\n  //   editorData: ''\n  // };\n  /**ckeditor end here*/\n\n\n  @Input()\n  set config(getConfig: any) {\n    this.configData = getConfig;\n  }\n\n\n\n  constructor(private atp: AmazingTimePickerService, private newsService: NewsTitleService,\n    public datepipe: DatePipe, public cookieService: CookieService, private formBuilder: FormBuilder,\n    public router: Router, private snackBar: MatSnackBar, public dialog: MatDialog) {\n\n\n    // this.editorconfig.extraAllowedContent = '*[class](*),span;ul;li;table;td;style;*[id];*(*);*{*}';\n\n  }\n\n  // unix_timestamp(t) {\n  //   var d = new Date(t * 1000),\t// Convert the passed timestamp to milliseconds\n  //     yyyy = d.getFullYear(),\n  //     mm = ('0' + (d.getMonth() + 1)).slice(-2),\t// Months are zero based. Add leading 0.\n  //     dd = ('0' + d.getDate()).slice(-2),\t\t\t// Add leading 0.\t\n  //     time;\n\n  //   // ie: 2013-02-18, 8:35 AM\t\n  //   time = mm + \"/\" + dd + \"/\" + yyyy;\n\n  //   return time;\n  // }\n\n  ngOnInit() {\n\n    this.weekdays();\n\n    this.getReplyAddress();\n\n\n    if (this.configData.action == 'add'){\n      this.time = this.datepipe.transform(new Date(), 'H:mm');\n    }\n\n    if (this.configData.action == 'edit'){\n      this.getReplyAddress();\n    }\n\n\n\n\n    //Calling the group name\n    this.getGroupName();\n\n    //Get sender's getGroupName\n    this.getSenderAddress();\n\n    //Getting the cookie value\n    this.cookieValue = this.cookieService.getAll();\n\n    //  calling the form generation \n    this.generateForm();\n\n    this.newsForm.value.cookiemail = this.cookieService.get('get_email');\n\n    /*Switch case*/\n    switch (this.configData.action) {\n      case 'add':\n        /* Button text */\n        this.buttonText = \"SUBMIT\";\n        this.header_name = \"Add a Newsletter\";\n        this.message = \"Newsletter Added Successfully!!!\";\n\n        break;\n      case 'edit':\n        this.days_json = null;\n        /* Button text */\n        this.buttonText = \"UPDATE\";\n        this.time = \"\";\n        this.message = \"Newsletter Information Updated!!!\";\n        // this.reply_address=this.reply_data[0].email;\n        if (this.configData.defaultData.newsfrequency == \"daily\")\n          this.frequency_flag = false;\n        else\n          this.frequency_flag = true;\n\n\n        setTimeout(() => {\n\n          this.setDefaultValue(this.configData.defaultData);\n        }, 1000);\n\n        if (this.configData.defaultData.days_of_weeks != null)\n          this.frequency_flag = true;\n\n\n        setTimeout(() => {\n          this.days_json = this.configData.defaultData.days_of_weeks;\n        }, 1000);\n\n        break;\n    }\n\n\n  }\n\n\n\n  weekdays() {\n\n    this.days_json = [\n      {\n        \"day\": \"Sunday\",\n        \"value\": 1,\n        isSelected: false\n      },\n      {\n        \"day\": \"Monday\",\n        \"value\": 2,\n        isSelected: false\n      },\n      {\n        \"day\": \"Tuesday\",\n        \"value\": 3,\n        isSelected: false\n      },\n      {\n        \"day\": \"Wednesday\",\n        \"value\": 4,\n        isSelected: false\n      },\n      {\n        \"day\": \"Thursday\",\n        \"value\": 5,\n        isSelected: true\n      },\n      {\n        \"day\": \"Friday\",\n        \"value\": 6,\n        isSelected: false\n      },\n      {\n        \"day\": \"Saturday\",\n        \"value\": 7,\n        isSelected: false\n      }\n    ];\n  }\n\n\n\n\n  /** mat snackbar **/\n  openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 3000,\n    });\n  }\n\n\n  /** opening up the time picker **/\n  open() {\n    const amazingTimePicker = this.atp.open();\n    amazingTimePicker.afterClose().subscribe(time => {\n    });\n  }\n\n\n  // getTestMail(){\n  //   var data1: any = { 'source': this.configData.test_mail_table };\n  //   this.newsService.getData(this.configData.endpoint2 + 'datalist', data1).subscribe(response => {\n  //     let result: any;\n  //     result = response;\n  //     this.test_mail = result.res;\n  //      console.log('+++',this.test_mail)\n  //     this.openDialog(this.newsForm.value,this.test_mail)\n  //   })\n  // }\n\n\n\n  /** open Modal **/\n  openDialog(x: any, y: any): void {\n    // console.log(y)\n\n    this.dialogRef = this.dialog.open(PREVIEW, {\n      panelClass:'newspreview-dialog',\n      data: {\n        msg: x,\n        test_mail: y,\n\n      }\n\n    });\n\n    this.dialogRef.afterClosed().subscribe(result => {\n\n      // console.log(result)\n\n\n      let mailData: any = {\n        \"title\": result.title,\n        \"subject\": result.subject,\n        \"description\": result.content,\n        \"testMail\": result.testMail\n      }\n\n      if (result.flag == \"yes\") {\n\n        let data1: any = {\n          source: this.configData.source_for_test_mail_add,\n          data: mailData\n        };\n        this.newsService.addData(this.configData.endpoint, data1).subscribe((response: any) => {\n          if (response.status == \"success\") {\n\n            this.openSnackBar('Email Send Successfully.','OK');\n            // this.dialogRef.close();\n          } else {\n            this.openSnackBar('Error Occure....!','');\n          }\n\n        });\n\n      }\n\n    });\n\n  }\n\n\n  /** preview all **/\n  preview_all() {\n\n  if(this.newsForm.value.content == '' || this.newsForm.value.newssubject == '' ) {\n      alert(\"Subject and Description field is requird for test email....!\")\n    } else {\n\n      var data1: any = { 'source': this.configData.test_mail_table };\n      this.newsService.getData(this.configData.endpoint2 + 'datalist', data1).subscribe(response => {\n        let result: any;\n        result = response;\n        this.test_mail = result.res;\n        this.openDialog((Object.values(this.newsForm.value)), (this.test_mail));\n        // console.log('+++', this.test_mail)\n      })\n      // this.openDialog(this.newsForm.value,this.test_mail)\n      // this.openDialog((Object.values(this.newsForm.value)),(this.test_mail));\n\n      // console.log(this.newsForm.value)\n    }\n\n\n  }\n\n\n  /*getting the group name*/\n  getGroupName() {\n    var data: any = { 'source': this.configData.group_table };\n    this.newsService.getData(this.configData.endpoint2 + 'datalist', data).subscribe(response => {\n      let result: any;\n      result = response;\n      this.group_name_array = result.res;\n    });\n  }\n\n  /*getting the sender's email*/\n  getReplyAddress() {\n    var data: any = { 'source': this.configData.reply_address_table };\n    this.newsService.getData(this.configData.endpoint2 + 'datalist', data).subscribe(response => {\n      let result: any;\n      result = response;\n      this.reply_data = result.res;\n      this.email_address=this.reply_data[0].email;\n      this.reply_address_id=this.reply_data[0]._id;\n      // console.log(this.email_address.email)\n\n    });\n  }\n\n  // reply address \n\n  getSenderAddress() {\n    var data: any = { 'source': this.configData.sender_table };\n    this.newsService.getData(this.configData.endpoint2 + 'datalist', data).subscribe(response => {\n      let result: any;\n      result = response;\n      this.sender_name_array = result.res;\n      // console.log(this.sender_name_array)\n    });\n  }\n\n\n  //generate form\n  generateForm() {\n    this.newsForm = this.formBuilder.group({\n      newstitle: ['', [Validators.required]],\n      newssubject: ['', [Validators.required]],\n      share_news: [],\n      publishdate_normal_format: [],\n      senderaddress: [],\n      publishdate: ['', [Validators.required]],\n      settime: [this.time],\n      content: ['', [Validators.required]],\n      newsfrequency: [],\n      days_of_weeks: [],\n      timeofday: [this.time],\n      timezone: [],\n      startdate: ['', [Validators.required]],\n      enddate: ['', [Validators.required]],\n      reply_email: [this.reply_address_id],\n      status: [1]\n    });\n  }\n\n\n\n  //setting the default value\n  setDefaultValue(defaultValue) {\n    this.tmp_date = defaultValue.publishdate;\n    let date = new Date(this.tmp_date);\n    defaultValue.publishdate = date,\n\n      this.tmp_date = defaultValue.startdate;\n    date = new Date(this.tmp_date);\n    defaultValue.startdate = date,\n\n      this.tmp_date = defaultValue.enddate;\n    date = new Date(this.tmp_date);\n    defaultValue.enddate = date,\n\n      this.newsForm.patchValue({\n        newstitle: defaultValue.newstitle,\n        newssubject: defaultValue.newssubject,\n        share_news: defaultValue.share_news,\n        senderaddress: defaultValue.senderaddress,\n        publishdate: defaultValue.publishdate,\n        settime: defaultValue.settime,\n        content: defaultValue.content,\n        days_of_weeks: defaultValue.days_of_weeks,\n        newsfrequency: defaultValue.newsfrequency,\n        timeofday: defaultValue.timeofday,\n        timezone: defaultValue.timezone,\n        startdate: defaultValue.startdate,\n        enddate: defaultValue.enddate,\n        reply_email: defaultValue.reply_email\n      });\n    // this.share_with_group = defaultValue.share_news;   \n\n  }\n\n\n  /** blur function **/\n  inputBlur(val: any) {\n    this.newsForm.controls[val].markAsUntouched();\n  }\n\n\n  /** marking the checkbox as true **/\n  getDays(day_var: any) {\n    if (day_var.isSelected === true)\n      day_var.isSelected = false;\n    else\n      day_var.isSelected = true;\n  }\n\n  //submit function\n  onSubmit() {\n\n    this.days_array = [];\n    this.false_count = 0;\n    if (this.frequency_flag != false)\n      for (var i = 0; i < this.days_json.length; i++) {\n        if (this.days_json[i].isSelected) {\n          this.days_array.push(this.days_json[i]);\n          this.false_count--;\n        }\n        else\n          this.days_array.push(this.days_json[i]);\n        this.false_count++;\n      }\n\n    if (this.false_count == 7)\n      return;\n\n\n    if (this.frequency_flag == true)\n      this.newsForm.value.days_of_weeks = this.days_array;\n    else\n      this.newsForm.value.days_of_weeks = null;\n\n\n\n\n    this.newsForm.value.publishdate = moment(this.newsForm.value.publishdate).format('MM/DD/YYYY');\n    this.newsForm.value.startdate = moment(this.newsForm.value.startdate).format('MM/DD/YYYY');\n    this.newsForm.value.enddate = moment(this.newsForm.value.enddate).format('MM/DD/YYYY');\n    this.newsForm.value.reply_email=this.reply_data[0]._id;\n\n    let x: any = moment(this.newsForm.value.publishdate).unix();\n    this.newsForm.value.publishdate_normal_format = parseInt(x) * 1000;\n\n\n\n    /** marking as untouched **/\n    for (let x in this.newsForm.controls) {\n      this.newsForm.controls[x].markAsTouched();\n    }\n\n\n\n    /* stop here if form is invalid */\n    if (this.newsForm.invalid) {\n      return;\n    } else {\n\n      /* start process to submited data */\n      let postData: any = {\n        source: this.configData.source,\n        data: Object.assign(this.newsForm.value, this.configData.condition),\n        \"sourceobj\": [\"senderaddress\",\"reply_email\"]\n      };\n      this.newsService.addData(this.configData.endpoint, postData).subscribe((response: any) => {\n        if (response.status == \"success\") {\n\n          this.openSnackBar(this.message, \"OK\");\n          this.router.navigate([this.configData.callBack]);\n        } else {\n          alert(\"Some error occurred. Please try angain.\");\n        }\n      }, (error) => {\n        alert(\"Some error occurred. Please try angain.\");\n      });\n    }\n  }\n\n\n}\n\n\n// ============================================MODAL COMPONENT===========================================\n@Component({\n  selector: 'app-preview',\n  templateUrl: 'preview_all_data.html',\n  styleUrls: ['./add-edit-newsletterlib.component.css'],\n})\nexport class PREVIEW {\n\n  public configData: any;\n\n\n  @Input()\n  set config(getConfig: any) {\n    this.configData = getConfig;\n  }\n\n\n  public testMail: any;\n  public title: AnalyserNode;\n  public subject: any;\n  public content: any;\n  public flag: any;\n\n  constructor(\n    public dialogRef: MatDialogRef<PREVIEW>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData, public newsService: NewsTitleService, public cookieService: CookieService) {\n\n    // console.log('>>', data)\n\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  selectOption(val) {\n    // console.log(val)\n  }\n\n  testMailSubmit(title: any, subject: any, content: any, testMail: any, flag: any) {\n    // console.log(title, subject, content, testMail);\n\n    this.data.title = title;\n    this.data.subject = subject;\n    this.data.content = content;\n    this.data.testMail = this.testMail;\n    this.data.flag = flag;\n\n    this.dialogRef.close(this.data);\n\n    // let endpoint:any='https://9ozbyvv5v0.execute-api.us-east-1.amazonaws.com/production/api/addorupdatedata'\n\n    // let mailData: any = {\n    //   source: 'newsTestMailData',\n    //   data: {\n    //     \"title\":title,\n    //     \"subject\":subject,\n    //     \"content\":content,\n    //     \"testMail\":this.testMail\n    //   },\n    //   \"sourceobj\": [\"testMail\"],\n    //   \"token\":this.cookieService.get('jwtToken')\n    // };\n    // this.newsService.addData(endpoint, mailData).subscribe((response: any) => {\n    //   if (response.status == \"success\") {\n\n    //     // this.openSnackBar(this.message, \"OK\");\n    //     this.dialogRef.close();\n\n    //   }\n\n    // });\n\n\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'lib-listing-newsletterlib',\n  templateUrl: './listing-newsletterlib.component.html',\n  styleUrls: ['./listing-newsletterlib.component.css']\n})\nexport class ListingNewsletterlibComponent implements OnInit {\n\n  // ==============================================declaration============================================\n  public newsConfigForm: any;\n  public loader: boolean = true;\n  // =====================================================================================================\n\n\n\n\n  // ================================================Input For Lib Listing================================\n  @Input()\n  set config(receivedData: any) {\n    this.newsConfigForm = {\n      apiUrl: receivedData.apiBaseUrl,\n      listEndPoint: receivedData.listEndPoint,\n      datasource: receivedData.datasource,\n      tableName: receivedData.tableName,\n      listArray_skip: [\"_id\", \"userId\", \"created_at\", \"id\", \"updated_at\",\"title_search\",\"publishdate_normal_format\",\"subject_search\"],\n      listArray_modify_header: {\n        'title': 'Title', 'subject': 'Subject', 'userGroup': 'User Group', 'time': 'Publish Time',\n        'publishdate': 'Publish Date', 'status': 'Status','date added':'Date Added'\n      },\n      admintablenameTableName: \"admin\",\n      status: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }],\n      updateurl: receivedData.updateEndpoint,\n      editUrl: receivedData.editUrl,\n      jwtToken: receivedData.jwtToken,\n      deleteEndPoint: receivedData.deleteEndPoint,\n      view: receivedData.view,\n      detail_header: ['_id','publishdate_normal_format','title_search'],\n      date_search_source:receivedData.view,\n      date_search_endpoint:'datalist',\n      search_settings: {\n        textsearch: [{ label: \"Search by title...\", field: 'title_search' },\n        { label: \"Search by subject...\", field: 'subject_search' }],\n        selectsearch: [{ label: 'Search By Status', field: 'status', values: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }] }],\n        datesearch:[{startdatelabel:\"Start Date\",enddatelabel:\"End Date\",submit:\"Search By Date\",  field:\"publishdate_normal_format\"}],\n        // search: [{ label: \"Search By group\", field: '' }]\n      },  \n    }\n    this.loader = false;\n  }\n  // ====================================================================================================\n\n  constructor() {\n\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { NewsTitleService } from '../../../news-title.service';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nexport interface DialogData {\n  msg: string;\n}\n\n\n\n@Component({\n  selector: 'lib-add-edit-sender',\n  templateUrl: './add-edit-sender.component.html',\n  styleUrls: ['./add-edit-sender.component.css']\n})\nexport class AddEditSenderComponent implements OnInit {\n\n\n  // ===============Declarations================\n  senderForm: FormGroup;\n  buttonText: any = \"SUBMIT\";\n  header_name: any = \"Add Sender\"\n  configData: any;\n  successMessage: any = \"Submitted Successfully!!!\";\n  dialogRef: any;\n  // ===========================================\n  constructor(private formBuilder: FormBuilder, private newsService: NewsTitleService\n    , private router: Router, public dialog: MatDialog) { }\n\n  ngOnInit() {\n    //generating the form\n    this.generateForm();\n\n\n    // --------------------------------checking the cases------------------------ \n    switch (this.configData.action) {\n      case 'add':\n        /* Button text */\n\n        break;\n      case 'edit':\n        /* Button text */\n        this.buttonText = \"UPDATE\";\n        this.successMessage = \"One row updated!!!\";\n        this.setDefaultValue(this.configData.defaultData);\n        this.header_name = \"Edit Sender's Information\";\n        break;\n    }\n    // --------------------------------------------------------------------------\n  }\n\n\n\n  // ===============generate form====================\n  generateForm() {\n    this.senderForm = this.formBuilder.group({\n      name: ['',[Validators.required]],\n      email: ['',[Validators.required,Validators.email]]\n    });\n  }\n  // ================================================\n\n\n\n  @Input()\n  set config(getConfig: any) {\n    this.configData = getConfig;\n  }\n\n  // =========================================MODAL functions==========================================\n  openDialog(x: any): void {\n    this.dialogRef = this.dialog.open(Modal3, {\n      width: '250px',\n      data: { msg: x }\n    });\n\n    this.dialogRef.afterClosed().subscribe(result => {\n\n    });\n  }\n  // =====================================================================================================\n\n\n /** blur function **/\n inputBlur(val: any) {\n  this.senderForm.controls[val].markAsUntouched();\n}\n\n\n  // ================================================Default value======================================\n  setDefaultValue(defaultValue) {\n    this.senderForm.patchValue({\n      name: defaultValue.name,\n      email: defaultValue.email\n    });\n\n  }\n  // ==================================================================================================\n\n\n\n\n  // =======================On SUBMIT======================\n  onSubmit() {\n\n      /** marking as untouched **/\n      for (let x in this.senderForm.controls) {\n        this.senderForm.controls[x].markAsTouched();\n      }\n\n    /* stop here if form is invalid */\n    if (this.senderForm.invalid) {\n      return;\n    } else {\n\n      /* start process to submited data */\n      let postData: any = {\n        source: this.configData.source,\n        data: Object.assign(this.senderForm.value, this.configData.condition),\n      };\n      this.newsService.addData(this.configData.endpoint, postData).subscribe((response: any) => {\n        if (response.status == \"success\") {\n          \n          this.openDialog(this.successMessage);\n          setTimeout(() => {\n            this.dialogRef.close();\n          }, 2000);\n          this.router.navigate([this.configData.callBack]);\n        } else {\n          alert(\"Some error occurred. Please try angain.\");\n        }\n      }, (error) => {\n        alert(\"Some error occurred. Please try angain.\");\n      });\n    }\n  }\n  // ======================================================\n}\n\n\n\n\n\n// ============================================MODAL COMPONENT===========================================\n@Component({\n  selector: 'app-modal',\n  templateUrl: 'modal3.html',\n})\nexport class Modal3 {\n\n  constructor(\n    public dialogRef: MatDialogRef<Modal3>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n// ======================================================================================================\n","import { Component, OnInit, Input } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'lib-listing-sender',\n  templateUrl: './listing-sender.component.html',\n  styleUrls: ['./listing-sender.component.css']\n})\nexport class ListingSenderComponent implements OnInit {\n\n  // ==============================================declaration============================================\n  public senderConfigForm2: any;\n  public loader: boolean = true;\n  // =====================================================================================================\n\n\n\n\n  // ================================================Input For Lib Listing================================\n  @Input()\n  set config(receivedData: any) {\n\n    this.senderConfigForm2 = {\n      apiUrl: receivedData.apiUrl,\n      listEndPoint: receivedData.listEndPoint,\n      datasource: receivedData.datasource,\n      tableName: receivedData.tableName,\n      listArray_skip: [\"_id\", \"userId\", \"created_at\", \"id\", \"updated_at\"],\n      listArray_modify_header: { \"name\": \"Sender's Name\", \"email\": \"Sender's Email\", \"date\": \"Date\" },\n      admintablenameTableName: \"admin\",\n      statusarr: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }],\n      updateurl: receivedData.updateEndpoint,\n      editUrl: receivedData.editUrl,\n      jwtToken: receivedData.jwtToken,\n      deleteEndPoint: receivedData.deleteEndPoint,\n      view: receivedData.view,\n      detail_header:['_id']\n    }\n    this.loader = false;\n  }\n  // ====================================================================================================\n\n  constructor(private cookieService: CookieService) {\n    \n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n","import { Component, OnInit,Input ,Inject} from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { NewsTitleService } from '../../../news-title.service';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nexport interface DialogData {\n  msg: string;\n}\n\n\n@Component({\n  selector: 'lib-add-edit-testemaillib',\n  templateUrl: './add-edit-testemaillib.component.html',\n  styleUrls: ['./add-edit-testemaillib.component.css']\n})\nexport class AddEditTestemaillibComponent implements OnInit {\n\n\n  // ===============Declarations================\n  senderFormTest: FormGroup;\n  buttonText: any = \"SUBMIT\";\n  header_name: any = \"Add Sender(Test)\"\n  configData: any;\n  successMessage: any = \"Submitted Successfully!!!\";\n  dialogRef: any;\n  // ===========================================\n  constructor(private formBuilder: FormBuilder, private newsService: NewsTitleService\n    , private router: Router, public dialog: MatDialog) { }\n\n  ngOnInit() {\n    //generating the form\n    this.generateForm();\n\n\n    // --------------------------------checking the cases------------------------ \n    switch (this.configData.action) {\n      case 'add':\n        /* Button text */\n\n        break;\n      case 'edit':\n        /* Button text */\n        this.buttonText = \"UPDATE\";\n        this.successMessage = \"One row updated!!!\";\n        this.setDefaultValue(this.configData.defaultData);\n        this.header_name = \"Edit sender's Information\";\n        break;\n    }\n    // --------------------------------------------------------------------------\n  }\n\n\n\n  // ===============generate form====================\n  generateForm() {\n    this.senderFormTest = this.formBuilder.group({\n      name: ['',[Validators.required]],\n      email: ['',[Validators.required,Validators.email]]\n    });\n  }\n  // ================================================\n\n\n\n  @Input()\n  set config(getConfig: any) {\n    this.configData = getConfig;\n  }\n\n  // =========================================MODAL functions==========================================\n  openDialog(x: any): void {\n    this.dialogRef = this.dialog.open(Modal4, {\n      width: '250px',\n      data: { msg: x }\n    });\n\n    this.dialogRef.afterClosed().subscribe(result => {\n\n    });\n  }\n  // =====================================================================================================\n\n\n\n\n  // ================================================Default value======================================\n  setDefaultValue(defaultValue) {\n    this.senderFormTest.patchValue({\n      name: defaultValue.name,\n      email: defaultValue.email\n    });\n\n  }\n  // ==================================================================================================\n\n\n  /** blur function **/\n  inputBlur(val: any) {\n    this.senderFormTest.controls[val].markAsUntouched();\n  }\n\n\n\n  // =======================On SUBMIT======================\n  onSubmit() {\n\n     /** marking as untouched **/\n     for (let x in this.senderFormTest.controls) {\n      this.senderFormTest.controls[x].markAsTouched();\n    }\n    \n    /* stop here if form is invalid */\n    if (this.senderFormTest.invalid) {\n      return;\n    } else {\n\n      /* start process to submited data */\n      let postData: any = {\n        source: this.configData.source,\n        data: Object.assign(this.senderFormTest.value, this.configData.condition),\n      };\n      this.newsService.addData(this.configData.endpoint, postData).subscribe((response: any) => {\n        if (response.status == \"success\") {\n          console.log(response.status);\n          this.openDialog(this.successMessage);\n          setTimeout(() => {\n            this.dialogRef.close();\n          }, 2000);\n          this.router.navigate([this.configData.callBack]);\n        } else {\n          alert(\"Some error occurred. Please try angain.\");\n        }\n      }, (error) => {\n        alert(\"Some error occurred. Please try angain.\");\n      });\n    }\n  }\n  // ======================================================\n}\n\n\n\n\n\n// ============================================MODAL COMPONENT===========================================\n@Component({\n  selector: 'app-modal',\n  templateUrl: 'modal4.html',\n})\nexport class Modal4 {\n\n  constructor(\n    public dialogRef: MatDialogRef<Modal4>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n// ======================================================================================================\n","import { Component, OnInit ,Input} from '@angular/core';\n\n@Component({\n  selector: 'lib-listing-testemaillib',\n  templateUrl: './listing-testemaillib.component.html',\n  styleUrls: ['./listing-testemaillib.component.css']\n})\nexport class ListingTestemaillibComponent implements OnInit {\n\n  // ==============================================declaration============================================\n  public senderConfigForm: any;\n  public loader: boolean = true;\n  // =====================================================================================================\n  \n  \n  \n  \n  // ================================================Input For Lib Listing================================\n  @Input()\n  set config(receivedData: any) {\n   \n    this.senderConfigForm = {\n      apiUrl: receivedData.apiBaseUrl,\n      listEndPoint: receivedData.listEndPoint,\n      datasource: receivedData.datasource,\n      tableName: receivedData.tableName,\n      listArray_skip: [\"_id\", \"userId\", \"created_at\", \"id\", \"updated_at\"],\n      listArray_modify_header: { \"name\": \"Sender's Name\", \"email\":\"Sender's Email\"},\n      admintablenameTableName: \"admin\",\n      statusarr: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }],\n      updateurl: receivedData.updateEndpoint,\n      editUrl: receivedData.editUrl,\n      jwtToken: receivedData.jwtToken,\n      deleteEndPoint: receivedData.deleteEndPoint,\n      view: receivedData.view,\n      detail_header:['_id']\n    \n    }\n    this.loader = false;\n  }\n  // ====================================================================================================\n  \n  constructor() { }\n  \n  ngOnInit() {\n  }\n  \n  }\n  \n  \n  ","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { NewsTitleComponent, modalData } from './news-title.component';\nimport { DemoMaterialModule } from './material-module';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\nimport { ApiService } from './api.service';\nimport { ListingNewsletterComponent } from './Components/listing-newsletter/listing-newsletter.component';\nimport { ListingModule } from 'listing-angular7';\nimport { AddEditSubcategoryComponent,Modal } from './Components/subscriptioncategory/add-edit-subcategory/add-edit-subcategory.component';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ListingSubcategoryComponent } from './Components/subscriptioncategory/listing-subcategory/listing-subcategory.component';\nimport { AddEditSubscriptiongroupComponent,Modal2 } from './Components/add-edit-subscriptiongroup/add-edit-subscriptiongroup.component';\nimport { AddEditNewsletterlibComponent , PREVIEW} from './Components/newsletter/add-edit-newsletterlib/add-edit-newsletterlib.component';\nimport { ListingNewsletterlibComponent } from './Components/newsletter/listing-newsletterlib/listing-newsletterlib.component';\nimport { AddEditSenderComponent , Modal3} from './Components/senderslist/add-edit-sender/add-edit-sender.component';\nimport { ListingSenderComponent } from './Components/senderslist/listing-sender/listing-sender.component';\nimport { AddEditTestemaillibComponent,Modal4 } from './Components/testemails/add-edit-testemaillib/add-edit-testemaillib.component';\nimport { ListingTestemaillibComponent } from './Components/testemails/listing-testemaillib/listing-testemaillib.component';\nimport { AmazingTimePickerModule } from 'amazing-time-picker';\n// import {NgxMaterialTimepickerModule} from 'ngx-material-timepicker';\nimport { DatePipe} from '@angular/common';\nimport { CKEditorModule } from 'ngx-ckeditor';\nimport { MomentModule } from 'ngx-moment';\n\n\n@NgModule({\n  declarations: [Modal4,Modal2,Modal,NewsTitleComponent, modalData, ListingNewsletterComponent, \n    AddEditSubcategoryComponent, ListingSubcategoryComponent, AddEditSubscriptiongroupComponent, \n    AddEditNewsletterlibComponent, ListingNewsletterlibComponent, AddEditSenderComponent, \n    ListingSenderComponent,Modal3, AddEditTestemaillibComponent, ListingTestemaillibComponent,PREVIEW\n    ],\n  imports: [\n    DemoMaterialModule,\n    ReactiveFormsModule,FormsModule,\n    BrowserAnimationsModule,\n    CommonModule,\n    ListingModule,\n    RouterModule,\n    HttpClientModule,\n    AmazingTimePickerModule,\n    // NgxMaterialTimepickerModule,\n    CKEditorModule,\n    MomentModule\n    \n  ],\n  exports: [AddEditSenderComponent,AddEditNewsletterlibComponent,AddEditSubscriptiongroupComponent,\n    Modal,NewsTitleComponent,ListingNewsletterComponent,AddEditSubcategoryComponent,\n    ListingSubcategoryComponent,AddEditTestemaillibComponent,ListingTestemaillibComponent,ListingNewsletterlibComponent,\n    ListingSenderComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  providers: [ApiService,DatePipe],\n  entryComponents:[PREVIEW,Modal4,Modal3,NewsTitleComponent, modalData,Modal,Modal2]\n})\nexport class NewsTitleModule { }\n\n\n\n"],"names":["HttpHeaders","map","Injectable","HttpClient","CookieService","Subject","dialog","Component","FormBuilder","MatSnackBar","MatDialog","Input","ViewChild","FormGroupDirective","Validators","MatDialogRef","Inject","MAT_DIALOG_DATA","NgModule","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","router","Router","ENTER","COMMA","input","snackBar","amazingTimePicker","AmazingTimePickerService","DatePipe","ReactiveFormsModule","FormsModule","BrowserAnimationsModule","CommonModule","ListingModule","RouterModule","HttpClientModule","AmazingTimePickerModule","CKEditorModule","MomentModule","CUSTOM_ELEMENTS_SCHEMA"],"mappings":"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"}
