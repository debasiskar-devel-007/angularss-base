!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("rxjs/operators"),require("rxjs"),require("@angular/material"),require("@angular/cdk/a11y"),require("@angular/cdk/drag-drop"),require("@angular/cdk/portal"),require("@angular/cdk/scrolling"),require("@angular/cdk/stepper"),require("@angular/cdk/table"),require("@angular/cdk/tree"),require("@angular/material/autocomplete"),require("@angular/material/badge"),require("@angular/material/bottom-sheet"),require("@angular/material/button"),require("@angular/material/button-toggle"),require("@angular/material/card"),require("@angular/material/checkbox"),require("@angular/material/chips"),require("@angular/material/stepper"),require("@angular/material/datepicker"),require("@angular/material/divider"),require("@angular/material/expansion"),require("@angular/material/grid-list"),require("@angular/material/icon"),require("@angular/material/input"),require("@angular/material/list"),require("@angular/material/menu"),require("@angular/material/core"),require("@angular/material/paginator"),require("@angular/material/progress-bar"),require("@angular/material/progress-spinner"),require("@angular/material/radio"),require("@angular/material/select"),require("@angular/material/sidenav"),require("@angular/material/slider"),require("@angular/material/slide-toggle"),require("@angular/material/sort"),require("@angular/material/table"),require("@angular/material/tabs"),require("@angular/material/toolbar"),require("@angular/material/tooltip"),require("@angular/material/tree"),require("@angular/platform-browser/animations"),require("listing-angular7"),require("@angular/common/http"),require("@ckeditor/ckeditor5-build-classic"),require("@angular/common"),require("@angular/material/snack-bar"),require("moment"),require("ngx-cookie-service"),require("@angular/forms"),require("@angular/router"),require("@angular/material/dialog"),require("@angular/core"),require("amazing-time-picker"),require("ngx-ckeditor"),require("ngx-moment")):"function"==typeof define&&define.amd?define("news-title-lib-influxiq",["exports","rxjs/operators","rxjs","@angular/material","@angular/cdk/a11y","@angular/cdk/drag-drop","@angular/cdk/portal","@angular/cdk/scrolling","@angular/cdk/stepper","@angular/cdk/table","@angular/cdk/tree","@angular/material/autocomplete","@angular/material/badge","@angular/material/bottom-sheet","@angular/material/button","@angular/material/button-toggle","@angular/material/card","@angular/material/checkbox","@angular/material/chips","@angular/material/stepper","@angular/material/datepicker","@angular/material/divider","@angular/material/expansion","@angular/material/grid-list","@angular/material/icon","@angular/material/input","@angular/material/list","@angular/material/menu","@angular/material/core","@angular/material/paginator","@angular/material/progress-bar","@angular/material/progress-spinner","@angular/material/radio","@angular/material/select","@angular/material/sidenav","@angular/material/slider","@angular/material/slide-toggle","@angular/material/sort","@angular/material/table","@angular/material/tabs","@angular/material/toolbar","@angular/material/tooltip","@angular/material/tree","@angular/platform-browser/animations","listing-angular7","@angular/common/http","@ckeditor/ckeditor5-build-classic","@angular/common","@angular/material/snack-bar","moment","ngx-cookie-service","@angular/forms","@angular/router","@angular/material/dialog","@angular/core","amazing-time-picker","ngx-ckeditor","ngx-moment"],e):e(t["news-title-lib-influxiq"]={},t.rxjs.operators,t.rxjs,t.ng.material,t.ng.cdk.a11y,t.ng.cdk["drag-drop"],t.ng.cdk.portal,t.ng.cdk.scrolling,t.ng.cdk.stepper,t.ng.cdk.table,t.ng.cdk.tree,t.ng.material.autocomplete,t.ng.material.badge,t.ng.material["bottom-sheet"],t.ng.material.button,t.ng.material["button-toggle"],t.ng.material.card,t.ng.material.checkbox,t.ng.material.chips,t.ng.material.stepper,t.ng.material.datepicker,t.ng.material.divider,t.ng.material.expansion,t.ng.material["grid-list"],t.ng.material.icon,t.ng.material.input,t.ng.material.list,t.ng.material.menu,t.ng.material.core,t.ng.material.paginator,t.ng.material["progress-bar"],t.ng.material["progress-spinner"],t.ng.material.radio,t.ng.material.select,t.ng.material.sidenav,t.ng.material.slider,t.ng.material["slide-toggle"],t.ng.material.sort,t.ng.material.table,t.ng.material.tabs,t.ng.material.toolbar,t.ng.material.tooltip,t.ng.material.tree,t.ng.platformBrowser.animations,t.listingAngular7,t.ng.common.http,t.ClassicEditor,t.ng.common,t.ng.material["snack-bar"],t.moment_,t.i2,t.ng.forms,t.ng.router,t.ng.material.dialog,t.ng.core,t.amazingTimePicker,t.ngxCkeditor,t.ngxMoment)}(this,function(t,r,n,e,a,o,i,s,l,d,p,c,m,u,f,g,h,b,y,x,w,v,k,_,S,C,F,D,T,E,j,M,I,N,U,q,A,P,L,B,O,V,z,R,G,H,J,Y,W,Z,K,Q,$,X,tt,et,at,rt){"use strict";var nt=(ot.prototype.isTokenExpired=function(){},ot.prototype.addData=function(t,e){var a={headers:new H.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+t,JSON.stringify(e),a).pipe(r.map(function(t){return t}))},ot.prototype.UpdateData=function(t,e){var a={headers:new H.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+t,JSON.stringify(e),a).pipe(r.map(function(t){return t}))},ot.prototype.getData=function(t,e){var a={headers:new H.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+t,JSON.stringify(e),a).pipe(r.map(function(t){return t}))},ot.prototype.deleteSingleData=function(t,e){var a={headers:new H.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+t,JSON.stringify(e),a).pipe(r.map(function(t){return t}))},ot.prototype.deleteMultipleData=function(t,e){var a={headers:new H.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+t,JSON.stringify(e),a).pipe(r.map(function(t){return t}))},ot.prototype.UpdateStatusForSingleData=function(t,e){var a={headers:new H.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+t,JSON.stringify(e),a).pipe(r.map(function(t){return t}))},ot.prototype.UpdateStatusForMultipleData=function(t,e){var a={headers:new H.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+t+"many",JSON.stringify(e),a).pipe(r.map(function(t){return t}))},ot.prototype.CustomRequest=function(t,e){var a={headers:new H.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+t,JSON.stringify(e),a).pipe(r.map(function(t){return t}))},ot.decorators=[{type:tt.Injectable,args:[{providedIn:"root"}]}],ot.ctorParameters=function(){return[{type:H.HttpClient},{type:H.HttpClient},{type:K.CookieService}]},ot.ngInjectableDef=tt.defineInjectable({factory:function(){return new ot(tt.inject(H.HttpClient),tt.inject(H.HttpClient),tt.inject(K.CookieService))},token:ot,providedIn:"root"}),ot);function ot(t,e,a){this._http=t,this._authHttp=e,this.cookieService=a,this.progress=[],this.uploaderror="",this.accesstoken=this.cookieService.get("jwtToken"),this.fileservername=[],this.serverUrl="",this.getdata_endpointUrl="datalist"}var it=(st.prototype.setServerUrl=function(t){this.subjectForServerUrl.next(t)},st.prototype.clearServerUrl=function(){this.subjectForServerUrl.next(null)},st.prototype.getServerUrl=function(){return this.subjectForServerUrl.asObservable()},st.prototype.setaddEndpoint=function(t){this.subjectForaddEndpointUrl.next(t)},st.prototype.clearaddEndpoint=function(){this.subjectForaddEndpointUrl.next(null)},st.prototype.getaddEndpoint=function(){return this.subjectForaddEndpointUrl.asObservable()},st.prototype.setuploadEndpont=function(t){this.subjectForuploadEndpointUrl.next(t)},st.prototype.clearuploadEndpoint=function(){this.subjectForuploadEndpointUrl.next(null)},st.prototype.getuploadEndpoint=function(){return this.subjectForuploadEndpointUrl.asObservable()},st.prototype.setupdateEndpoint=function(t){this.subjectForupdateEndpointUrl.next(t)},st.prototype.clearupdateEndpoint=function(){this.subjectForupdateEndpointUrl.next(null)},st.prototype.getupdateEndpoint=function(){return this.subjectForupdateEndpointUrl.asObservable()},st.prototype.setdeletesingleEndpoint=function(t){this.subjectFordeletesingleEndpointUrl.next(t)},st.prototype.cleardeletesingleEndpoint=function(){this.subjectFordeletesingleEndpointUrl.next(null)},st.prototype.getdeletesingleEndpoint=function(){return this.subjectFordeletesingleEndpointUrl.asObservable()},st.prototype.setupdatestatus_singleEndpoint=function(t){this.subjectForupdatestatusSingleEndpointUrl.next(t)},st.prototype.clearupdatestatus_singleEndpoint=function(){this.subjectForupdatestatusSingleEndpointUrl.next(null)},st.prototype.getupdatestatus_singleEndpoint=function(){return this.subjectForupdatestatusSingleEndpointUrl.asObservable()},st.prototype.setgetdataEndpoint=function(t){this.subjectForGetdataEndpointUrl.next(t)},st.prototype.cleargetdataEndpoint=function(){this.subjectForGetdataEndpointUrl.next(null)},st.prototype.getdataEndpoint=function(){return this.subjectForGetdataEndpointUrl.asObservable()},st.prototype.isTokenExpired=function(){},st.prototype.addData=function(t){console.log("in adddata apiservice");var e={headers:new H.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return console.log("httpoptions",e,this.serverUrl,t),this._http.post(this.serverUrl+this.addendpointUrl,JSON.stringify(t),e).pipe(r.map(function(t){return t}))},st.prototype.uploadFile=function(t){var e={headers:new H.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+this.uploadEndpointUrl,JSON.stringify(t),e).pipe(r.map(function(t){return t}))},st.prototype.UpdateData=function(t){var e={headers:new H.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+this.updateendpointUrl,JSON.stringify(t),e).pipe(r.map(function(t){return t}))},st.prototype.getData=function(t){var e={headers:new H.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+this.getdata_endpointUrl,JSON.stringify(t),e).pipe(r.map(function(t){return t}))},st.prototype.addLogin=function(t){console.log("in addLogin apiservice");var e={headers:new H.HttpHeaders({"Content-Type":"application/json"})};return console.log(this.serverUrl,t),this._http.post(this.serverUrl+this.addendpointUrl,JSON.stringify(t),e).pipe(r.map(function(t){return t}))},st.prototype.forgetPassword=function(t){console.log("in forgetPassword apiservice");var e={headers:new H.HttpHeaders({"Content-Type":"application/json"})};return console.log(this.serverUrl,t),this._http.post(this.serverUrl+this.addendpointUrl,JSON.stringify(t),e).pipe(r.map(function(t){return t}))},st.prototype.deleteSingleData=function(t){var e={headers:new H.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+this.deletesingle_endpointUrl,JSON.stringify(t),e).pipe(r.map(function(t){return t}))},st.prototype.deleteMultipleData=function(t){var e={headers:new H.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+this.deletesingle_endpointUrl+"many",JSON.stringify(t),e).pipe(r.map(function(t){return t}))},st.prototype.UpdateStatusForSingleData=function(t){var e={headers:new H.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+this.updatestatus_single_endpointUrl,JSON.stringify(t),e).pipe(r.map(function(t){return t}))},st.prototype.UpdateStatusForMultipleData=function(t){var e={headers:new H.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+this.updatestatus_single_endpointUrl+"many",JSON.stringify(t),e).pipe(r.map(function(t){return t}))},st.prototype.CustomRequest=function(t,e){var a={headers:new H.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+e,JSON.stringify(t),a).pipe(r.map(function(t){return t}))},st.decorators=[{type:tt.Injectable,args:[{providedIn:"root"}]}],st.ctorParameters=function(){return[{type:H.HttpClient},{type:H.HttpClient},{type:K.CookieService}]},st.ngInjectableDef=tt.defineInjectable({factory:function(){return new st(tt.inject(H.HttpClient),tt.inject(H.HttpClient),tt.inject(K.CookieService))},token:st,providedIn:"root"}),st);function st(t,e,a){var r=this;this._http=t,this._authHttp=e,this.cookieService=a,this.progress=[],this.uploaderror="",this.accesstoken=this.cookieService.get("jwtToken"),this.fileservername=[],this.subjectForServerUrl=new n.Subject,this.subjectForaddEndpointUrl=new n.Subject,this.subjectForuploadEndpointUrl=new n.Subject,this.subjectForupdateEndpointUrl=new n.Subject,this.subjectFordeletesingleEndpointUrl=new n.Subject,this.subjectForupdatestatusSingleEndpointUrl=new n.Subject,this.subjectForGetdataEndpointUrl=new n.Subject,this.subscriptionServer=this.getServerUrl().subscribe(function(t){var e;e=t,r.serverUrl=null!=e?e:null}),this.subscriptionaddEndpoint=this.getaddEndpoint().subscribe(function(t){var e;e=t,r.addendpointUrl=null!=e?e:null}),this.subscriptionuploadEndpoint=this.getuploadEndpoint().subscribe(function(t){var e;e=t,r.uploadEndpointUrl=null!=e?e:null}),this.subscriptionupdateEndpoint=this.getupdateEndpoint().subscribe(function(t){var e;e=t,r.updateendpointUrl=null!=e?e:null}),this.subscriptiondeletesingleEndpoint=this.getdeletesingleEndpoint().subscribe(function(t){var e;e=t,r.deletesingle_endpointUrl=null!=e?e:null}),this.subscriptionupdatestatusSingleEndpoint=this.getupdatestatus_singleEndpoint().subscribe(function(t){var e;e=t,r.updatestatus_single_endpointUrl=null!=e?e:null}),this.subscriptionGetdataEndpoint=this.getdataEndpoint().subscribe(function(t){var e;e=t,r.getdata_endpointUrl=null!=e?e:null})}var lt=(Object.defineProperty(dt.prototype,"formTitle",{set:function(t){this.formTitleValue=t},enumerable:!0,configurable:!0}),Object.defineProperty(dt.prototype,"logo",{set:function(t){this.logoValue=t},enumerable:!0,configurable:!0}),Object.defineProperty(dt.prototype,"serverUrl",{set:function(t){this.serverUrlValue=t||"<no name set>",this.serverUrlValue=t},enumerable:!0,configurable:!0}),Object.defineProperty(dt.prototype,"addEndpoint",{set:function(t){this.addEndpointValue=t},enumerable:!0,configurable:!0}),dt.prototype.ngOnInit=function(){var t=this;setTimeout(function(){t.openDialog()},500)},dt.prototype.openDialog=function(){this.dialog.open(pt,{data:{addEndpointValue:this.addEndpointValue,serverUrlValue:this.serverUrlValue,formTitleValue:this.formTitleValue,logoValue:this.logoValue}}).afterClosed().subscribe(function(t){})},dt.decorators=[{type:tt.Component,args:[{selector:"lib-newsTitle",template:"",styles:[".mat-form-field{display:inline-block;position:relative;text-align:left;width:100%}.material-icons{position:absolute;top:-20px;right:-20px;font-family:'Material Icons';font-weight:400;font-style:normal;font-size:24px;line-height:1;letter-spacing:normal;text-transform:none;display:inline-block;white-space:nowrap;word-wrap:normal;direction:ltr;-webkit-font-smoothing:antialiased}.logowrapper{margin:0 auto;display:block;text-align:center}h2{text-align:center;background-color:#00f;color:#f0f8ff;padding:10px;margin:0 auto}"]}]}],dt.ctorParameters=function(){return[{type:Q.FormBuilder},{type:it},{type:e.MatSnackBar},{type:e.MatDialog}]},dt.propDecorators={formTitle:[{type:tt.Input}],logo:[{type:tt.Input}],serverUrl:[{type:tt.Input}],addEndpoint:[{type:tt.Input}],formDirective:[{type:tt.ViewChild,args:[Q.FormGroupDirective]}]},dt);function dt(t,e,a,r){this.fb=t,this.apiService=e,this._snackBar=a,this.dialog=r,this.formTitleValue="",this.serverUrlValue="",this.addEndpointValue="",this.logoValue="",this.durationInSeconds=10}var pt=(ct.prototype.ngOnInit=function(){var t=this;this.apiService.clearServerUrl(),setTimeout(function(){t.apiService.setServerUrl(t.data.serverUrlValue)},50),this.apiService.clearaddEndpoint(),setTimeout(function(){t.apiService.setaddEndpoint(t.data.addEndpointValue.endpoint)},50)},ct.prototype.onNoClick=function(){this.dialogRef.close()},ct.prototype.newsLatterFormSubmit=function(){var e=this;for(var t in console.log(this.newsLatterForm.value),this.newsLatterForm.controls)this.newsLatterForm.controls[t].markAsTouched();if(this.newsLatterForm.valid){console.log(this.newsLatterForm.value);var a={data:this.newsLatterForm.value,source:this.data.addEndpointValue.source};this.apiService.addData(a).subscribe(function(t){console.log(t),"success"==t.status&&e.formDirective.resetForm()})}},ct.prototype.inputUntouched=function(t){this.newsLatterForm.controls[t].markAsUntouched()},ct.decorators=[{type:tt.Component,args:[{selector:"modalData",template:'\n<mat-card >\n\n        <span class="logowrapper" *ngIf="data.logoValue != \'\'" >\n             <img  [src]="data.logoValue">\n         </span>\n   \n       <h2 *ngIf="data.formTitleValue != \'\'"> {{data.formTitleValue}}</h2>\n   \n       <form [formGroup]="newsLatterForm" (ngSubmit)="newsLatterFormSubmit()" novalidate>\n           <mat-form-field>\n               <input matInput placeholder="Name " formControlName="fullname" (blur)="inputUntouched(\'fullname\')">\n               <mat-error\n                           *ngIf="!newsLatterForm.controls[\'fullname\'].valid && newsLatterForm.controls[\'fullname\'].errors.required && newsLatterForm.controls[\'fullname\'].touched">\n                           Name field can not be blank</mat-error>\n           </mat-form-field>\n   \n           \x3c!--Phone field start here--\x3e\n           <mat-form-field>\n               <input matInput placeholder="Phone " formControlName="phone" (blur)="inputUntouched(\'phone\')">\n               <mat-error *ngIf="!newsLatterForm.controls[\'phone\'].valid && newsLatterForm.controls[\'phone\'].errors.required && newsLatterForm.controls[\'phone\'].touched">\n                           Phone field can not be blank</mat-error>\n           </mat-form-field>\n   \n           \x3c!-- Email field start here--\x3e\n           <mat-form-field>\n               <input matInput placeholder="Email " formControlName="email" (blur)="inputUntouched(\'email\')">\n               <mat-error\n                           *ngIf="!newsLatterForm.controls[\'email\'].valid && !newsLatterForm.controls[\'email\'].errors.required">\n                           Email is not valid</mat-error>\n                       <mat-error\n                           *ngIf="!newsLatterForm.controls[\'email\'].valid && newsLatterForm.controls[\'email\'].errors.required">\n                           Email field can not be blank</mat-error>\n           </mat-form-field>\n   \n           \x3c!--Company field start here--\x3e\n           <mat-form-field>\n               <input matInput placeholder="Company " formControlName="company" (blur)="inputUntouched(\'company\')">\n               <mat-error\n                           *ngIf="!newsLatterForm.controls[\'company\'].valid && newsLatterForm.controls[\'company\'].errors.required && newsLatterForm.controls[\'company\'].touched">\n                           Full Name field can not be blank</mat-error>\n           </mat-form-field>\n   \n   \n           <button mat-raised-button color="primary">Submit</button>\n           \x3c!-- <button mat-raised-button color="primary"(click)="onNoClick()">No Thanks</button> --\x3e\n           <i class="material-icons" (click)="onNoClick()">\n               clear\n               </i>\n   \n   \n       </form>\n   </mat-card>',styles:[".mat-form-field{display:inline-block;position:relative;text-align:left;width:100%}.material-icons{position:absolute;top:-20px;right:-20px;font-family:'Material Icons';font-weight:400;font-style:normal;font-size:24px;line-height:1;letter-spacing:normal;text-transform:none;display:inline-block;white-space:nowrap;word-wrap:normal;direction:ltr;-webkit-font-smoothing:antialiased}.logowrapper{margin:0 auto;display:block;text-align:center}h2{text-align:center;background-color:#00f;color:#f0f8ff;padding:10px;margin:0 auto}"]}]}],ct.ctorParameters=function(){return[{type:e.MatDialogRef},{type:undefined,decorators:[{type:tt.Inject,args:[e.MAT_DIALOG_DATA]}]},{type:it},{type:Q.FormBuilder}]},ct.propDecorators={formDirective:[{type:tt.ViewChild,args:[Q.FormGroupDirective]}]},ct);function ct(t,e,a,r){this.dialogRef=t,this.data=e,this.apiService=a,this.fb=r,this.newsLatterForm=this.fb.group({fullname:["",Q.Validators.required],group:[0],phone:["",Q.Validators.required],company:["",Q.Validators.required],email:["",Q.Validators.compose([Q.Validators.required,Q.Validators.pattern(/^\s*[\w\-\+_]+(\.[\w\-\+_]+)*\@[\w\-\+_]+\.[\w\-\+_]+(\.[\w\-\+_]+)*\s*$/)])]})}var mt=(ut.decorators=[{type:tt.NgModule,args:[{exports:[a.A11yModule,l.CdkStepperModule,d.CdkTableModule,p.CdkTreeModule,o.DragDropModule,c.MatAutocompleteModule,m.MatBadgeModule,u.MatBottomSheetModule,f.MatButtonModule,g.MatButtonToggleModule,h.MatCardModule,b.MatCheckboxModule,y.MatChipsModule,x.MatStepperModule,w.MatDatepickerModule,X.MatDialogModule,v.MatDividerModule,k.MatExpansionModule,_.MatGridListModule,S.MatIconModule,C.MatInputModule,F.MatListModule,D.MatMenuModule,T.MatNativeDateModule,E.MatPaginatorModule,j.MatProgressBarModule,M.MatProgressSpinnerModule,I.MatRadioModule,T.MatRippleModule,N.MatSelectModule,U.MatSidenavModule,q.MatSliderModule,A.MatSlideToggleModule,W.MatSnackBarModule,P.MatSortModule,L.MatTableModule,B.MatTabsModule,O.MatToolbarModule,V.MatTooltipModule,z.MatTreeModule,i.PortalModule,s.ScrollingModule]}]}],ut);function ut(){}var ft=(gt.prototype.ngOnInit=function(){},Object.defineProperty(gt.prototype,"config",{set:function(t){this.newsLetterListConfig={apiUrl:t.apiBaseUrl,listEndPoint:t.listEndPoint,datasource:t.datasource,tableName:t.tableName,listArray_skip:["_id","userId","created_at","id","updated_at","image","fullname_search"],listArray_modify_header:{fullname:"Full Name",phone:"Phone",company:"Company",email:"Email",group:"Group"},admintablenameTableName:"admin",statusarr:[{val:1,name:"Active"},{val:0,name:"Inactive"}],updateurl:t.updateEndpoint,editUrl:t.editUrl,jwtToken:t.jwtToken,deleteEndPoint:t.deleteEndPoint,view:t.view,search_settings:{textsearch:[{label:"Search by customer name...",field:"fullname_search"},{label:"Search by email...",field:"email"}]},detail_header:["_id","fullname_search"]},this.loader=!1},enumerable:!0,configurable:!0}),gt.decorators=[{type:tt.Component,args:[{selector:"lib-listing-newsletter",template:'<mat-card *ngIf="loader==true">\n  <mat-spinner class="spinner"></mat-spinner>\n</mat-card>\n\n\n\n\n\x3c!-- ------------------------lib listing being called------------------------ --\x3e\n<mat-card *ngIf="loader==false">\n  <lib-listing class="formfilterdiv"\n      *ngIf="newsLetterListConfig.datasource !=null && newsLetterListConfig.datasource.length > 0"\n      [datasource]="newsLetterListConfig.datasource" [skip]="newsLetterListConfig.listArray_skip"\n      [modify_header_array]="newsLetterListConfig.listArray_modify_header" [sourcedata]="newsLetterListConfig.tableName"\n      [statusarr]="newsLetterListConfig.statusarr" [jwttoken]="newsLetterListConfig.jwtToken"\n      [apiurl]="newsLetterListConfig.apiUrl" [editroute]="newsLetterListConfig.editUrl"\n      [deleteendpoint]="newsLetterListConfig.deleteEndPoint"\n      [date_search_source]="newsLetterListConfig.view"\n     [date_search_endpoint]="newsLetterListConfig.listEndPoint"\n     [search_settings]="newsLetterListConfig.search_settings"\n     [detail_skip_array]="newsLetterListConfig.detail_header">\n  </lib-listing>\n\x3c!-- -----------------------------------------------------------------------------\x3e\n\n  <h2 *ngIf="newsLetterListConfig.datasource.length == 0">No record found.</h2>\n</mat-card>',styles:[""]}]}],gt.ctorParameters=function(){return[]},gt.propDecorators={config:[{type:tt.Input}]},gt);function gt(){this.loader=!0}var ht=(Object.defineProperty(bt.prototype,"config",{set:function(t){this.configData=t},enumerable:!0,configurable:!0}),bt.prototype.ngOnInit=function(){switch(this.generateForm(),this.configData.action){case"add":break;case"edit":this.buttonText="UPDATE",this.successMessage="One row updated!!!",this.setDefaultValue(this.configData.defaultData),this.header_name="EDIT"}},bt.prototype.openDialog=function(t){this.dialogRef=this.dialog.open(yt,{width:"250px",data:{msg:t}}),this.dialogRef.afterClosed().subscribe(function(t){})},bt.prototype.setDefaultValue=function(t){this.subscriptionCatForm.patchValue({name:t.name,priority:t.priority,status:t.status})},bt.prototype.inputBlur=function(t){this.subscriptionCatForm.controls[t].markAsUntouched()},bt.prototype.generateForm=function(){this.subscriptionCatForm=this.formBuilder.group({name:["",Q.Validators.required],priority:["",Q.Validators.required],status:[]})},bt.prototype.onSubmit=function(){var e=this;for(var t in this.subscriptionCatForm.controls)this.subscriptionCatForm.controls[t].markAsTouched();if(!this.subscriptionCatForm.invalid){this.subscriptionCatForm.value.status?this.subscriptionCatForm.value.status=parseInt("1"):this.subscriptionCatForm.value.status=parseInt("0");var a={source:this.configData.source,data:Object.assign(this.subscriptionCatForm.value,this.configData.condition)};this.newsletterService.addData(this.configData.endpoint,a).subscribe(function(t){"success"==t.status?(e.openDialog(e.successMessage),setTimeout(function(){e.dialogRef.close()},2e3),e.router.navigate([e.configData.callBack])):alert("Some error occurred. Please try angain.")},function(t){alert("Some error occurred. Please try angain.")})}},bt.decorators=[{type:tt.Component,args:[{selector:"lib-add-edit-subcategory",template:'<mat-card>\n  <mat-toolbar color="primary" style="justify-content: center; align-items: center;">\n    <h2 class="headerSpan">{{ header_name }}</h2>\n  </mat-toolbar>\n  <span class="formspan">\n    <mat-card-content class="example-container">\n\n      <form autocomplete="off" [formGroup]="subscriptionCatForm">\n\n\n        \x3c!-- Name  --\x3e\n        <mat-form-field>\n          <mat-label>Name</mat-label>\n          <input matInput placeholder="name" formControlName="name" (blur)="inputBlur(\'name\')">\n          <mat-error *ngIf="!subscriptionCatForm.controls[\'name\'].valid\n          && subscriptionCatForm.controls[\'name\'].errors.required"> Name is required.</mat-error>\n        </mat-form-field>\n\n\n        \x3c!-- Priority --\x3e\n\n        <mat-form-field>\n          <mat-label>Priority</mat-label>\n          <input matInput placeholder="priority" type="number" formControlName="priority" (blur)="inputBlur(\'priority\')">\n          <mat-error *ngIf="!subscriptionCatForm.controls[\'priority\'].valid\n          && subscriptionCatForm.controls[\'priority\'].errors.required"> Priority is required.</mat-error>\n        </mat-form-field>\n\n        \x3c!-- Status  --\x3e\n        <mat-label>Status</mat-label>\n        <mat-checkbox formControlName="status">Active</mat-checkbox><br>\n\n\n        \x3c!-- Button  --\x3e\n        <button type="button" class="submitbtn" class="submitbtn" mat-raised-button\n          color="primary" (click)="onSubmit()">{{buttonText}}</button>\n        <button type="reset" class="submitbtn" class="submitbtn" mat-raised-button color="primary">RESET</button>\n      </form>\n\n    </mat-card-content>\n  </span>\n</mat-card>',styles:[".example-container{display:flex;flex-direction:column}.example-container>*{width:100%}.main-class .submitbtn{display:block;width:170px;margin:10px auto;background:#3f50b5!important;color:#fff}.main-class .material-icons{cursor:pointer}.formspan{background-color:#e7e9ea;border:6px solid #fff;border-bottom:10px solid #fff;display:inline-block;width:100%;position:relative;z-index:9}.formspan .example-container{display:flex;flex-direction:column;width:98%;padding:14px;margin-bottom:0}.formspan .form-field-span,.formspan .mat-form-field{display:inline-block;position:relative;text-align:left;width:98%;background:#fff;margin-bottom:9px;padding:1px 14px}.formspan .form-field-span .mat-checkbox,.formspan .form-field-span .mat-radio-button{padding-right:15px;padding-bottom:15px;display:inline-block}.formspan .mat-form-field-wrapper{padding-bottom:0!important}.form-field-span .mat-error{font-size:13px!important}.mat-error{color:#f44336;font-size:13px!important}button.submitbtn.mat-raised-button.mat-primary{margin-right:15px}h1{color:#3f50b4}.files-view{background-repeat:no-repeat;background-size:cover;background-position:center;height:auto!important;width:82%;margin:20px auto;border-radius:10px;display:flex;justify-content:center;align-items:stretch;flex-wrap:wrap}.files-view .mat-card{z-index:9;margin:10px!important;display:flex;flex-wrap:wrap;justify-content:center;width:27%;position:relative}.files-view .mat-card .mat-card-actions,.files-view .mat-card .mat-card-titlt{display:inline-block;width:100%}.files-view .mat-card .mat-card-subtitle{display:inline-block;width:100%;text-align:center}.closecard{position:absolute;top:-10px;right:-8px;background:#464545;height:25px;width:25px;border-radius:50%;border:1px solid #696969;color:#fff;text-align:center;box-shadow:0 2px 6px #00000070;cursor:pointer}.closecard i{font-size:18px;line-height:27px}"]}]}],bt.ctorParameters=function(){return[{type:Q.FormBuilder},{type:nt},{type:$.Router},{type:X.MatDialog}]},bt.propDecorators={config:[{type:tt.Input}]},bt);function bt(t,e,a,r){this.formBuilder=t,this.newsletterService=e,this.router=a,this.dialog=r,this.buttonText="SUBMIT",this.header_name="Add Subscription Category",this.successMessage="Submitted Successfully!!!"}var yt=(xt.prototype.onNoClick=function(){this.dialogRef.close()},xt.decorators=[{type:tt.Component,args:[{selector:"app-modal",template:"<h1 mat-dialog-title>MESSAGE</h1>\n<div mat-dialog-content>\n   <p>{{ data.msg }}</p>\n</div>\n\n"}]}],xt.ctorParameters=function(){return[{type:X.MatDialogRef},{type:undefined,decorators:[{type:tt.Inject,args:[X.MAT_DIALOG_DATA]}]}]},xt);function xt(t,e){this.dialogRef=t,this.data=e}var wt=(Object.defineProperty(vt.prototype,"config",{set:function(t){this.SubsCatListConfig={apiUrl:t.apiBaseUrl,listEndPoint:t.listEndPoint,datasource:t.datasource,tableName:t.tableName,listArray_skip:["_id","userId","created_at","id","updated_at","image","name_search"],listArray_modify_header:{name:"Name",priority:"Priority",status:"Status",date_added:"Date"},admintablenameTableName:"admin",statusarr:[{val:1,name:"Active"},{val:0,name:"Inactive"}],updateurl:t.updateEndpoint,editUrl:t.editUrl,jwtToken:t.jwtToken,deleteEndPoint:t.deleteEndPoint,view:t.view,search_settings:{textsearch:[{label:"name...",field:"name_search"}],selectsearch:[{label:"Search By Status",field:"status",values:[{val:1,name:"Active"},{val:0,name:"Inactive"}]}]},pendingmodelapplicationarray_detail_datatype:[{key:"image",value:"image",fileurl:"https://s3.us-east-2.amazonaws.com/crmfiles.influxhostserver/testimonial/"}],detail_header:["_id","name_search"]},this.loader=!1},enumerable:!0,configurable:!0}),vt.prototype.ngOnInit=function(){},vt.decorators=[{type:tt.Component,args:[{selector:"lib-listing-subcategory",template:'<mat-card *ngIf="loader==true">\n    <mat-spinner class="spinner"></mat-spinner>\n</mat-card>\n\n\n\n\x3c!-- ------------------------lib listing being called------------------------ --\x3e\n<mat-card *ngIf="loader==false">\n    <lib-listing class="formfilterdiv"\n        *ngIf="SubsCatListConfig.datasource !=null && SubsCatListConfig.datasource.length > 0"\n        [datasource]="SubsCatListConfig.datasource" [skip]="SubsCatListConfig.listArray_skip"\n        [modify_header_array]="SubsCatListConfig.listArray_modify_header" [sourcedata]="SubsCatListConfig.tableName"\n        [statusarr]="SubsCatListConfig.statusarr" [jwttoken]="SubsCatListConfig.jwtToken"\n        [apiurl]="SubsCatListConfig.apiUrl" [editroute]="SubsCatListConfig.editUrl"\n        [deleteendpoint]="SubsCatListConfig.deleteEndPoint"\n        [date_search_source]="SubsCatListConfig.view"\n       [date_search_endpoint]="SubsCatListConfig.listEndPoint"\n       [search_settings]="SubsCatListConfig.search_settings"\n       [detail_datatype]="SubsCatListConfig.pendingmodelapplicationarray_detail_datatype"\n       [detail_skip_array]="SubsCatListConfig.detail_header">\n    </lib-listing>\n\x3c!-- -----------------------------------------------------------------------------\x3e\n\n    <h2 *ngIf="SubsCatListConfig.datasource.length == 0">No record found.</h2>\n</mat-card>',styles:[""]}]}],vt.ctorParameters=function(){return[]},vt.propDecorators={config:[{type:tt.Input}]},vt);function vt(){this.loader=!0}var kt=(_t.prototype.ngOnInit=function(){switch(this.generateForm(),this.getGroup(),this.configData.action){case"add":this.buttonText="SUBMIT",this.header_name="Add a Group";break;case"edit":this.buttonText="UPDATE",this.setDefaultValue(this.configData.defaultData),this.header_name="Change/Remove Group"}},Object.defineProperty(_t.prototype,"config",{set:function(t){this.configData=t},enumerable:!0,configurable:!0}),_t.prototype.generateForm=function(){this.subGroupForm=this.formBuilder.group({fullname:["",[Q.Validators.required]],phone:["",[Q.Validators.required]],email:["",[Q.Validators.required,Q.Validators.email]],company:["",[Q.Validators.required]],group:[]})},_t.prototype.setDefaultValue=function(t){this.subGroupForm.patchValue({fullname:t.fullname,phone:t.phone,email:t.email,company:t.company,group:t.group})},_t.prototype.openDialog=function(t){this.dialogRef=this.dialog.open(St,{width:"250px",data:{msg:t}}),this.dialogRef.afterClosed().subscribe(function(t){})},_t.prototype.inputBlur=function(t){this.subGroupForm.controls[t].markAsUntouched()},_t.prototype.onSubmit=function(){var e=this;for(var t in this.subGroupForm.controls)this.subGroupForm.controls[t].markAsTouched();if(0==this.subGroupForm.value.group&&(this.successMessage="Removed Group!!!"),!this.subGroupForm.invalid){var a={source:this.configData.source,data:Object.assign(this.subGroupForm.value,this.configData.condition),sourceobj:["group"]};this.newsService.addData(this.configData.endpoint,a).subscribe(function(t){"success"==t.status?(e.openDialog(e.successMessage),setTimeout(function(){e.dialogRef.close()},2e3),e.router.navigate([e.configData.callBack])):alert("Some error occurred. Please try angain.")},function(t){alert("Some error occurred. Please try angain.")})}},_t.prototype.getGroup=function(){var e=this,t={source:this.configData.group,token:this.cookieService.get("jwtToken")};this.newsService.getData(this.configData.endpoint2+"datalist",t).subscribe(function(t){e.group_array=t.res})},_t.decorators=[{type:tt.Component,args:[{selector:"lib-add-edit-subscriptiongroup",template:'<mat-card>\n  <mat-toolbar color="primary" style="justify-content: center; align-items: center;">\n    <h2 class="headerSpan">{{ header_name }}</h2>\n  </mat-toolbar>\n  <span class="formspan">\n    <mat-card-content class="example-container">\n      <form autocomplete="off" [formGroup]="subGroupForm">\n        \x3c!-- Name --\x3e\n        <mat-form-field>\n          <mat-label>Name</mat-label>\n          <input matInput formControlName="fullname" (blur)="inputBlur(\'fullname\')">\n          <mat-error *ngIf="!subGroupForm.controls[\'fullname\'].valid\n          && subGroupForm.controls[\'fullname\'].errors.required"> Name is required.</mat-error>\n        </mat-form-field>\n\n        \x3c!-- Phone --\x3e\n        <mat-form-field>\n          <mat-label>Phone</mat-label>\n          <input matInput formControlName="phone" (blur)="inputBlur(\'phone\')">\n          <mat-error *ngIf="!subGroupForm.controls[\'phone\'].valid\n          && subGroupForm.controls[\'phone\'].errors.required"> Phone is required.</mat-error>\n        </mat-form-field>\n\n        \x3c!-- Email --\x3e\n        <mat-form-field>\n          <mat-label>Email</mat-label>\n          <input matInput formControlName="email" (blur)="inputBlur(\'email\')">\n          <mat-error *ngIf="!subGroupForm.controls[\'email\'].valid\n          && subGroupForm.controls[\'email\'].errors.required"> Email is required.</mat-error>\n          <mat-error *ngIf="!subGroupForm.controls[\'email\'].valid\n          && subGroupForm.controls[\'email\'].errors.email"> Email is not valid.</mat-error>\n        </mat-form-field>\n\n        \x3c!-- Company --\x3e\n        <mat-form-field>\n          <mat-label>Company</mat-label>\n          <input matInput formControlName="company" (blur)="inputBlur(\'company\')">\n          <mat-error *ngIf="!subGroupForm.controls[\'company\'].valid\n          && subGroupForm.controls[\'company\'].errors.required">           <mat-label>Company</mat-label>\n          is required.</mat-error>\n        </mat-form-field>\n\n        \x3c!-- Group  --\x3e\n        <mat-form-field>\n          <mat-label>Group</mat-label>\n          <select matNativeControl formControlName="group" required>\n               <option value=0 selected>Remove Group</option>\n              <option value="{{  item._id }}" *ngFor="let item of group_array">{{ item.name  }}</option>\n            \n            </select>\n        </mat-form-field>\n\n\n\n        <button type="submit" class="submitbtn" class="submitbtn" mat-raised-button\n          color="primary"  (click)="onSubmit()">{{buttonText}}</button>\n        <button type="reset" class="submitbtn" class="submitbtn" mat-raised-button color="primary">RESET</button>\n\n\n\n\n      </form>\n      \x3c!-- ---------------------------------------FORM ENDS HERE----------------------------- --\x3e\n    </mat-card-content>\n  </span>\n</mat-card>',styles:[".example-container{display:flex;flex-direction:column}.example-container>*{width:100%}.main-class .submitbtn{display:block;width:170px;margin:10px auto;background:#3f50b5!important;color:#fff}.main-class .material-icons{cursor:pointer}.formspan{background-color:#e7e9ea;border:6px solid #fff;border-bottom:10px solid #fff;display:inline-block;width:100%;position:relative;z-index:9}.formspan .example-container{display:flex;flex-direction:column;width:98%;padding:14px;margin-bottom:0}.formspan .form-field-span,.formspan .mat-form-field{display:inline-block;position:relative;text-align:left;width:98%;background:#fff;margin-bottom:9px;padding:1px 14px}.formspan .form-field-span .mat-checkbox,.formspan .form-field-span .mat-radio-button{padding-right:15px;padding-bottom:15px;display:inline-block}.formspan .mat-form-field-wrapper{padding-bottom:0!important}.form-field-span .mat-error{font-size:13px!important}.mat-error{color:#f44336;font-size:13px!important}button.submitbtn.mat-raised-button.mat-primary{margin-right:15px}h1{color:#3f50b4}.files-view{background-repeat:no-repeat;background-size:cover;background-position:center;height:auto!important;width:82%;margin:20px auto;border-radius:10px;display:flex;justify-content:center;align-items:stretch;flex-wrap:wrap}.files-view .mat-card{z-index:9;margin:10px!important;display:flex;flex-wrap:wrap;justify-content:center;width:27%;position:relative}.files-view .mat-card .mat-card-actions,.files-view .mat-card .mat-card-titlt{display:inline-block;width:100%}.files-view .mat-card .mat-card-subtitle{display:inline-block;width:100%;text-align:center}.closecard{position:absolute;top:-10px;right:-8px;background:#464545;height:25px;width:25px;border-radius:50%;border:1px solid #696969;color:#fff;text-align:center;box-shadow:0 2px 6px #00000070;cursor:pointer}.closecard i{font-size:18px;line-height:27px}"]}]}],_t.ctorParameters=function(){return[{type:Q.FormBuilder},{type:K.CookieService},{type:nt},{type:$.Router},{type:X.MatDialog}]},_t.propDecorators={config:[{type:tt.Input}]},_t);function _t(t,e,a,r,n){this.formBuilder=t,this.cookieService=e,this.newsService=a,this.router=r,this.dialog=n,this.buttonText="SUBMIT",this.header_name="Add a group to subscriptions",this.group_array=[],this.successMessage="Group Added!!!"}var St=(Ct.prototype.onNoClick=function(){this.dialogRef.close()},Ct.decorators=[{type:tt.Component,args:[{selector:"app-modal",template:"<h1 mat-dialog-title>MESSAGE</h1>\n<div mat-dialog-content>\n   <p>{{ data.msg }}</p>\n</div>\n\n"}]}],Ct.ctorParameters=function(){return[{type:X.MatDialogRef},{type:undefined,decorators:[{type:tt.Inject,args:[X.MAT_DIALOG_DATA]}]}]},Ct);function Ct(t,e){this.dialogRef=t,this.data=e}var Ft=Z,Dt=(Object.defineProperty(Tt.prototype,"config",{set:function(t){this.configData=t},enumerable:!0,configurable:!0}),Tt.prototype.ngOnInit=function(){var t=this;switch(this.weekdays(),"add"==this.configData.action&&(this.time=this.datepipe.transform(new Date,"H:mm")),this.getGroupName(),this.getSenderAddress(),this.cookieValue=this.cookieService.getAll(),this.generateForm(),this.newsForm.value.cookiemail=this.cookieService.get("get_email"),this.configData.action){case"add":this.buttonText="SUBMIT",this.header_name="Add a Newsletter",this.message="Newsletter Added Successfully!!!";break;case"edit":this.days_json=null,this.buttonText="UPDATE",this.time="",this.message="Newsletter Information Updated!!!","daily"==this.configData.defaultData.newsfrequency?this.frequency_flag=!1:this.frequency_flag=!0,setTimeout(function(){t.setDefaultValue(t.configData.defaultData)},1e3),null!=this.configData.defaultData.days_of_weeks&&(this.frequency_flag=!0),setTimeout(function(){t.days_json=t.configData.defaultData.days_of_weeks},1e3)}},Tt.prototype.weekdays=function(){this.days_json=[{day:"Sunday",value:1,isSelected:!1},{day:"Monday",value:2,isSelected:!1},{day:"Tuesday",value:3,isSelected:!1},{day:"Wednesday",value:4,isSelected:!1},{day:"Thursday",value:5,isSelected:!0},{day:"Friday",value:6,isSelected:!1},{day:"Saturday",value:7,isSelected:!1}]},Tt.prototype.openSnackBar=function(t,e){this.snackBar.open(t,e,{duration:2e3})},Tt.prototype.open=function(){this.atp.open().afterClose().subscribe(function(t){})},Tt.prototype.openDialog=function(t){this.dialogRef=this.dialog.open(Et,{width:"1000px",data:{msg:t,share_group:this.share_with_group,automatic_newsletter:this.automatic_newsletter_to,senders_address:this.senders_address_to,reply_address:this.reply_address_to}}),this.dialogRef.afterClosed().subscribe(function(t){})},Tt.prototype.preview_all=function(){this.openDialog(Object.values(this.newsForm.value))},Tt.prototype.getGroupName=function(){var a=this,t={source:this.configData.group_table};this.newsService.getData(this.configData.endpoint2+"datalist",t).subscribe(function(t){var e;e=t,a.group_name_array=e.res})},Tt.prototype.getSenderAddress=function(){var a=this,t={source:this.configData.sender_table};this.newsService.getData(this.configData.endpoint2+"datalist",t).subscribe(function(t){var e;e=t,a.sender_name_array=e.res})},Tt.prototype.generateForm=function(){this.newsForm=this.formBuilder.group({newstitle:["",[Q.Validators.required]],newssubject:["",[Q.Validators.required]],share_news:[],publishdate_normal_format:[],senderaddress:[],publishdate:["",[Q.Validators.required]],settime:[this.time],content:["",[Q.Validators.required]],sendnews:[],newsfrequency:[],days_of_weeks:[],timeofday:[this.time],timezone:[],startdate:["",[Q.Validators.required]],enddate:["",[Q.Validators.required]],reply:[],status:[1]})},Tt.prototype.setDefaultValue=function(t){this.tmp_date=t.publishdate;var e=new Date(this.tmp_date);t.publishdate=e,this.tmp_date=t.startdate,e=new Date(this.tmp_date),t.startdate=e,this.tmp_date=t.enddate,e=new Date(this.tmp_date),t.enddate=e,this.newsForm.patchValue({newstitle:t.newstitle,newssubject:t.newssubject,share_news:t.share_news,senderaddress:t.senderaddress,publishdate:t.publishdate,settime:t.settime,content:t.content,days_of_weeks:t.days_of_weeks,sendnews:t.sendnews,newsfrequency:t.newsfrequency,timeofday:t.timeofday,timezone:t.timezone,startdate:t.startdate,enddate:t.enddate,reply:t.reply})},Tt.prototype.inputBlur=function(t){this.newsForm.controls[t].markAsUntouched()},Tt.prototype.getDays=function(t){!0===t.isSelected?t.isSelected=!1:t.isSelected=!0},Tt.prototype.onSubmit=function(){var e=this;if(this.days_array=[],(this.false_count=0)!=this.frequency_flag)for(var t=0;t<this.days_json.length;t++)this.days_json[t].isSelected?(this.days_array.push(this.days_json[t]),this.false_count--):this.days_array.push(this.days_json[t]),this.false_count++;if(7!=this.false_count){1==this.frequency_flag?this.newsForm.value.days_of_weeks=this.days_array:this.newsForm.value.days_of_weeks=null,this.newsForm.value.publishdate=Ft(this.newsForm.value.publishdate).format("MM/DD/YYYY"),this.newsForm.value.startdate=Ft(this.newsForm.value.startdate).format("MM/DD/YYYY"),this.newsForm.value.enddate=Ft(this.newsForm.value.enddate).format("MM/DD/YYYY");var a=Ft(this.newsForm.value.publishdate).unix();for(var r in this.newsForm.value.publishdate_normal_format=1e3*parseInt(a),this.newsForm.controls)this.newsForm.controls[r].markAsTouched();if(!this.newsForm.invalid){var n={source:this.configData.source,data:Object.assign(this.newsForm.value,this.configData.condition),sourceobj:["share_news","senderaddress"]};this.newsService.addData(this.configData.endpoint,n).subscribe(function(t){"success"==t.status?(e.openSnackBar(e.message,"OK"),e.router.navigate([e.configData.callBack])):alert("Some error occurred. Please try angain.")},function(t){alert("Some error occurred. Please try angain.")})}}},Tt.decorators=[{type:tt.Component,args:[{selector:"lib-add-edit-newsletterlib",template:'<mat-card>\n  <mat-toolbar color="primary" style="justify-content: center; align-items: center;">\n    <h2 class="headerSpan">{{ header_name }}</h2>\n  </mat-toolbar>\n  <span class="formspan">\n    <mat-card-content class="example-container">\n      <form autocomplete="off" [formGroup]="newsForm">\n\n\n\n        \x3c!-- Newsletter title  --\x3e\n        <mat-form-field>\n          <mat-label>Newsletter Title:</mat-label>\n          <input matInput formControlName="newstitle" (blur)="inputBlur(\'newstitle\')">\n          <mat-error *ngIf="!newsForm.controls[\'newstitle\'].valid\n          && newsForm.controls[\'newstitle\'].errors.required" > Title is required.</mat-error>\n        </mat-form-field>\n\n        \x3c!-- Newsletter Subject  --\x3e\n        <mat-form-field>\n          <mat-label>Newsletter Subject:</mat-label>\n          <input matInput formControlName="newssubject" (blur)="inputBlur(\'newssubject\')">\n          <mat-error *ngIf="!newsForm.controls[\'newssubject\'].valid\n          && newsForm.controls[\'newssubject\'].errors.required"> Subject is required.</mat-error>\n        </mat-form-field>\n\n\n        \x3c!-- share newsletter with --\x3e\n        <mat-form-field>\n          <mat-label>Share newsletter with group:</mat-label>\n          <mat-select matNativeControl required formControlName="share_news">\n            <mat-option value=0>Select a group</mat-option>\n            <mat-option value="{{i._id}}" *ngFor="let i of group_name_array" (click)="share_with_group=i.name">{{ i.name }}</mat-option>\n            </mat-select>\n        </mat-form-field>\n\n        \x3c!-- sender\'s address  --\x3e\n        <mat-form-field>\n          <mat-label>Sender\'s address</mat-label>\n          <mat-select matNativeControl required formControlName="senderaddress">\n            <mat-option value=0>Select a sender</mat-option>\n            <mat-option value="{{ i._id }}" *ngFor=\'let i of sender_name_array\' (click)="senders_address_to=i.email">{{ i.email }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n\n        \x3c!-- Set Publish Date  --\x3e\n        <mat-form-field>\n          <input matInput [matDatepicker]="picker" placeholder="Set publish date:" formControlName="publishdate" (blur)="inputBlur(\'publishdate\')">\n          <mat-datepicker-toggle matSuffix [for]="picker"></mat-datepicker-toggle>\n          <mat-datepicker #picker></mat-datepicker>\n          <mat-error *ngIf="!newsForm.controls[\'publishdate\'].valid\n          && newsForm.controls[\'publishdate\'].errors.required"> Publish Date is required.</mat-error>\n        </mat-form-field>\n\n\n        \x3c!-- Time Picker  --\x3e\n        <mat-form-field>\n          <mat-label>Set time:</mat-label>\n          <input matInput atp-time-picker  formControlName="settime"/>\n        </mat-form-field>\n       \n\n\n        \x3c!-- Content  --\x3e\n        <ck-editor formControlName="content" [config]="editorconfig" (blur)="inputBlur(\'content\')">        \n        </ck-editor>\n        <mat-error *ngIf="!newsForm.controls[\'content\'].valid\n        && newsForm.controls[\'content\'].errors.required && newsForm.controls[\'content\'].touched"> Content is required.</mat-error>\n\n\n\n        <h1> SET FREQUENCY </h1>\n        <hr>\n\n\n        \x3c!-- Automatically send newsletters to --\x3e\n        <mat-form-field>\n          <mat-label>Automatically send newsletter to members:</mat-label>\n          <mat-select matNativeControl required formControlName="sendnews" (blur)="inputBlur(\'sendnews\')">\n            <mat-option value=0>Select a group</mat-option>\n            <mat-option value="{{i._id}}" *ngFor="let i of group_name_array" (click)="automatic_newsletter_to=i.name">{{ i.name }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n\n        \x3c!-- Newsletter frequency  --\x3e\n        <mat-form-field>\n          <mat-label>Newsletter Frequency:</mat-label>\n          <mat-select matNativeControl required formControlName="newsfrequency">\n            <mat-option value="daily" (click)="frequency_flag=false;days_json={}">Daily</mat-option>\n            <mat-option value="weekly" (click)="weekdays();frequency_flag=true">Weekly</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n\n        \x3c!-- News letter Day of the week  --\x3e\n        <div class="dayofweek" *ngIf="frequency_flag==true">\n          <h5>NewsLetter day of the week</h5>\n          <mat-card-content class="date_wrapper" *ngFor="let day of days_json;let i = index">            \n            <mat-checkbox  [checked]="day.isSelected" [value]="day.value" (change)="getDays(day)"> {{day.day}}</mat-checkbox>         \n          </mat-card-content>\n          <div *ngIf="false_count==7" class="desc_error">\n            <mat-icon>error</mat-icon>\n            <p>Please select at least one day.</p>\n          </div>\n        </div>\n       \n\n\n        \x3c!-- News Letter time of the day --\x3e\n        <mat-form-field>\n          <mat-label>News Letter time of the day:</mat-label>\n          <input matInput atp-time-picker formControlName="timeofday" />\n        </mat-form-field>\n\n\n\n        \x3c!-- News Letter Time Zone --\x3e\n        <mat-form-field>\n          <mat-label>News Letter Time Zone</mat-label>\n          <mat-select matNativeControl required formControlName="timezone">\n            <mat-option value="Hawaii Standard Time">Hawaii Standard Time</mat-option>\n            <mat-option value="Alaska Standard Time">Alaska Standard Time</mat-option>\n            <mat-option value="Pacific Standard Time">Pacific Standard Time</mat-option>\n            <mat-option value="Mountain Standard Time">Mountain Standard Time</mat-option>\n            <mat-option value="Central Standard Time">Central Standard Time</mat-option>\n            <mat-option value="Eastern Standard Time">Eastern Standard Time</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        \x3c!-- News letter start Date --\x3e\n        <mat-form-field>\n          <input matInput [matDatepicker]="picker2" placeholder="Newsletter start date" formControlName="startdate" (blur)="inputBlur(\'startdate\')">\n          <mat-datepicker-toggle matSuffix [for]="picker2"></mat-datepicker-toggle>\n          <mat-datepicker #picker2></mat-datepicker>\n          <mat-error *ngIf="!newsForm.controls[\'startdate\'].valid\n          && newsForm.controls[\'startdate\'].errors.required"> Start Date is required.</mat-error>\n        </mat-form-field>\n\n        \x3c!-- News letter end Date --\x3e\n        <mat-form-field>\n          <input matInput [matDatepicker]="picker3" placeholder="Newsletter end date" formControlName="enddate" (blur)="inputBlur(\'enddate\')">\n          <mat-datepicker-toggle matSuffix [for]="picker3"></mat-datepicker-toggle>\n          <mat-datepicker #picker3></mat-datepicker>\n          <mat-error *ngIf="!newsForm.controls[\'enddate\'].valid\n          && newsForm.controls[\'enddate\'].errors.required"> End Date is required.</mat-error>\n        </mat-form-field>\n\n        \x3c!-- NewsLetter reply to email address  --\x3e\n\n        <mat-form-field>\n          <mat-label>Reply address</mat-label>\n          <mat-select matNativeControl required formControlName="reply">\n            <mat-option value=0>Select a sender</mat-option>\n            <mat-option value="{{ i._id }}" *ngFor=\'let i of sender_name_array\' (click)="reply_address_to=i.email">{{ i.email }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n\n\n\n\n\n        \x3c!-- Buttons  --\x3e\n        <button *ngIf="this.configData.action==\'add\'" [disabled]="!newsForm.valid" type="button" class="submitbtn" class="submitbtn" mat-raised-button color="primary" (click)="preview_all()">PREVIEW</button>\n        <button type="submit" class="submitbtn" class="submitbtn" mat-raised-button\n          color="primary" (click)="onSubmit()">{{buttonText}}</button>\n        <button type="reset" class="submitbtn" class="submitbtn" mat-raised-button color="primary">RESET</button>\n\n\n\n\n      </form>\n      \x3c!-- ---------------------------------------FORM ENDS HERE----------------------------- --\x3e\n    </mat-card-content>\n  </span>\n</mat-card>',styles:[".example-container{display:flex;flex-direction:column}.example-container>*{width:100%}.main-class .submitbtn{display:block;width:170px;margin:10px auto;background:#3f50b5!important;color:#fff}.main-class .material-icons{cursor:pointer}.formspan{background-color:#e7e9ea;border:6px solid #fff;border-bottom:10px solid #fff;display:inline-block;width:100%;position:relative;z-index:9}.formspan .example-container{display:flex;flex-direction:column;width:98%;padding:14px;margin-bottom:0}.formspan .form-field-span,.formspan .mat-form-field{display:inline-block;position:relative;text-align:left;width:98%;background:#fff;margin-bottom:9px;padding:1px 14px}.formspan .form-field-span .mat-checkbox,.formspan .form-field-span .mat-radio-button{padding-right:15px;padding-bottom:15px;display:inline-block}.formspan .mat-form-field-wrapper{padding-bottom:0!important}.form-field-span .mat-error{font-size:13px!important}.mat-error{color:#f44336;font-size:13px!important}button.submitbtn.mat-raised-button.mat-primary{margin-right:15px}h1{color:#3f50b4}.files-view{background-repeat:no-repeat;background-size:cover;background-position:center;height:auto!important;width:82%;margin:20px auto;border-radius:10px;display:flex;justify-content:center;align-items:stretch;flex-wrap:wrap}.files-view .mat-card{z-index:9;margin:10px!important;display:flex;flex-wrap:wrap;justify-content:center;width:27%;position:relative}.files-view .mat-card .mat-card-actions,.files-view .mat-card .mat-card-titlt{display:inline-block;width:100%}.files-view .mat-card .mat-card-subtitle{display:inline-block;width:100%;text-align:center}.closecard{position:absolute;top:-10px;right:-8px;background:#464545;height:25px;width:25px;border-radius:50%;border:1px solid #696969;color:#fff;text-align:center;box-shadow:0 2px 6px #00000070;cursor:pointer}.dayofweek{border:5px solid #663399;padding:10px}.closecard i{font-size:18px;line-height:27px}.date_wrapper .mat-checkbox{margin-right:15px}.desc_error{color:#d8000c;border:2px solid #d8000c;background-color:#ff97ce;padding:0 10px;display:inline-flex;align-items:center}.desc_error .mat-icon{margin-right:10px}table{border-collapse:collapse;width:100%;border:1px solid #ddd}td,th{text-align:left;padding:8px;border:1px solid #ddd;color:#0b0a41}tr:nth-child(even){background-color:#f2f2f2}th{background-color:#4caf50;color:#fff}"]}]}],Tt.ctorParameters=function(){return[{type:et.AmazingTimePickerService},{type:nt},{type:Y.DatePipe},{type:K.CookieService},{type:Q.FormBuilder},{type:$.Router},{type:W.MatSnackBar},{type:X.MatDialog}]},Tt.propDecorators={config:[{type:tt.Input}]},Tt);function Tt(t,e,a,r,n,o,i,s){this.atp=t,this.newsService=e,this.datepipe=a,this.cookieService=r,this.formBuilder=n,this.router=o,this.snackBar=i,this.dialog=s,this.header_name="Newsletter",this.buttonText="SAVE",this.group_name_array=[],this.sender_name_array=[],this.frequency_flag=!1,this.days_array=[],this.editorconfig={},this.Editor=J,this.editorConfig={placeholder:"Content:"},this.model={editorData:""},this.editorconfig.extraAllowedContent="*[class](*),span;ul;li;table;td;style;*[id];*(*);*{*}"}var Et=(jt.prototype.onNoClick=function(){this.dialogRef.close()},jt.decorators=[{type:tt.Component,args:[{selector:"app-preview",template:"<h1 mat-dialog-title>PREVIEW DETAILS</h1>\n<div mat-dialog-content>\n\n   <table >\n     \n      <tr>\n         <td>Newsletter Title</td>\n         <td>:</td>\n         <td>{{ data.msg[0] }}</td>\n     \n         <td> Newsletter Subject </td>\n         <td>:</td>\n         <td>{{ data.msg[1] }}</td>\n      </tr>\n\n      <tr>\n         <td> Share Newsletter With Group </td>\n         <td>:</td>\n         <td> {{ data.share_group }}</td>\n    \n         <td> Sender's Address </td>\n         <td>:</td>\n         <td>{{ data.senders_address }}</td>\n      </tr>\n\n      <tr>\n         <td> Publish Date </td>\n         <td>:</td>\n         <td>{{ data.msg[5] | date:'shortDate' }}</td>\n     \n         <td> Set Time </td>\n         <td>:</td>\n         <td>{{ data.msg[6] }}</td>\n      </tr>\n\n      <tr>\n         <td> Content </td>\n         <td>:</td>\n         <td>{{ data.msg[7] }}</td>\n  \n            <td> Automatically Send Newsletter To Members</td>\n            <td>:</td>\n            <td>{{ data.automatic_newsletter }}</td>\n         </tr>\n\n         <tr>\n            <td> Newsletter Frequency</td>\n            <td>:</td>\n            <td>{{ data.msg[9] }}</td>\n      \n            <td> News Letter Time Of The Day </td>\n            <td>:</td>\n            <td>{{ data.msg[11] }}</td>\n         </tr>\n\n         <tr>\n            <td> News Letter Time Zone </td>\n            <td>:</td>\n            <td>{{ data.msg[12] }}</td>\n        \n            <td> Newsletter Start Date </td>\n            <td>:</td>\n            <td>{{ data.msg[13]  | date:'shortDate'}}</td>\n         </tr>\n\n         <tr>\n            <td> Newsletter End Date </td>\n            <td>:</td>\n            <td>{{ data.msg[14]  | date:'shortDate'}}</td>\n       \n            <td> Reply address </td>\n            <td>:</td>\n            <td>{{  data.reply_address }}</td>\n         </tr>\n\n    \n    \n   </table>\n\n</div>",styles:[".example-container{display:flex;flex-direction:column}.example-container>*{width:100%}.main-class .submitbtn{display:block;width:170px;margin:10px auto;background:#3f50b5!important;color:#fff}.main-class .material-icons{cursor:pointer}.formspan{background-color:#e7e9ea;border:6px solid #fff;border-bottom:10px solid #fff;display:inline-block;width:100%;position:relative;z-index:9}.formspan .example-container{display:flex;flex-direction:column;width:98%;padding:14px;margin-bottom:0}.formspan .form-field-span,.formspan .mat-form-field{display:inline-block;position:relative;text-align:left;width:98%;background:#fff;margin-bottom:9px;padding:1px 14px}.formspan .form-field-span .mat-checkbox,.formspan .form-field-span .mat-radio-button{padding-right:15px;padding-bottom:15px;display:inline-block}.formspan .mat-form-field-wrapper{padding-bottom:0!important}.form-field-span .mat-error{font-size:13px!important}.mat-error{color:#f44336;font-size:13px!important}button.submitbtn.mat-raised-button.mat-primary{margin-right:15px}h1{color:#3f50b4}.files-view{background-repeat:no-repeat;background-size:cover;background-position:center;height:auto!important;width:82%;margin:20px auto;border-radius:10px;display:flex;justify-content:center;align-items:stretch;flex-wrap:wrap}.files-view .mat-card{z-index:9;margin:10px!important;display:flex;flex-wrap:wrap;justify-content:center;width:27%;position:relative}.files-view .mat-card .mat-card-actions,.files-view .mat-card .mat-card-titlt{display:inline-block;width:100%}.files-view .mat-card .mat-card-subtitle{display:inline-block;width:100%;text-align:center}.closecard{position:absolute;top:-10px;right:-8px;background:#464545;height:25px;width:25px;border-radius:50%;border:1px solid #696969;color:#fff;text-align:center;box-shadow:0 2px 6px #00000070;cursor:pointer}.dayofweek{border:5px solid #663399;padding:10px}.closecard i{font-size:18px;line-height:27px}.date_wrapper .mat-checkbox{margin-right:15px}.desc_error{color:#d8000c;border:2px solid #d8000c;background-color:#ff97ce;padding:0 10px;display:inline-flex;align-items:center}.desc_error .mat-icon{margin-right:10px}table{border-collapse:collapse;width:100%;border:1px solid #ddd}td,th{text-align:left;padding:8px;border:1px solid #ddd;color:#0b0a41}tr:nth-child(even){background-color:#f2f2f2}th{background-color:#4caf50;color:#fff}"]}]}],jt.ctorParameters=function(){return[{type:X.MatDialogRef},{type:undefined,decorators:[{type:tt.Inject,args:[X.MAT_DIALOG_DATA]}]}]},jt);function jt(t,e){this.dialogRef=t,this.data=e}var Mt=(Object.defineProperty(It.prototype,"config",{set:function(t){this.newsConfigForm={apiUrl:t.apiBaseUrl,listEndPoint:t.listEndPoint,datasource:t.datasource,tableName:t.tableName,listArray_skip:["_id","userId","created_at","id","updated_at","title_search","publishdate_normal_format"],listArray_modify_header:{title:"Title",subject:"Subject",userGroup:"User Group",time:"Publish Time",publishdate:"Publish Date",status:"Status"},admintablenameTableName:"admin",statusarr:[{val:1,name:"Active"},{val:0,name:"Inactive"}],updateurl:t.updateEndpoint,editUrl:t.editUrl,jwtToken:t.jwtToken,deleteEndPoint:t.deleteEndPoint,view:t.view,detail_header:["_id","publishdate_normal_format","title_search"],date_search_source:t.view,date_search_endpoint:"datalist",search_settings:{textsearch:[{label:"Search by title...",field:"title_search"},{label:"Search by subject...",field:"subject"}],datesearch:[{startdatelabel:"Start Date",enddatelabel:"End Date",submit:"Search By Date",field:"publishdate_normal_format"}]}},this.loader=!1},enumerable:!0,configurable:!0}),It.prototype.ngOnInit=function(){},It.decorators=[{type:tt.Component,args:[{selector:"lib-listing-newsletterlib",template:'<mat-card *ngIf="loader==true">\n  <mat-spinner class="spinner"></mat-spinner>\n</mat-card>\n\n\n\n\x3c!-- ------------------------lib listing being called------------------------ --\x3e\n<mat-card *ngIf="loader==false">\n  <lib-listing class="formfilterdiv"\n      *ngIf="newsConfigForm.datasource !=null && newsConfigForm.datasource.length > 0"\n      [datasource]="newsConfigForm.datasource" [skip]="newsConfigForm.listArray_skip"\n      [modify_header_array]="newsConfigForm.listArray_modify_header" [sourcedata]="newsConfigForm.tableName"\n      [statusarr]="newsConfigForm.statusarr" [jwttoken]="newsConfigForm.jwtToken"\n      [apiurl]="newsConfigForm.apiUrl" [editroute]="newsConfigForm.editUrl"\n      [deleteendpoint]="newsConfigForm.deleteEndPoint"\n      [date_search_source]="newsConfigForm.view"\n      [date_search_endpoint]="newsConfigForm.listEndPoint"\n      [search_settings]="newsConfigForm.search_settings"\n      [detail_skip_array]="newsConfigForm.detail_header">\n  </lib-listing>\n\x3c!-- -----------------------------------------------------------------------------\x3e\n\n\n  <h2 *ngIf="newsConfigForm.datasource.length == 0">No record found.</h2>\n</mat-card>',styles:[""]}]}],It.ctorParameters=function(){return[]},It.propDecorators={config:[{type:tt.Input}]},It);function It(){this.loader=!0}var Nt=(Ut.prototype.ngOnInit=function(){switch(this.generateForm(),this.configData.action){case"add":break;case"edit":this.buttonText="UPDATE",this.successMessage="One row updated!!!",this.setDefaultValue(this.configData.defaultData),this.header_name="Edit Sender's Information"}},Ut.prototype.generateForm=function(){this.senderForm=this.formBuilder.group({name:["",[Q.Validators.required]],email:["",[Q.Validators.required,Q.Validators.email]]})},Object.defineProperty(Ut.prototype,"config",{set:function(t){this.configData=t},enumerable:!0,configurable:!0}),Ut.prototype.openDialog=function(t){this.dialogRef=this.dialog.open(qt,{width:"250px",data:{msg:t}}),this.dialogRef.afterClosed().subscribe(function(t){})},Ut.prototype.inputBlur=function(t){this.senderForm.controls[t].markAsUntouched()},Ut.prototype.setDefaultValue=function(t){this.senderForm.patchValue({name:t.name,email:t.email})},Ut.prototype.onSubmit=function(){var e=this;for(var t in this.senderForm.controls)this.senderForm.controls[t].markAsTouched();if(!this.senderForm.invalid){var a={source:this.configData.source,data:Object.assign(this.senderForm.value,this.configData.condition),sourceobj:["group"]};this.newsService.addData(this.configData.endpoint,a).subscribe(function(t){"success"==t.status?(e.openDialog(e.successMessage),setTimeout(function(){e.dialogRef.close()},2e3),e.router.navigate([e.configData.callBack])):alert("Some error occurred. Please try angain.")},function(t){alert("Some error occurred. Please try angain.")})}},Ut.decorators=[{type:tt.Component,args:[{selector:"lib-add-edit-sender",template:'<mat-card>\n  <mat-toolbar color="primary" style="justify-content: center; align-items: center;">\n    <h2 class="headerSpan">{{ header_name }}</h2>\n  </mat-toolbar>\n  <span class="formspan">\n    <mat-card-content class="example-container">\n      <form autocomplete="off" [formGroup]="senderForm">\n        \x3c!-- Senders name --\x3e\n        <mat-form-field>\n          <mat-label>Sender\'s Name</mat-label>\n          <input matInput formControlName="name" (blur)="inputBlur(\'name\')">\n          <mat-error *ngIf="!senderForm.controls[\'name\'].valid\n          && senderForm.controls[\'name\'].errors.required" > Name is required.</mat-error>\n        </mat-form-field>\n\n        \x3c!-- Sender\'s email  --\x3e\n        <mat-form-field>\n          <mat-label>Email</mat-label>\n          <input matInput formControlName="email" (blur)="inputBlur(\'email\')">\n          <mat-error *ngIf="!senderForm.controls[\'email\'].valid\n          && senderForm.controls[\'email\'].errors.required" > Email is required.</mat-error>\n          <mat-error *ngIf="!senderForm.controls[\'email\'].valid\n          && senderForm.controls[\'email\'].errors.email" > Email is not Valid.</mat-error>\n        </mat-form-field>\n\n\n        \x3c!-- Button  --\x3e\n        <button type="submit" class="submitbtn" class="submitbtn" mat-raised-button color="primary"\n          (click)="onSubmit()">{{buttonText}}</button>\n        <button type="reset" class="submitbtn" class="submitbtn" mat-raised-button color="primary">RESET</button>\n\n      </form>\n    </mat-card-content>\n  </span>\n</mat-card>',styles:[".example-container{display:flex;flex-direction:column}.example-container>*{width:100%}.main-class .submitbtn{display:block;width:170px;margin:10px auto;background:#3f50b5!important;color:#fff}.main-class .material-icons{cursor:pointer}.formspan{background-color:#e7e9ea;border:6px solid #fff;border-bottom:10px solid #fff;display:inline-block;width:100%;position:relative;z-index:9}.formspan .example-container{display:flex;flex-direction:column;width:98%;padding:14px;margin-bottom:0}.formspan .form-field-span,.formspan .mat-form-field{display:inline-block;position:relative;text-align:left;width:98%;background:#fff;margin-bottom:9px;padding:1px 14px}.formspan .form-field-span .mat-checkbox,.formspan .form-field-span .mat-radio-button{padding-right:15px;padding-bottom:15px;display:inline-block}.formspan .mat-form-field-wrapper{padding-bottom:0!important}.form-field-span .mat-error{font-size:13px!important}.mat-error{color:#f44336;font-size:13px!important}button.submitbtn.mat-raised-button.mat-primary{margin-right:15px}h1{color:#3f50b4}.files-view{background-repeat:no-repeat;background-size:cover;background-position:center;height:auto!important;width:82%;margin:20px auto;border-radius:10px;display:flex;justify-content:center;align-items:stretch;flex-wrap:wrap}.files-view .mat-card{z-index:9;margin:10px!important;display:flex;flex-wrap:wrap;justify-content:center;width:27%;position:relative}.files-view .mat-card .mat-card-actions,.files-view .mat-card .mat-card-titlt{display:inline-block;width:100%}.files-view .mat-card .mat-card-subtitle{display:inline-block;width:100%;text-align:center}.closecard{position:absolute;top:-10px;right:-8px;background:#464545;height:25px;width:25px;border-radius:50%;border:1px solid #696969;color:#fff;text-align:center;box-shadow:0 2px 6px #00000070;cursor:pointer}.closecard i{font-size:18px;line-height:27px}"]}]}],Ut.ctorParameters=function(){return[{type:Q.FormBuilder},{type:nt},{type:$.Router},{type:X.MatDialog}]},Ut.propDecorators={config:[{type:tt.Input}]},Ut);function Ut(t,e,a,r){this.formBuilder=t,this.newsService=e,this.router=a,this.dialog=r,this.buttonText="SUBMIT",this.header_name="Add Sender",this.successMessage="Submitted Successfully!!!"}var qt=(At.prototype.onNoClick=function(){this.dialogRef.close()},At.decorators=[{type:tt.Component,args:[{selector:"app-modal",template:"<h1 mat-dialog-title>MESSAGE</h1>\n<div mat-dialog-content>\n   <p>{{ data.msg }}</p>\n</div>\n\n"}]}],At.ctorParameters=function(){return[{type:X.MatDialogRef},{type:undefined,decorators:[{type:tt.Inject,args:[X.MAT_DIALOG_DATA]}]}]},At);function At(t,e){this.dialogRef=t,this.data=e}var Pt=(Object.defineProperty(Lt.prototype,"config",{set:function(t){this.senderConfigForm2={apiUrl:t.apiUrl,listEndPoint:t.listEndPoint,datasource:t.datasource,tableName:t.tableName,listArray_skip:["_id","userId","created_at","id","updated_at"],listArray_modify_header:{name:"Sender's Name",email:"Sender's Email",date:"Date"},admintablenameTableName:"admin",statusarr:[{val:1,name:"Active"},{val:0,name:"Inactive"}],updateurl:t.updateEndpoint,editUrl:t.editUrl,jwtToken:t.jwtToken,deleteEndPoint:t.deleteEndPoint,view:t.view,detail_header:["_id"]},this.loader=!1},enumerable:!0,configurable:!0}),Lt.prototype.ngOnInit=function(){},Lt.decorators=[{type:tt.Component,args:[{selector:"lib-listing-sender",template:'<mat-card *ngIf="loader==true">\n  <mat-spinner class="spinner"></mat-spinner>\n</mat-card>\n\n\n\n\x3c!-- ------------------------lib listing being called------------------------ --\x3e\n<mat-card *ngIf="loader==false">\n  <lib-listing class="formfilterdiv"\n      *ngIf="senderConfigForm2.datasource !=null && senderConfigForm2.datasource.length > 0"\n      [datasource]="senderConfigForm2.datasource" [skip]="senderConfigForm2.listArray_skip"\n      [modify_header_array]="senderConfigForm2.listArray_modify_header" [sourcedata]="senderConfigForm2.tableName"\n      [statusarr]="senderConfigForm2.statusarr" [jwttoken]="senderConfigForm2.jwtToken"\n      [apiurl]="senderConfigForm2.apiUrl" [editroute]="senderConfigForm2.editUrl"\n      [deleteendpoint]="senderConfigForm2.deleteEndPoint"\n      [detail_skip_array]="senderConfigForm2.detail_header">\n  </lib-listing>\n\x3c!-- -----------------------------------------------------------------------------\x3e\n\n\n  <h2 *ngIf="senderConfigForm2.datasource.length == 0">No record found.</h2>\n</mat-card>',styles:[".sender_message{width:100%}"]}]}],Lt.ctorParameters=function(){return[{type:K.CookieService}]},Lt.propDecorators={config:[{type:tt.Input}]},Lt);function Lt(t){this.cookieService=t,this.loader=!0}var Bt=(Ot.prototype.ngOnInit=function(){switch(this.generateForm(),this.configData.action){case"add":break;case"edit":this.buttonText="UPDATE",this.successMessage="One row updated!!!",this.setDefaultValue(this.configData.defaultData),this.header_name="Edit sender's Information"}},Ot.prototype.generateForm=function(){this.senderFormTest=this.formBuilder.group({name:["",[Q.Validators.required]],email:["",[Q.Validators.required,Q.Validators.email]]})},Object.defineProperty(Ot.prototype,"config",{set:function(t){this.configData=t},enumerable:!0,configurable:!0}),Ot.prototype.openDialog=function(t){this.dialogRef=this.dialog.open(Vt,{width:"250px",data:{msg:t}}),this.dialogRef.afterClosed().subscribe(function(t){})},Ot.prototype.setDefaultValue=function(t){this.senderFormTest.patchValue({name:t.name,email:t.email})},Ot.prototype.inputBlur=function(t){this.senderFormTest.controls[t].markAsUntouched()},Ot.prototype.onSubmit=function(){var e=this;for(var t in this.senderFormTest.controls)this.senderFormTest.controls[t].markAsTouched();if(!this.senderFormTest.invalid){var a={source:this.configData.source,data:Object.assign(this.senderFormTest.value,this.configData.condition)};this.newsService.addData(this.configData.endpoint,a).subscribe(function(t){"success"==t.status?(console.log(t.status),e.openDialog(e.successMessage),setTimeout(function(){e.dialogRef.close()},2e3),e.router.navigate([e.configData.callBack])):alert("Some error occurred. Please try angain.")},function(t){alert("Some error occurred. Please try angain.")})}},Ot.decorators=[{type:tt.Component,args:[{selector:"lib-add-edit-testemaillib",template:'<mat-card>\n  <mat-toolbar color="primary" style="justify-content: center; align-items: center;">\n    <h2 class="headerSpan">{{ header_name }}</h2>\n  </mat-toolbar>\n  <span class="formspan">\n    <mat-card-content class="example-container">\n      <form autocomplete="off" [formGroup]="senderFormTest">\n        \x3c!-- Senders name --\x3e\n        <mat-form-field>\n          <mat-label>Sender\'s Name</mat-label>\n          <input matInput formControlName="name" (blur)="inputBlur(\'name\')">\n          <mat-error *ngIf="!senderFormTest.controls[\'name\'].valid\n          && senderFormTest.controls[\'name\'].errors.required" > Name is required.</mat-error>\n        </mat-form-field>\n\n        \x3c!-- Sender\'s email  --\x3e\n        <mat-form-field>\n          <mat-label>Email</mat-label>\n          <input matInput formControlName="email" (blur)="inputBlur(\'email\')">\n          <mat-error *ngIf="!senderFormTest.controls[\'email\'].valid\n          && senderFormTest.controls[\'email\'].errors.required" > Email is required.</mat-error>\n          <mat-error *ngIf="!senderFormTest.controls[\'email\'].valid\n          && senderFormTest.controls[\'email\'].errors.email" > Email is not valid.</mat-error>\n        </mat-form-field>\n\n\n        \x3c!-- Button  --\x3e\n        <button type="submit" class="submitbtn" class="submitbtn" mat-raised-button color="primary"\n          (click)="onSubmit()">{{buttonText}}</button>\n        <button type="reset" class="submitbtn" class="submitbtn" mat-raised-button color="primary">RESET</button>\n\n      </form>\n    </mat-card-content>\n  </span>\n</mat-card>',styles:[".example-container{display:flex;flex-direction:column}.example-container>*{width:100%}.main-class .submitbtn{display:block;width:170px;margin:10px auto;background:#3f50b5!important;color:#fff}.main-class .material-icons{cursor:pointer}.formspan{background-color:#e7e9ea;border:6px solid #fff;border-bottom:10px solid #fff;display:inline-block;width:100%;position:relative;z-index:9}.formspan .example-container{display:flex;flex-direction:column;width:98%;padding:14px;margin-bottom:0}.formspan .form-field-span,.formspan .mat-form-field{display:inline-block;position:relative;text-align:left;width:98%;background:#fff;margin-bottom:9px;padding:1px 14px}.formspan .form-field-span .mat-checkbox,.formspan .form-field-span .mat-radio-button{padding-right:15px;padding-bottom:15px;display:inline-block}.formspan .mat-form-field-wrapper{padding-bottom:0!important}.form-field-span .mat-error{font-size:13px!important}.mat-error{color:#f44336;font-size:13px!important}button.submitbtn.mat-raised-button.mat-primary{margin-right:15px}h1{color:#3f50b4}.files-view{background-repeat:no-repeat;background-size:cover;background-position:center;height:auto!important;width:82%;margin:20px auto;border-radius:10px;display:flex;justify-content:center;align-items:stretch;flex-wrap:wrap}.files-view .mat-card{z-index:9;margin:10px!important;display:flex;flex-wrap:wrap;justify-content:center;width:27%;position:relative}.files-view .mat-card .mat-card-actions,.files-view .mat-card .mat-card-titlt{display:inline-block;width:100%}.files-view .mat-card .mat-card-subtitle{display:inline-block;width:100%;text-align:center}.closecard{position:absolute;top:-10px;right:-8px;background:#464545;height:25px;width:25px;border-radius:50%;border:1px solid #696969;color:#fff;text-align:center;box-shadow:0 2px 6px #00000070;cursor:pointer}.closecard i{font-size:18px;line-height:27px}"]}]}],Ot.ctorParameters=function(){return[{type:Q.FormBuilder},{type:nt},{type:$.Router},{type:X.MatDialog}]},Ot.propDecorators={config:[{type:tt.Input}]},Ot);function Ot(t,e,a,r){this.formBuilder=t,this.newsService=e,this.router=a,this.dialog=r,this.buttonText="SUBMIT",this.header_name="Add Sender(Test)",this.successMessage="Submitted Successfully!!!"}var Vt=(zt.prototype.onNoClick=function(){this.dialogRef.close()},zt.decorators=[{type:tt.Component,args:[{selector:"app-modal",template:"<h1 mat-dialog-title>MESSAGE</h1>\n<div mat-dialog-content>\n   <p>{{ data.msg }}</p>\n</div>\n\n"}]}],zt.ctorParameters=function(){return[{type:X.MatDialogRef},{type:undefined,decorators:[{type:tt.Inject,args:[X.MAT_DIALOG_DATA]}]}]},zt);function zt(t,e){this.dialogRef=t,this.data=e}var Rt=(Object.defineProperty(Gt.prototype,"config",{set:function(t){this.senderConfigForm={apiUrl:t.apiBaseUrl,listEndPoint:t.listEndPoint,datasource:t.datasource,tableName:t.tableName,listArray_skip:["_id","userId","created_at","id","updated_at"],listArray_modify_header:{name:"Sender's Name",email:"Sender's Email"},admintablenameTableName:"admin",statusarr:[{val:1,name:"Active"},{val:0,name:"Inactive"}],updateurl:t.updateEndpoint,editUrl:t.editUrl,jwtToken:t.jwtToken,deleteEndPoint:t.deleteEndPoint,view:t.view,detail_header:["_id"]},this.loader=!1},enumerable:!0,configurable:!0}),Gt.prototype.ngOnInit=function(){},Gt.decorators=[{type:tt.Component,args:[{selector:"lib-listing-testemaillib",template:'<mat-card *ngIf="loader==true">\n  <mat-spinner class="spinner"></mat-spinner>\n</mat-card>\n\n\n\n\x3c!-- ------------------------lib listing being called------------------------ --\x3e\n<mat-card *ngIf="loader==false">\n  <lib-listing class="formfilterdiv"\n      *ngIf="senderConfigForm.datasource !=null && senderConfigForm.datasource.length > 0"\n      [datasource]="senderConfigForm.datasource" [skip]="senderConfigForm.listArray_skip"\n      [modify_header_array]="senderConfigForm.listArray_modify_header" [sourcedata]="senderConfigForm.tableName"\n      [statusarr]="senderConfigForm.statusarr" [jwttoken]="senderConfigForm.jwtToken"\n      [apiurl]="senderConfigForm.apiUrl" [editroute]="senderConfigForm.editUrl"\n      [deleteendpoint]="senderConfigForm.deleteEndPoint"\n      [detail_skip_array]="senderConfigForm.detail_header">\n  </lib-listing>\n\x3c!-- -----------------------------------------------------------------------------\x3e\n\n  <h2 *ngIf="senderConfigForm.datasource.length == 0">No record found.</h2>\n</mat-card>',styles:[""]}]}],Gt.ctorParameters=function(){return[]},Gt.propDecorators={config:[{type:tt.Input}]},Gt);function Gt(){this.loader=!0}var Ht=(Jt.decorators=[{type:tt.NgModule,args:[{declarations:[Vt,St,yt,lt,pt,ft,ht,wt,kt,Dt,Mt,Nt,Pt,qt,Bt,Rt,Et],imports:[mt,Q.ReactiveFormsModule,Q.FormsModule,R.BrowserAnimationsModule,Y.CommonModule,G.ListingModule,$.RouterModule,H.HttpClientModule,et.AmazingTimePickerModule,at.CKEditorModule,rt.MomentModule],exports:[Nt,Dt,kt,yt,lt,ft,ht,wt,Bt,Rt,Mt,Pt],schemas:[tt.CUSTOM_ELEMENTS_SCHEMA],providers:[it,Y.DatePipe],entryComponents:[Et,Vt,qt,lt,pt,yt,St]}]}],Jt);function Jt(){}t.NewsTitleService=nt,t.NewsTitleComponent=lt,t.modalData=pt,t.NewsTitleModule=Ht,t.ɵd=kt,t.ɵe=St,t.ɵh=ft,t.ɵj=Dt,t.ɵk=Et,t.ɵl=Mt,t.ɵm=Nt,t.ɵn=qt,t.ɵo=Pt,t.ɵf=ht,t.ɵg=yt,t.ɵi=wt,t.ɵb=Bt,t.ɵc=Vt,t.ɵp=Rt,t.ɵa=it,t.ɵq=mt,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=news-title-lib-influxiq.umd.min.js.map