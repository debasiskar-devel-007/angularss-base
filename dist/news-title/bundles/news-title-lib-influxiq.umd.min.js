!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("rxjs/operators"),require("rxjs"),require("@angular/material"),require("@angular/cdk/a11y"),require("@angular/cdk/drag-drop"),require("@angular/cdk/portal"),require("@angular/cdk/scrolling"),require("@angular/cdk/stepper"),require("@angular/cdk/table"),require("@angular/cdk/tree"),require("@angular/material/autocomplete"),require("@angular/material/badge"),require("@angular/material/bottom-sheet"),require("@angular/material/button"),require("@angular/material/button-toggle"),require("@angular/material/card"),require("@angular/material/checkbox"),require("@angular/material/chips"),require("@angular/material/stepper"),require("@angular/material/datepicker"),require("@angular/material/divider"),require("@angular/material/expansion"),require("@angular/material/grid-list"),require("@angular/material/icon"),require("@angular/material/input"),require("@angular/material/list"),require("@angular/material/menu"),require("@angular/material/core"),require("@angular/material/paginator"),require("@angular/material/progress-bar"),require("@angular/material/progress-spinner"),require("@angular/material/radio"),require("@angular/material/select"),require("@angular/material/sidenav"),require("@angular/material/slider"),require("@angular/material/slide-toggle"),require("@angular/material/sort"),require("@angular/material/table"),require("@angular/material/tabs"),require("@angular/material/toolbar"),require("@angular/material/tooltip"),require("@angular/material/tree"),require("@angular/platform-browser/animations"),require("listing-angular7"),require("@angular/common/http"),require("@angular/common"),require("@angular/material/snack-bar"),require("moment"),require("ngx-cookie-service"),require("@angular/forms"),require("@angular/router"),require("@angular/material/dialog"),require("@angular/core"),require("amazing-time-picker"),require("ngx-ckeditor"),require("ngx-moment")):"function"==typeof define&&define.amd?define("news-title-lib-influxiq",["exports","rxjs/operators","rxjs","@angular/material","@angular/cdk/a11y","@angular/cdk/drag-drop","@angular/cdk/portal","@angular/cdk/scrolling","@angular/cdk/stepper","@angular/cdk/table","@angular/cdk/tree","@angular/material/autocomplete","@angular/material/badge","@angular/material/bottom-sheet","@angular/material/button","@angular/material/button-toggle","@angular/material/card","@angular/material/checkbox","@angular/material/chips","@angular/material/stepper","@angular/material/datepicker","@angular/material/divider","@angular/material/expansion","@angular/material/grid-list","@angular/material/icon","@angular/material/input","@angular/material/list","@angular/material/menu","@angular/material/core","@angular/material/paginator","@angular/material/progress-bar","@angular/material/progress-spinner","@angular/material/radio","@angular/material/select","@angular/material/sidenav","@angular/material/slider","@angular/material/slide-toggle","@angular/material/sort","@angular/material/table","@angular/material/tabs","@angular/material/toolbar","@angular/material/tooltip","@angular/material/tree","@angular/platform-browser/animations","listing-angular7","@angular/common/http","@angular/common","@angular/material/snack-bar","moment","ngx-cookie-service","@angular/forms","@angular/router","@angular/material/dialog","@angular/core","amazing-time-picker","ngx-ckeditor","ngx-moment"],t):t(e["news-title-lib-influxiq"]={},e.rxjs.operators,e.rxjs,e.ng.material,e.ng.cdk.a11y,e.ng.cdk["drag-drop"],e.ng.cdk.portal,e.ng.cdk.scrolling,e.ng.cdk.stepper,e.ng.cdk.table,e.ng.cdk.tree,e.ng.material.autocomplete,e.ng.material.badge,e.ng.material["bottom-sheet"],e.ng.material.button,e.ng.material["button-toggle"],e.ng.material.card,e.ng.material.checkbox,e.ng.material.chips,e.ng.material.stepper,e.ng.material.datepicker,e.ng.material.divider,e.ng.material.expansion,e.ng.material["grid-list"],e.ng.material.icon,e.ng.material.input,e.ng.material.list,e.ng.material.menu,e.ng.material.core,e.ng.material.paginator,e.ng.material["progress-bar"],e.ng.material["progress-spinner"],e.ng.material.radio,e.ng.material.select,e.ng.material.sidenav,e.ng.material.slider,e.ng.material["slide-toggle"],e.ng.material.sort,e.ng.material.table,e.ng.material.tabs,e.ng.material.toolbar,e.ng.material.tooltip,e.ng.material.tree,e.ng.platformBrowser.animations,e.listingAngular7,e.ng.common.http,e.ng.common,e.ng.material["snack-bar"],e.moment_,e.i2,e.ng.forms,e.ng.router,e.ng.material.dialog,e.ng.core,e.amazingTimePicker,e.ngxCkeditor,e.ngxMoment)}(this,function(e,r,n,t,a,i,o,s,l,d,p,c,u,m,f,g,h,b,y,x,v,w,k,_,S,C,F,D,j,E,T,M,I,N,U,q,A,P,L,B,O,V,z,R,G,H,J,Y,K,W,Z,$,Q,X,ee,te,ae){"use strict";var re=(ne.prototype.isTokenExpired=function(){},ne.prototype.addData=function(e,t){var a={headers:new H.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+e,JSON.stringify(t),a).pipe(r.map(function(e){return e}))},ne.prototype.UpdateData=function(e,t){var a={headers:new H.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+e,JSON.stringify(t),a).pipe(r.map(function(e){return e}))},ne.prototype.getData=function(e,t){var a={headers:new H.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+e,JSON.stringify(t),a).pipe(r.map(function(e){return e}))},ne.prototype.deleteSingleData=function(e,t){var a={headers:new H.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+e,JSON.stringify(t),a).pipe(r.map(function(e){return e}))},ne.prototype.deleteMultipleData=function(e,t){var a={headers:new H.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+e,JSON.stringify(t),a).pipe(r.map(function(e){return e}))},ne.prototype.UpdateStatusForSingleData=function(e,t){var a={headers:new H.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+e,JSON.stringify(t),a).pipe(r.map(function(e){return e}))},ne.prototype.UpdateStatusForMultipleData=function(e,t){var a={headers:new H.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+e+"many",JSON.stringify(t),a).pipe(r.map(function(e){return e}))},ne.prototype.CustomRequest=function(e,t){var a={headers:new H.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+e,JSON.stringify(t),a).pipe(r.map(function(e){return e}))},ne.decorators=[{type:X.Injectable,args:[{providedIn:"root"}]}],ne.ctorParameters=function(){return[{type:H.HttpClient},{type:H.HttpClient},{type:W.CookieService}]},ne.ngInjectableDef=X.defineInjectable({factory:function(){return new ne(X.inject(H.HttpClient),X.inject(H.HttpClient),X.inject(W.CookieService))},token:ne,providedIn:"root"}),ne);function ne(e,t,a){this._http=e,this._authHttp=t,this.cookieService=a,this.progress=[],this.uploaderror="",this.accesstoken=this.cookieService.get("jwtToken"),this.fileservername=[],this.serverUrl="",this.getdata_endpointUrl="datalist"}var ie=(oe.prototype.setServerUrl=function(e){this.subjectForServerUrl.next(e)},oe.prototype.clearServerUrl=function(){this.subjectForServerUrl.next(null)},oe.prototype.getServerUrl=function(){return this.subjectForServerUrl.asObservable()},oe.prototype.setaddEndpoint=function(e){this.subjectForaddEndpointUrl.next(e)},oe.prototype.clearaddEndpoint=function(){this.subjectForaddEndpointUrl.next(null)},oe.prototype.getaddEndpoint=function(){return this.subjectForaddEndpointUrl.asObservable()},oe.prototype.setuploadEndpont=function(e){this.subjectForuploadEndpointUrl.next(e)},oe.prototype.clearuploadEndpoint=function(){this.subjectForuploadEndpointUrl.next(null)},oe.prototype.getuploadEndpoint=function(){return this.subjectForuploadEndpointUrl.asObservable()},oe.prototype.setupdateEndpoint=function(e){this.subjectForupdateEndpointUrl.next(e)},oe.prototype.clearupdateEndpoint=function(){this.subjectForupdateEndpointUrl.next(null)},oe.prototype.getupdateEndpoint=function(){return this.subjectForupdateEndpointUrl.asObservable()},oe.prototype.setdeletesingleEndpoint=function(e){this.subjectFordeletesingleEndpointUrl.next(e)},oe.prototype.cleardeletesingleEndpoint=function(){this.subjectFordeletesingleEndpointUrl.next(null)},oe.prototype.getdeletesingleEndpoint=function(){return this.subjectFordeletesingleEndpointUrl.asObservable()},oe.prototype.setupdatestatus_singleEndpoint=function(e){this.subjectForupdatestatusSingleEndpointUrl.next(e)},oe.prototype.clearupdatestatus_singleEndpoint=function(){this.subjectForupdatestatusSingleEndpointUrl.next(null)},oe.prototype.getupdatestatus_singleEndpoint=function(){return this.subjectForupdatestatusSingleEndpointUrl.asObservable()},oe.prototype.setgetdataEndpoint=function(e){this.subjectForGetdataEndpointUrl.next(e)},oe.prototype.cleargetdataEndpoint=function(){this.subjectForGetdataEndpointUrl.next(null)},oe.prototype.getdataEndpoint=function(){return this.subjectForGetdataEndpointUrl.asObservable()},oe.prototype.isTokenExpired=function(){},oe.prototype.addData=function(e){console.log("in adddata apiservice");var t={headers:new H.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return console.log("httpoptions",t,this.serverUrl,e),this._http.post(this.serverUrl+this.addendpointUrl,JSON.stringify(e),t).pipe(r.map(function(e){return e}))},oe.prototype.uploadFile=function(e){var t={headers:new H.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+this.uploadEndpointUrl,JSON.stringify(e),t).pipe(r.map(function(e){return e}))},oe.prototype.UpdateData=function(e){var t={headers:new H.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+this.updateendpointUrl,JSON.stringify(e),t).pipe(r.map(function(e){return e}))},oe.prototype.getData=function(e){var t={headers:new H.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+this.getdata_endpointUrl,JSON.stringify(e),t).pipe(r.map(function(e){return e}))},oe.prototype.addLogin=function(e){console.log("in addLogin apiservice");var t={headers:new H.HttpHeaders({"Content-Type":"application/json"})};return console.log(this.serverUrl,e),this._http.post(this.serverUrl+this.addendpointUrl,JSON.stringify(e),t).pipe(r.map(function(e){return e}))},oe.prototype.forgetPassword=function(e){console.log("in forgetPassword apiservice");var t={headers:new H.HttpHeaders({"Content-Type":"application/json"})};return console.log(this.serverUrl,e),this._http.post(this.serverUrl+this.addendpointUrl,JSON.stringify(e),t).pipe(r.map(function(e){return e}))},oe.prototype.deleteSingleData=function(e){var t={headers:new H.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+this.deletesingle_endpointUrl,JSON.stringify(e),t).pipe(r.map(function(e){return e}))},oe.prototype.deleteMultipleData=function(e){var t={headers:new H.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+this.deletesingle_endpointUrl+"many",JSON.stringify(e),t).pipe(r.map(function(e){return e}))},oe.prototype.UpdateStatusForSingleData=function(e){var t={headers:new H.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+this.updatestatus_single_endpointUrl,JSON.stringify(e),t).pipe(r.map(function(e){return e}))},oe.prototype.UpdateStatusForMultipleData=function(e){var t={headers:new H.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+this.updatestatus_single_endpointUrl+"many",JSON.stringify(e),t).pipe(r.map(function(e){return e}))},oe.prototype.CustomRequest=function(e,t){var a={headers:new H.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+t,JSON.stringify(e),a).pipe(r.map(function(e){return e}))},oe.decorators=[{type:X.Injectable,args:[{providedIn:"root"}]}],oe.ctorParameters=function(){return[{type:H.HttpClient},{type:H.HttpClient},{type:W.CookieService}]},oe.ngInjectableDef=X.defineInjectable({factory:function(){return new oe(X.inject(H.HttpClient),X.inject(H.HttpClient),X.inject(W.CookieService))},token:oe,providedIn:"root"}),oe);function oe(e,t,a){var r=this;this._http=e,this._authHttp=t,this.cookieService=a,this.progress=[],this.uploaderror="",this.accesstoken=this.cookieService.get("jwtToken"),this.fileservername=[],this.subjectForServerUrl=new n.Subject,this.subjectForaddEndpointUrl=new n.Subject,this.subjectForuploadEndpointUrl=new n.Subject,this.subjectForupdateEndpointUrl=new n.Subject,this.subjectFordeletesingleEndpointUrl=new n.Subject,this.subjectForupdatestatusSingleEndpointUrl=new n.Subject,this.subjectForGetdataEndpointUrl=new n.Subject,this.subscriptionServer=this.getServerUrl().subscribe(function(e){var t;t=e,r.serverUrl=null!=t?t:null}),this.subscriptionaddEndpoint=this.getaddEndpoint().subscribe(function(e){var t;t=e,r.addendpointUrl=null!=t?t:null}),this.subscriptionuploadEndpoint=this.getuploadEndpoint().subscribe(function(e){var t;t=e,r.uploadEndpointUrl=null!=t?t:null}),this.subscriptionupdateEndpoint=this.getupdateEndpoint().subscribe(function(e){var t;t=e,r.updateendpointUrl=null!=t?t:null}),this.subscriptiondeletesingleEndpoint=this.getdeletesingleEndpoint().subscribe(function(e){var t;t=e,r.deletesingle_endpointUrl=null!=t?t:null}),this.subscriptionupdatestatusSingleEndpoint=this.getupdatestatus_singleEndpoint().subscribe(function(e){var t;t=e,r.updatestatus_single_endpointUrl=null!=t?t:null}),this.subscriptionGetdataEndpoint=this.getdataEndpoint().subscribe(function(e){var t;t=e,r.getdata_endpointUrl=null!=t?t:null})}var se=(Object.defineProperty(le.prototype,"formTitle",{set:function(e){this.formTitleValue=e},enumerable:!0,configurable:!0}),Object.defineProperty(le.prototype,"logo",{set:function(e){this.logoValue=e},enumerable:!0,configurable:!0}),Object.defineProperty(le.prototype,"serverUrl",{set:function(e){this.serverUrlValue=e||"<no name set>",this.serverUrlValue=e},enumerable:!0,configurable:!0}),Object.defineProperty(le.prototype,"addEndpoint",{set:function(e){this.addEndpointValue=e},enumerable:!0,configurable:!0}),le.prototype.ngOnInit=function(){var e=this;setTimeout(function(){e.openDialog()},500)},le.prototype.openDialog=function(){this.dialog.open(de,{data:{addEndpointValue:this.addEndpointValue,serverUrlValue:this.serverUrlValue,formTitleValue:this.formTitleValue,logoValue:this.logoValue}}).afterClosed().subscribe(function(e){})},le.decorators=[{type:X.Component,args:[{selector:"lib-newsTitle",template:"",styles:[".mat-form-field{display:inline-block;position:relative;text-align:left;width:100%}.material-icons{position:absolute;top:-20px;right:-20px;font-family:'Material Icons';font-weight:400;font-style:normal;font-size:24px;line-height:1;letter-spacing:normal;text-transform:none;display:inline-block;white-space:nowrap;word-wrap:normal;direction:ltr;-webkit-font-smoothing:antialiased}.logowrapper{margin:0 auto;display:block;text-align:center}h2{text-align:center;background-color:#00f;color:#f0f8ff;padding:10px;margin:0 auto}"]}]}],le.ctorParameters=function(){return[{type:Z.FormBuilder},{type:ie},{type:t.MatSnackBar},{type:t.MatDialog}]},le.propDecorators={formTitle:[{type:X.Input}],logo:[{type:X.Input}],serverUrl:[{type:X.Input}],addEndpoint:[{type:X.Input}],formDirective:[{type:X.ViewChild,args:[Z.FormGroupDirective]}]},le);function le(e,t,a,r){this.fb=e,this.apiService=t,this._snackBar=a,this.dialog=r,this.formTitleValue="",this.serverUrlValue="",this.addEndpointValue="",this.logoValue="",this.durationInSeconds=10}var de=(pe.prototype.ngOnInit=function(){var e=this;this.apiService.clearServerUrl(),setTimeout(function(){e.apiService.setServerUrl(e.data.serverUrlValue)},50),this.apiService.clearaddEndpoint(),setTimeout(function(){e.apiService.setaddEndpoint(e.data.addEndpointValue.endpoint)},50)},pe.prototype.onNoClick=function(){this.dialogRef.close()},pe.prototype.newsLatterFormSubmit=function(){var t=this;for(var e in console.log(this.newsLatterForm.value),this.newsLatterForm.controls)this.newsLatterForm.controls[e].markAsTouched();if(this.newsLatterForm.valid){console.log(this.newsLatterForm.value);var a={data:this.newsLatterForm.value,source:this.data.addEndpointValue.source};this.apiService.addData(a).subscribe(function(e){console.log(e),"success"==e.status&&t.formDirective.resetForm()})}},pe.prototype.inputUntouched=function(e){this.newsLatterForm.controls[e].markAsUntouched()},pe.decorators=[{type:X.Component,args:[{selector:"modalData",template:'\n<mat-card >\n\n        <span class="logowrapper" *ngIf="data.logoValue != \'\'" >\n             <img  [src]="data.logoValue">\n         </span>\n   \n       <h2 *ngIf="data.formTitleValue != \'\'"> {{data.formTitleValue}}</h2>\n   \n       <form [formGroup]="newsLatterForm" (ngSubmit)="newsLatterFormSubmit()" novalidate>\n           <mat-form-field>\n               <input matInput placeholder="Name " formControlName="fullname" (blur)="inputUntouched(\'fullname\')">\n               <mat-error\n                           *ngIf="!newsLatterForm.controls[\'fullname\'].valid && newsLatterForm.controls[\'fullname\'].errors.required && newsLatterForm.controls[\'fullname\'].touched">\n                           Name field can not be blank</mat-error>\n           </mat-form-field>\n   \n           \x3c!--Phone field start here--\x3e\n           <mat-form-field>\n               <input matInput placeholder="Phone " formControlName="phone" (blur)="inputUntouched(\'phone\')">\n               <mat-error *ngIf="!newsLatterForm.controls[\'phone\'].valid && newsLatterForm.controls[\'phone\'].errors.required && newsLatterForm.controls[\'phone\'].touched">\n                           Phone field can not be blank</mat-error>\n           </mat-form-field>\n   \n           \x3c!-- Email field start here--\x3e\n           <mat-form-field>\n               <input matInput placeholder="Email " formControlName="email" (blur)="inputUntouched(\'email\')">\n               <mat-error\n                           *ngIf="!newsLatterForm.controls[\'email\'].valid && !newsLatterForm.controls[\'email\'].errors.required">\n                           Email is not valid</mat-error>\n                       <mat-error\n                           *ngIf="!newsLatterForm.controls[\'email\'].valid && newsLatterForm.controls[\'email\'].errors.required">\n                           Email field can not be blank</mat-error>\n           </mat-form-field>\n   \n           \x3c!--Company field start here--\x3e\n           <mat-form-field>\n               <input matInput placeholder="Company " formControlName="company" (blur)="inputUntouched(\'company\')">\n               <mat-error\n                           *ngIf="!newsLatterForm.controls[\'company\'].valid && newsLatterForm.controls[\'company\'].errors.required && newsLatterForm.controls[\'company\'].touched">\n                           Full Name field can not be blank</mat-error>\n           </mat-form-field>\n   \n   \n           <button mat-raised-button color="primary">Submit</button>\n           \x3c!-- <button mat-raised-button color="primary"(click)="onNoClick()">No Thanks</button> --\x3e\n           <i class="material-icons" (click)="onNoClick()">\n               clear\n               </i>\n   \n   \n       </form>\n   </mat-card>',styles:[".mat-form-field{display:inline-block;position:relative;text-align:left;width:100%}.material-icons{position:absolute;top:-20px;right:-20px;font-family:'Material Icons';font-weight:400;font-style:normal;font-size:24px;line-height:1;letter-spacing:normal;text-transform:none;display:inline-block;white-space:nowrap;word-wrap:normal;direction:ltr;-webkit-font-smoothing:antialiased}.logowrapper{margin:0 auto;display:block;text-align:center}h2{text-align:center;background-color:#00f;color:#f0f8ff;padding:10px;margin:0 auto}"]}]}],pe.ctorParameters=function(){return[{type:t.MatDialogRef},{type:undefined,decorators:[{type:X.Inject,args:[t.MAT_DIALOG_DATA]}]},{type:ie},{type:Z.FormBuilder}]},pe.propDecorators={formDirective:[{type:X.ViewChild,args:[Z.FormGroupDirective]}]},pe);function pe(e,t,a,r){this.dialogRef=e,this.data=t,this.apiService=a,this.fb=r,this.newsLatterForm=this.fb.group({fullname:["",Z.Validators.required],group:[0],phone:["",Z.Validators.required],company:["",Z.Validators.required],email:["",Z.Validators.compose([Z.Validators.required,Z.Validators.pattern(/^\s*[\w\-\+_]+(\.[\w\-\+_]+)*\@[\w\-\+_]+\.[\w\-\+_]+(\.[\w\-\+_]+)*\s*$/)])]})}var ce=(ue.decorators=[{type:X.NgModule,args:[{exports:[a.A11yModule,l.CdkStepperModule,d.CdkTableModule,p.CdkTreeModule,i.DragDropModule,c.MatAutocompleteModule,u.MatBadgeModule,m.MatBottomSheetModule,f.MatButtonModule,g.MatButtonToggleModule,h.MatCardModule,b.MatCheckboxModule,y.MatChipsModule,x.MatStepperModule,v.MatDatepickerModule,Q.MatDialogModule,w.MatDividerModule,k.MatExpansionModule,_.MatGridListModule,S.MatIconModule,C.MatInputModule,F.MatListModule,D.MatMenuModule,j.MatNativeDateModule,E.MatPaginatorModule,T.MatProgressBarModule,M.MatProgressSpinnerModule,I.MatRadioModule,j.MatRippleModule,N.MatSelectModule,U.MatSidenavModule,q.MatSliderModule,A.MatSlideToggleModule,Y.MatSnackBarModule,P.MatSortModule,L.MatTableModule,B.MatTabsModule,O.MatToolbarModule,V.MatTooltipModule,z.MatTreeModule,o.PortalModule,s.ScrollingModule]}]}],ue);function ue(){}var me=(fe.prototype.ngOnInit=function(){},Object.defineProperty(fe.prototype,"config",{set:function(e){this.newsLetterListConfig={apiUrl:e.apiBaseUrl,listEndPoint:e.listEndPoint,datasource:e.datasource,tableName:e.tableName,listArray_skip:["_id","userId","created_at","id","updated_at","image","fullname_search","group_name_search"],listArray_modify_header:{fullname:"Full Name",phone:"Phone",company:"Company",email:"Email",group_name:"Group Name",status:"Status",date_added:"Date","date added":"Date","group name":"Group Name"},admintablenameTableName:"admin",status:[{val:1,name:"Active"},{val:0,name:"Inactive"}],updateurl:e.updateEndpoint,editUrl:e.editUrl,jwtToken:e.jwtToken,deleteEndPoint:e.deleteEndPoint,view:e.view,search_settings:{selectsearch:[{label:"Search By Status",field:"status",values:[{val:1,name:"Active"},{val:0,name:"Inactive"}]}],textsearch:[{label:"Search Name",field:"fullname_search"},{label:"Search By Email",field:"email"},{label:"Search By Group Name",field:"group_name_search"}]},detail_header:["_id","fullname_search"]},this.loader=!1},enumerable:!0,configurable:!0}),fe.decorators=[{type:X.Component,args:[{selector:"lib-listing-newsletter",template:'<mat-card *ngIf="loader==true">\n  <mat-spinner class="spinner"></mat-spinner>\n</mat-card>\n\n\n\n\n\x3c!-- ------------------------lib listing being called------------------------ --\x3e\n<mat-card *ngIf="loader==false">\n  <lib-listing class="formfilterdiv"\n      *ngIf="newsLetterListConfig.datasource !=null && newsLetterListConfig.datasource.length > 0"\n      [datasource]="newsLetterListConfig.datasource" [skip]="newsLetterListConfig.listArray_skip"\n      [modify_header_array]="newsLetterListConfig.listArray_modify_header" [sourcedata]="newsLetterListConfig.tableName"\n      [statusarr]="newsLetterListConfig.status" [jwttoken]="newsLetterListConfig.jwtToken"\n      [apiurl]="newsLetterListConfig.apiUrl" [editroute]="newsLetterListConfig.editUrl"\n      [deleteendpoint]="newsLetterListConfig.deleteEndPoint"\n      [date_search_source]="newsLetterListConfig.view"\n     [date_search_endpoint]="newsLetterListConfig.listEndPoint"\n     [search_settings]="newsLetterListConfig.search_settings"\n     [detail_skip_array]="newsLetterListConfig.detail_header">\n  </lib-listing>\n\x3c!-- -----------------------------------------------------------------------------\x3e\n\n  <h2 *ngIf="newsLetterListConfig.datasource.length == 0">No record found.</h2>\n</mat-card>',styles:[""]}]}],fe.ctorParameters=function(){return[]},fe.propDecorators={config:[{type:X.Input}]},fe);function fe(){this.loader=!0}var ge=(Object.defineProperty(he.prototype,"config",{set:function(e){this.configData=e},enumerable:!0,configurable:!0}),he.prototype.ngOnInit=function(){switch(this.generateForm(),this.getSubscriberList(),this.configData.action){case"add":break;case"edit":this.buttonText="UPDATE",this.successMessage="One row updated!!!",this.setDefaultValue(this.configData.defaultData),this.header_name="EDIT"}},he.prototype.getSubscriberList=function(){var a=this,e={source:this.configData.subscriber_table_name};this.newsletterService.getData(this.configData.endpoint2+"datalist",e).subscribe(function(e){var t;t=e,a.subscriber_name_array=t.res,console.log(a.subscriber_name_array)})},he.prototype.openDialog=function(e){this.dialogRef=this.dialog.open(be,{width:"250px",data:{msg:e}}),this.dialogRef.afterClosed().subscribe(function(e){})},he.prototype.setDefaultValue=function(e){this.subscriptionCatForm.patchValue({name:e.name,priority:e.priority,status:e.status,subscriber:e.subscriber})},he.prototype.inputBlur=function(e){this.subscriptionCatForm.controls[e].markAsUntouched()},he.prototype.generateForm=function(){this.subscriptionCatForm=this.formBuilder.group({name:["",Z.Validators.required],priority:["",Z.Validators.required],status:[],subscriber:[]})},he.prototype.onSubmit=function(){var t=this;for(var e in this.subscriptionCatForm.controls)this.subscriptionCatForm.controls[e].markAsTouched();if(!this.subscriptionCatForm.invalid){this.subscriptionCatForm.value.status?this.subscriptionCatForm.value.status=parseInt("1"):this.subscriptionCatForm.value.status=parseInt("0");var a={source:this.configData.source,data:Object.assign(this.subscriptionCatForm.value,this.configData.condition)};this.newsletterService.addData(this.configData.endpoint,a).subscribe(function(e){"success"==e.status?(t.openDialog(t.successMessage),setTimeout(function(){t.dialogRef.close()},2e3),t.router.navigate([t.configData.callBack])):alert("Some error occurred. Please try angain.")},function(e){alert("Some error occurred. Please try angain.")})}},he.decorators=[{type:X.Component,args:[{selector:"lib-add-edit-subcategory",template:'<mat-card>\n  <mat-toolbar color="primary" style="justify-content: center; align-items: center;">\n    <h2 class="headerSpan">{{ header_name }}</h2>\n  </mat-toolbar>\n  <span class="formspan">\n    <mat-card-content class="example-container">\n\n      <form autocomplete="off" [formGroup]="subscriptionCatForm">\n\n\n        \x3c!-- Name  --\x3e\n        <mat-form-field>\n          <mat-label>Name :</mat-label>\n          <input matInput placeholder="name" formControlName="name" (blur)="inputBlur(\'name\')">\n          <mat-error *ngIf="!subscriptionCatForm.controls[\'name\'].valid\n          && subscriptionCatForm.controls[\'name\'].errors.required"> Name is required.</mat-error>\n        </mat-form-field>\n\n\n        \x3c!-- Priority --\x3e\n\n        <mat-form-field>\n          <mat-label>Priority :</mat-label>\n          <input matInput placeholder="priority" type="number" formControlName="priority" (blur)="inputBlur(\'priority\')">\n          <mat-error *ngIf="!subscriptionCatForm.controls[\'priority\'].valid\n          && subscriptionCatForm.controls[\'priority\'].errors.required"> Priority is required.</mat-error>\n        </mat-form-field>\n\n\n        \x3c!-- //subscriber list --\x3e\n\n        <mat-form-field>\n          <mat-label>Select Subscriber :</mat-label>\n          <mat-select matNativeControl  formControlName="subscriber" multiple>\n            <mat-option  *ngFor=\'let i of subscriber_name_array\' [value]="i._id">{{ i.fullname }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n\n          \x3c!-- Status  --\x3e\n          <mat-label>Status :</mat-label>\n          <mat-checkbox formControlName="status">Active</mat-checkbox><br>\n\n\n        \x3c!-- Button  --\x3e\n        <button type="button" class="submitbtn" class="submitbtn" mat-raised-button\n          color="primary" (click)="onSubmit()">{{buttonText}}</button>\n        <button type="reset" class="submitbtn" class="submitbtn" mat-raised-button color="primary">RESET</button>\n      </form>\n\n    </mat-card-content>\n  </span>\n</mat-card>',styles:[".example-container{display:flex;flex-direction:column}.example-container>*{width:100%}.main-class .submitbtn{display:block;width:170px;margin:10px auto;background:#3f50b5!important;color:#fff}.main-class .material-icons{cursor:pointer}.formspan{background-color:#e7e9ea;border:6px solid #fff;border-bottom:10px solid #fff;display:inline-block;width:100%;position:relative;z-index:9}.formspan .example-container{display:flex;flex-direction:column;width:98%;padding:14px;margin-bottom:0}.formspan .form-field-span,.formspan .mat-form-field{display:inline-block;position:relative;text-align:left;width:98%;background:#fff;margin-bottom:9px;padding:1px 14px}.formspan .form-field-span .mat-checkbox,.formspan .form-field-span .mat-radio-button{padding-right:15px;padding-bottom:15px;display:inline-block}.formspan .mat-form-field-wrapper{padding-bottom:0!important}.form-field-span .mat-error{font-size:13px!important}.mat-error{color:#f44336;font-size:13px!important}button.submitbtn.mat-raised-button.mat-primary{margin-right:15px}h1{color:#3f50b4}.files-view{background-repeat:no-repeat;background-size:cover;background-position:center;height:auto!important;width:82%;margin:20px auto;border-radius:10px;display:flex;justify-content:center;align-items:stretch;flex-wrap:wrap}.files-view .mat-card{z-index:9;margin:10px!important;display:flex;flex-wrap:wrap;justify-content:center;width:27%;position:relative}.files-view .mat-card .mat-card-actions,.files-view .mat-card .mat-card-titlt{display:inline-block;width:100%}.files-view .mat-card .mat-card-subtitle{display:inline-block;width:100%;text-align:center}.closecard{position:absolute;top:-10px;right:-8px;background:#464545;height:25px;width:25px;border-radius:50%;border:1px solid #696969;color:#fff;text-align:center;box-shadow:0 2px 6px #00000070;cursor:pointer}.closecard i{font-size:18px;line-height:27px}"]}]}],he.ctorParameters=function(){return[{type:Z.FormBuilder},{type:re},{type:$.Router},{type:Q.MatDialog}]},he.propDecorators={config:[{type:X.Input}]},he);function he(e,t,a,r){this.formBuilder=e,this.newsletterService=t,this.router=a,this.dialog=r,this.buttonText="SUBMIT",this.header_name="Add Subscription Category",this.successMessage="Submitted Successfully!!!"}var be=(ye.prototype.onNoClick=function(){this.dialogRef.close()},ye.decorators=[{type:X.Component,args:[{selector:"app-modal",template:"<h1 mat-dialog-title>MESSAGE</h1>\n<div mat-dialog-content>\n   <p>{{ data.msg }}</p>\n</div>\n\n"}]}],ye.ctorParameters=function(){return[{type:Q.MatDialogRef},{type:undefined,decorators:[{type:X.Inject,args:[Q.MAT_DIALOG_DATA]}]}]},ye);function ye(e,t){this.dialogRef=e,this.data=t}var xe=(Object.defineProperty(ve.prototype,"config",{set:function(e){this.SubsCatListConfig={apiUrl:e.apiBaseUrl,listEndPoint:e.listEndPoint,datasource:e.datasource,tableName:e.tableName,listArray_skip:["_id","userId","created_at","id","updated_at","image","name_search","sub_name_search"],listArray_modify_header:{name:"Name",priority:"Priority",status:"Status",date_added:"Date","date added":"Date",subscriber_name:"Subscriber Name",count:"Count","subscriber name":"Subscriber Name"},admintablenameTableName:"admin",statusarr:[{val:1,name:"Active"},{val:0,name:"Inactive"}],updateurl:e.updateEndpoint,editUrl:e.editUrl,jwtToken:e.jwtToken,deleteEndPoint:e.deleteEndPoint,view:e.view,search_settings:{textsearch:[{label:"Search By Name",field:"name_search"},{label:"Search By Subscriber Name",field:"sub_name_search"}],selectsearch:[{label:"Search By Status",field:"status",values:[{val:1,name:"Active"},{val:0,name:"Inactive"}]}]},pendingmodelapplicationarray_detail_datatype:[{key:"image",value:"image",fileurl:"https://s3.us-east-2.amazonaws.com/crmfiles.influxhostserver/testimonial/"}],detail_header:["_id","name_search"]},this.loader=!1},enumerable:!0,configurable:!0}),ve.prototype.ngOnInit=function(){},ve.decorators=[{type:X.Component,args:[{selector:"lib-listing-subcategory",template:'<mat-card *ngIf="loader==true">\n    <mat-spinner class="spinner"></mat-spinner>\n</mat-card>\n\n\n\n\x3c!-- ------------------------lib listing being called------------------------ --\x3e\n<mat-card *ngIf="loader==false">\n    <lib-listing class="formfilterdiv"\n        *ngIf="SubsCatListConfig.datasource !=null && SubsCatListConfig.datasource.length > 0"\n        [datasource]="SubsCatListConfig.datasource" [skip]="SubsCatListConfig.listArray_skip"\n        [modify_header_array]="SubsCatListConfig.listArray_modify_header" [sourcedata]="SubsCatListConfig.tableName"\n        [statusarr]="SubsCatListConfig.statusarr" [jwttoken]="SubsCatListConfig.jwtToken"\n        [apiurl]="SubsCatListConfig.apiUrl" [editroute]="SubsCatListConfig.editUrl"\n        [deleteendpoint]="SubsCatListConfig.deleteEndPoint"\n        [date_search_source]="SubsCatListConfig.view"\n       [date_search_endpoint]="SubsCatListConfig.listEndPoint"\n       [search_settings]="SubsCatListConfig.search_settings"\n       [detail_datatype]="SubsCatListConfig.pendingmodelapplicationarray_detail_datatype"\n       [detail_skip_array]="SubsCatListConfig.detail_header">\n    </lib-listing>\n\x3c!-- -----------------------------------------------------------------------------\x3e\n\n    <h2 *ngIf="SubsCatListConfig.datasource.length == 0">No record found.</h2>\n</mat-card>',styles:[""]}]}],ve.ctorParameters=function(){return[]},ve.propDecorators={config:[{type:X.Input}]},ve);function ve(){this.loader=!0}var we=(ke.prototype.ngOnInit=function(){switch(this.generateForm(),this.getGroup(),this.configData.action){case"add":this.buttonText="SUBMIT",this.header_name="Add a Group";break;case"edit":this.buttonText="UPDATE",this.successMessage="Subscription Updated Successfully..!!!",this.setDefaultValue(this.configData.defaultData),this.header_name="Change/Remove Group"}},Object.defineProperty(ke.prototype,"config",{set:function(e){this.configData=e},enumerable:!0,configurable:!0}),ke.prototype.generateForm=function(){this.subGroupForm=this.formBuilder.group({fullname:["",[Z.Validators.required]],phone:["",[Z.Validators.required]],email:["",[Z.Validators.required,Z.Validators.email]],company:["",[Z.Validators.required]],group:[],status:[]})},ke.prototype.setDefaultValue=function(e){this.subGroupForm.patchValue({fullname:e.fullname,phone:e.phone,email:e.email,company:e.company,group:e.group,status:e.status})},ke.prototype.openDialog=function(e){this.dialogRef=this.dialog.open(_e,{width:"250px",data:{msg:e}}),this.dialogRef.afterClosed().subscribe(function(e){})},ke.prototype.inputBlur=function(e){this.subGroupForm.controls[e].markAsUntouched()},ke.prototype.onSubmit=function(){var t=this;for(var e in this.subGroupForm.controls)this.subGroupForm.controls[e].markAsTouched();if(this.subGroupForm.value.status?this.subGroupForm.value.status=parseInt("1"):this.subGroupForm.value.status=parseInt("0"),!this.subGroupForm.invalid){var a={source:this.configData.source,data:Object.assign(this.subGroupForm.value,this.configData.condition)};this.newsService.addData(this.configData.endpoint,a).subscribe(function(e){"success"==e.status?(t.openDialog(t.successMessage),setTimeout(function(){t.dialogRef.close()},2e3),t.router.navigate([t.configData.callBack])):alert("Some error occurred. Please try angain.")},function(e){alert("Some error occurred. Please try angain.")})}},ke.prototype.getGroup=function(){var t=this,e={source:this.configData.group,token:this.cookieService.get("jwtToken")};this.newsService.getData(this.configData.endpoint2+"datalist",e).subscribe(function(e){t.group_array=e.res})},ke.decorators=[{type:X.Component,args:[{selector:"lib-add-edit-subscriptiongroup",template:'<mat-card>\n  <mat-toolbar color="primary" style="justify-content: center; align-items: center;">\n    <h2 class="headerSpan">{{ header_name }}</h2>\n  </mat-toolbar>\n  <span class="formspan">\n    <mat-card-content class="example-container">\n      <form autocomplete="off" [formGroup]="subGroupForm">\n        \x3c!-- Name --\x3e\n        <mat-form-field>\n          <mat-label>Name :</mat-label>\n          <input matInput formControlName="fullname" (blur)="inputBlur(\'fullname\')">\n          <mat-error *ngIf="!subGroupForm.controls[\'fullname\'].valid\n          && subGroupForm.controls[\'fullname\'].errors.required"> Name is required.</mat-error>\n        </mat-form-field>\n\n        \x3c!-- Phone --\x3e\n        <mat-form-field>\n          <mat-label>Phone Number :</mat-label>\n          <input matInput formControlName="phone" (blur)="inputBlur(\'phone\')">\n          <mat-error *ngIf="!subGroupForm.controls[\'phone\'].valid\n          && subGroupForm.controls[\'phone\'].errors.required"> Phone is required.</mat-error>\n        </mat-form-field>\n\n        \x3c!-- Email --\x3e\n        <mat-form-field>\n          <mat-label>Email :</mat-label>\n          <input matInput formControlName="email" (blur)="inputBlur(\'email\')">\n          <mat-error *ngIf="!subGroupForm.controls[\'email\'].valid\n          && subGroupForm.controls[\'email\'].errors.required"> Email is required.</mat-error>\n          <mat-error *ngIf="!subGroupForm.controls[\'email\'].valid\n          && subGroupForm.controls[\'email\'].errors.email"> Email is not valid.</mat-error>\n        </mat-form-field>\n\n        \x3c!-- Company --\x3e\n        <mat-form-field>\n          <mat-label>Company :</mat-label>\n          <input matInput formControlName="company" (blur)="inputBlur(\'company\')">\n          <mat-error *ngIf="!subGroupForm.controls[\'company\'].valid\n          && subGroupForm.controls[\'company\'].errors.required">           <mat-label>Company</mat-label>\n          is required.</mat-error>\n        </mat-form-field>\n\n        \x3c!-- Group  --\x3e\n        <mat-form-field>\n          <mat-label>Select Group :</mat-label>\n          <mat-select matNativeControl formControlName="group" multiple>\n               \x3c!-- <option value=0 selected>Select Group</option> --\x3e\n              <mat-option value="{{  item._id }}" *ngFor="let item of group_array">{{ item.name  }}</mat-option>\n            </mat-select> \n        </mat-form-field>\n\n\n        <mat-label>Status :</mat-label>\n        <mat-checkbox formControlName="status">Active</mat-checkbox><br>\n\n\n\n        <button type="submit" class="submitbtn" class="submitbtn" mat-raised-button\n          color="primary"  (click)="onSubmit()">{{buttonText}}</button>\n        <button type="reset" class="submitbtn" class="submitbtn" mat-raised-button color="primary">RESET</button>\n\n\n\n\n      </form>\n      \x3c!-- ---------------------------------------FORM ENDS HERE----------------------------- --\x3e\n    </mat-card-content>\n  </span>\n</mat-card>',styles:[".example-container{display:flex;flex-direction:column}.example-container>*{width:100%}.main-class .submitbtn{display:block;width:170px;margin:10px auto;background:#3f50b5!important;color:#fff}.main-class .material-icons{cursor:pointer}.formspan{background-color:#e7e9ea;border:6px solid #fff;border-bottom:10px solid #fff;display:inline-block;width:100%;position:relative;z-index:9}.formspan .example-container{display:flex;flex-direction:column;width:98%;padding:14px;margin-bottom:0}.formspan .form-field-span,.formspan .mat-form-field{display:inline-block;position:relative;text-align:left;width:98%;background:#fff;margin-bottom:9px;padding:1px 14px}.formspan .form-field-span .mat-checkbox,.formspan .form-field-span .mat-radio-button{padding-right:15px;padding-bottom:15px;display:inline-block}.formspan .mat-form-field-wrapper{padding-bottom:0!important}.form-field-span .mat-error{font-size:13px!important}.mat-error{color:#f44336;font-size:13px!important}button.submitbtn.mat-raised-button.mat-primary{margin-right:15px}h1{color:#3f50b4}.files-view{background-repeat:no-repeat;background-size:cover;background-position:center;height:auto!important;width:82%;margin:20px auto;border-radius:10px;display:flex;justify-content:center;align-items:stretch;flex-wrap:wrap}.files-view .mat-card{z-index:9;margin:10px!important;display:flex;flex-wrap:wrap;justify-content:center;width:27%;position:relative}.files-view .mat-card .mat-card-actions,.files-view .mat-card .mat-card-titlt{display:inline-block;width:100%}.files-view .mat-card .mat-card-subtitle{display:inline-block;width:100%;text-align:center}.closecard{position:absolute;top:-10px;right:-8px;background:#464545;height:25px;width:25px;border-radius:50%;border:1px solid #696969;color:#fff;text-align:center;box-shadow:0 2px 6px #00000070;cursor:pointer}.closecard i{font-size:18px;line-height:27px}"]}]}],ke.ctorParameters=function(){return[{type:Z.FormBuilder},{type:W.CookieService},{type:re},{type:$.Router},{type:Q.MatDialog}]},ke.propDecorators={config:[{type:X.Input}]},ke);function ke(e,t,a,r,n){this.formBuilder=e,this.cookieService=t,this.newsService=a,this.router=r,this.dialog=n,this.buttonText="SUBMIT",this.header_name="Add a group to subscriptions",this.group_array=[],this.successMessage="Subscription Added Successfully..!!!"}var _e=(Se.prototype.onNoClick=function(){this.dialogRef.close()},Se.decorators=[{type:X.Component,args:[{selector:"app-modal",template:"<h1 mat-dialog-title>MESSAGE</h1>\n<div mat-dialog-content>\n   <p>{{ data.msg }}</p>\n</div>\n\n"}]}],Se.ctorParameters=function(){return[{type:Q.MatDialogRef},{type:undefined,decorators:[{type:X.Inject,args:[Q.MAT_DIALOG_DATA]}]}]},Se);function Se(e,t){this.dialogRef=e,this.data=t}var Ce=K,Fe=(Object.defineProperty(De.prototype,"config",{set:function(e){this.configData=e},enumerable:!0,configurable:!0}),De.prototype.ngOnInit=function(){var e=this;switch(this.weekdays(),this.getReplyAddress(),"add"==this.configData.action&&(this.time=this.datepipe.transform(new Date,"H:mm")),"edit"==this.configData.action&&this.getReplyAddress(),this.getGroupName(),this.getSenderAddress(),this.cookieValue=this.cookieService.getAll(),this.generateForm(),this.newsForm.value.cookiemail=this.cookieService.get("get_email"),this.configData.action){case"add":this.buttonText="SUBMIT",this.header_name="Add a Newsletter",this.message="Newsletter Added Successfully!!!";break;case"edit":this.days_json=null,this.buttonText="UPDATE",this.time="",this.message="Newsletter Information Updated!!!","daily"==this.configData.defaultData.newsfrequency?this.frequency_flag=!1:this.frequency_flag=!0,setTimeout(function(){e.setDefaultValue(e.configData.defaultData)},1e3),null!=this.configData.defaultData.days_of_weeks&&(this.frequency_flag=!0),setTimeout(function(){e.days_json=e.configData.defaultData.days_of_weeks},1e3)}},De.prototype.weekdays=function(){this.days_json=[{day:"Sunday",value:1,isSelected:!1},{day:"Monday",value:2,isSelected:!1},{day:"Tuesday",value:3,isSelected:!1},{day:"Wednesday",value:4,isSelected:!1},{day:"Thursday",value:5,isSelected:!0},{day:"Friday",value:6,isSelected:!1},{day:"Saturday",value:7,isSelected:!1}]},De.prototype.openSnackBar=function(e,t){this.snackBar.open(e,t,{duration:3e3})},De.prototype.open=function(){this.atp.open().afterClose().subscribe(function(e){})},De.prototype.openDialog=function(e,t){var r=this;this.dialogRef=this.dialog.open(je,{panelClass:"newspreview-dialog",data:{msg:e,test_mail:t}}),this.dialogRef.afterClosed().subscribe(function(e){var t={title:e.title,subject:e.subject,description:e.content,testMail:e.testMail};if("yes"==e.flag){var a={source:r.configData.source_for_test_mail_add,data:t};r.newsService.addData(r.configData.endpoint,a).subscribe(function(e){"success"==e.status?r.openSnackBar("Email Send Successfully.","OK"):r.openSnackBar("Error Occure....!","")})}})},De.prototype.preview_all=function(){var a=this;if(""==this.newsForm.value.content||""==this.newsForm.value.newssubject)alert("Subject and Description field is requird for test email....!");else{var e={source:this.configData.test_mail_table};this.newsService.getData(this.configData.endpoint2+"datalist",e).subscribe(function(e){var t;t=e,a.test_mail=t.res,a.openDialog(Object.values(a.newsForm.value),a.test_mail)})}},De.prototype.getGroupName=function(){var a=this,e={source:this.configData.group_table};this.newsService.getData(this.configData.endpoint2+"datalist",e).subscribe(function(e){var t;t=e,a.group_name_array=t.res})},De.prototype.getReplyAddress=function(){var a=this,e={source:this.configData.reply_address_table};this.newsService.getData(this.configData.endpoint2+"datalist",e).subscribe(function(e){var t;t=e,a.reply_data=t.res,a.email_address=a.reply_data[0].email,a.reply_address_id=a.reply_data[0]._id})},De.prototype.getSenderAddress=function(){var a=this,e={source:this.configData.sender_table};this.newsService.getData(this.configData.endpoint2+"datalist",e).subscribe(function(e){var t;t=e,a.sender_name_array=t.res})},De.prototype.generateForm=function(){this.newsForm=this.formBuilder.group({newstitle:["",[Z.Validators.required]],newssubject:["",[Z.Validators.required]],share_news:[],publishdate_normal_format:[],senderaddress:[],publishdate:["",[Z.Validators.required]],settime:[this.time],content:["",[Z.Validators.required]],newsfrequency:[],days_of_weeks:[],timeofday:[this.time],timezone:[],startdate:["",[Z.Validators.required]],enddate:["",[Z.Validators.required]],reply_email:[this.reply_address_id],status:[1]})},De.prototype.setDefaultValue=function(e){this.tmp_date=e.publishdate;var t=new Date(this.tmp_date);e.publishdate=t,this.tmp_date=e.startdate,t=new Date(this.tmp_date),e.startdate=t,this.tmp_date=e.enddate,t=new Date(this.tmp_date),e.enddate=t,this.newsForm.patchValue({newstitle:e.newstitle,newssubject:e.newssubject,share_news:e.share_news,senderaddress:e.senderaddress,publishdate:e.publishdate,settime:e.settime,content:e.content,days_of_weeks:e.days_of_weeks,newsfrequency:e.newsfrequency,timeofday:e.timeofday,timezone:e.timezone,startdate:e.startdate,enddate:e.enddate,reply_email:e.reply_email})},De.prototype.inputBlur=function(e){this.newsForm.controls[e].markAsUntouched()},De.prototype.getDays=function(e){!0===e.isSelected?e.isSelected=!1:e.isSelected=!0},De.prototype.onSubmit=function(){var t=this;if(this.days_array=[],(this.false_count=0)!=this.frequency_flag)for(var e=0;e<this.days_json.length;e++)this.days_json[e].isSelected?(this.days_array.push(this.days_json[e]),this.false_count--):this.days_array.push(this.days_json[e]),this.false_count++;if(7!=this.false_count){1==this.frequency_flag?this.newsForm.value.days_of_weeks=this.days_array:this.newsForm.value.days_of_weeks=null,this.newsForm.value.publishdate=Ce(this.newsForm.value.publishdate).format("MM/DD/YYYY"),this.newsForm.value.startdate=Ce(this.newsForm.value.startdate).format("MM/DD/YYYY"),this.newsForm.value.enddate=Ce(this.newsForm.value.enddate).format("MM/DD/YYYY"),this.newsForm.value.reply_email=this.reply_data[0]._id;var a=Ce(this.newsForm.value.publishdate).unix();for(var r in this.newsForm.value.publishdate_normal_format=1e3*parseInt(a),this.newsForm.controls)this.newsForm.controls[r].markAsTouched();if(!this.newsForm.invalid){var n={source:this.configData.source,data:Object.assign(this.newsForm.value,this.configData.condition),sourceobj:["senderaddress","reply_email"]};this.newsService.addData(this.configData.endpoint,n).subscribe(function(e){"success"==e.status?(t.openSnackBar(t.message,"OK"),t.router.navigate([t.configData.callBack])):alert("Some error occurred. Please try angain.")},function(e){alert("Some error occurred. Please try angain.")})}}},De.decorators=[{type:X.Component,args:[{selector:"lib-add-edit-newsletterlib",template:'<mat-card>\n  <mat-toolbar color="primary" style="justify-content: center; align-items: center;">\n    <h2 class="headerSpan">{{ header_name }}</h2>\n  </mat-toolbar>\n  <span class="formspan">\n    <mat-card-content class="example-container">\n      <form autocomplete="off" [formGroup]="newsForm">\n\n\n\n        \x3c!-- Newsletter title  --\x3e\n        <mat-form-field>\n          <mat-label>Newsletter Title:</mat-label>\n          <input matInput formControlName="newstitle" (blur)="inputBlur(\'newstitle\')">\n          <mat-error *ngIf="!newsForm.controls[\'newstitle\'].valid\n          && newsForm.controls[\'newstitle\'].errors.required" > Title is required.</mat-error>\n        </mat-form-field>\n\n        \x3c!-- Newsletter Subject  --\x3e\n        <mat-form-field>\n          <mat-label>Newsletter Subject:</mat-label>\n          <input matInput formControlName="newssubject" (blur)="inputBlur(\'newssubject\')">\n          <mat-error *ngIf="!newsForm.controls[\'newssubject\'].valid\n          && newsForm.controls[\'newssubject\'].errors.required"> Subject is required.</mat-error>\n        </mat-form-field>\n\n\n        \x3c!-- share newsletter with --\x3e\n        <mat-form-field>\n          <mat-label>Share newsletter with group:</mat-label>\n          <mat-select matNativeControl required formControlName="share_news" multiple>\n            <mat-option  *ngFor="let i of group_name_array" [value]="i._id">{{ i.name }}</mat-option>\n            </mat-select>\n        </mat-form-field>\n\n        \x3c!-- sender\'s address  --\x3e\n        <mat-form-field>\n          <mat-label>Sender\'s address</mat-label>\n          <mat-select matNativeControl required formControlName="senderaddress">\n            <mat-option value=0>Select a sender</mat-option>\n            <mat-option  *ngFor=\'let i of sender_name_array\' [value]="i._id">{{ i.email }}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n\n        \x3c!-- Set Publish Date  --\x3e\n        <mat-form-field>\n          <input matInput [matDatepicker]="picker" placeholder="Set publish date:" formControlName="publishdate" (blur)="inputBlur(\'publishdate\')">\n          <mat-datepicker-toggle matSuffix [for]="picker"></mat-datepicker-toggle>\n          <mat-datepicker #picker></mat-datepicker>\n          <mat-error *ngIf="!newsForm.controls[\'publishdate\'].valid\n          && newsForm.controls[\'publishdate\'].errors.required"> Publish Date is required.</mat-error>\n        </mat-form-field>\n\n         \x3c!-- Time Picker  --\x3e\n         <mat-form-field>\n          <mat-label>Set time:</mat-label>\n          <input matInput atp-time-picker  formControlName="settime"/>\n        </mat-form-field>\n\n          \x3c!-- News Letter Time Zone --\x3e\n          <mat-form-field>\n            <mat-label>News Letter Time Zone</mat-label>\n            <mat-select matNativeControl required formControlName="timezone">\n              <mat-option value="Hawaii Standard Time">Hawaii Standard Time</mat-option>\n              <mat-option value="Alaska Standard Time">Alaska Standard Time</mat-option>\n              <mat-option value="Pacific Standard Time">Pacific Standard Time</mat-option>\n              <mat-option value="Mountain Standard Time">Mountain Standard Time</mat-option>\n              <mat-option value="Central Standard Time">Central Standard Time</mat-option>\n              <mat-option value="Eastern Standard Time">Eastern Standard Time</mat-option>\n            </mat-select>\n          </mat-form-field>\n       \n\n\n        \x3c!-- Content  --\x3e\n        <ck-editor formControlName="content" skin="moono-lisa" language="en" [fullPage]="true" (blur)="inputBlur(\'content\')">        \n        </ck-editor>\n        <mat-error *ngIf="!newsForm.controls[\'content\'].valid\n        && newsForm.controls[\'content\'].errors.required && newsForm.controls[\'content\'].touched"> Description is required.</mat-error><br>\n\n\n      <button   type="button" class="submitbtn submitbtnpreview" mat-raised-button color="primary"\n       (click)="preview_all()" >Preview For Test Email</button>\n        \x3c!-- <h1> SET FREQUENCY </h1> --\x3e\n        <hr>\n\n\n        \x3c!-- Automatically send newsletters to --\x3e\n        \x3c!-- <mat-form-field>\n          <mat-label>Automatically send newsletter to members:</mat-label>\n          <mat-select matNativeControl required formControlName="sendnews" (blur)="inputBlur(\'sendnews\')">\n            <mat-option value=0>Select a group</mat-option>\n            <mat-option value="{{i._id}}" *ngFor="let i of group_name_array" (click)="automatic_newsletter_to=i.name">{{ i.name }}</mat-option>\n          </mat-select>\n        </mat-form-field> --\x3e\n\n\n        \x3c!-- Newsletter frequency  --\x3e\n        <mat-form-field>\n          <mat-label>Newsletter Frequency:</mat-label>\n          <mat-select matNativeControl required formControlName="newsfrequency">\n            <mat-option value="daily" (click)="frequency_flag=false;days_json={}">Daily</mat-option>\n            <mat-option value="weekly" (click)="weekdays();frequency_flag=true">Weekly</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n\n        \x3c!-- News letter Day of the week  --\x3e\n        <div class="dayofweek" *ngIf="frequency_flag==true">\n          <h5>NewsLetter day of the week</h5>\n          <mat-card-content class="date_wrapper" *ngFor="let day of days_json;let i = index">            \n            <mat-checkbox  [checked]="day.isSelected" [value]="day.value" (change)="getDays(day)"> {{day.day}}</mat-checkbox>         \n          </mat-card-content>\n          <div *ngIf="false_count==7" class="desc_error">\n            <mat-icon>error</mat-icon>\n            <p>Please select at least one day.</p>\n          </div>\n        </div>\n       \n\n\n        \x3c!-- News Letter time of the day --\x3e\n        <mat-form-field>\n          <mat-label>News Letter time of the day:</mat-label>\n          <input matInput atp-time-picker formControlName="timeofday" />\n        </mat-form-field>\n\n\n\n        \x3c!-- News letter start Date --\x3e\n        <mat-form-field>\n          <input matInput [matDatepicker]="picker2" placeholder="Newsletter start date" formControlName="startdate" (blur)="inputBlur(\'startdate\')">\n          <mat-datepicker-toggle matSuffix [for]="picker2"></mat-datepicker-toggle>\n          <mat-datepicker #picker2></mat-datepicker>\n          <mat-error *ngIf="!newsForm.controls[\'startdate\'].valid\n          && newsForm.controls[\'startdate\'].errors.required"> Start Date is required.</mat-error>\n        </mat-form-field>\n\n        \x3c!-- News letter end Date --\x3e\n        <mat-form-field>\n          <input matInput [matDatepicker]="picker3" placeholder="Newsletter end date" formControlName="enddate" (blur)="inputBlur(\'enddate\')">\n          <mat-datepicker-toggle matSuffix [for]="picker3"></mat-datepicker-toggle>\n          <mat-datepicker #picker3></mat-datepicker>\n          <mat-error *ngIf="!newsForm.controls[\'enddate\'].valid\n          && newsForm.controls[\'enddate\'].errors.required"> End Date is required.</mat-error>\n        </mat-form-field>\n\n\n        \x3c!-- NewsLetter reply to email address  --\x3e\n        <div class="setting_formblock text-field-new-div">\n          <span class="">Reply Email Address:</span>\n          <span class="setting_formblock text-field-new">{{email_address}}</span>\n        </div>\n\n        \x3c!-- {{email_address.email}} --\x3e\n     \n        \x3c!-- <span>Reply Email Address:</span>\n        <mat-form-field>\n           <input matInput [value]="email_address"  readonly>\n        </mat-form-field>  --\x3e\n\n        \n\n\n        \x3c!-- Buttons  --\x3e\n         \x3c!-- <button *ngIf="this.configData.action==\'add\'" [disabled]="!newsForm.valid" type="button" class="submitbtn" mat-raised-button color="primary" (click)=" openDialog()">PREVIEW</button> --\x3e\n        <button type="submit" class="submitbtn"  mat-raised-button\n          color="primary" (click)="onSubmit()">{{buttonText}}</button>\n        <button type="reset" class="submitbtn"\n        mat-raised-button color="primary">RESET</button>\n\n      </form>\n      \x3c!-- ---------------------------------------FORM ENDS HERE----------------------------- --\x3e\n    </mat-card-content>\n  </span>\n</mat-card>',styles:[".example-container{display:flex;flex-direction:column}.example-container>*{width:100%}.main-class .submitbtn{display:block;width:170px;margin:10px auto;background:#3f50b5!important;color:#fff}.main-class .material-icons{cursor:pointer}.formspan{background-color:#e7e9ea;border:6px solid #fff;border-bottom:10px solid #fff;display:inline-block;width:100%;position:relative;z-index:9}.formspan .example-container{display:flex;flex-direction:column;width:98%;padding:14px;margin-bottom:0}.formspan .form-field-span,.formspan .mat-form-field{display:inline-block;position:relative;text-align:left;width:98%;background:#fff;margin-bottom:9px;padding:1px 14px}.formspan .form-field-span .mat-checkbox,.formspan .form-field-span .mat-radio-button{padding-right:15px;padding-bottom:15px;display:inline-block}.formspan .mat-form-field-wrapper{padding-bottom:0!important}.form-field-span .mat-error{font-size:13px!important}.mat-error{color:#f44336;font-size:13px!important}button.submitbtn.mat-raised-button.mat-primary{margin-right:15px}h1{color:#3f50b4}.files-view{background-repeat:no-repeat;background-size:cover;background-position:center;height:auto!important;width:82%;margin:20px auto;border-radius:10px;display:flex;justify-content:center;align-items:stretch;flex-wrap:wrap}.files-view .mat-card{z-index:9;margin:10px!important;display:flex;flex-wrap:wrap;justify-content:center;width:27%;position:relative}.files-view .mat-card .mat-card-actions,.files-view .mat-card .mat-card-titlt{display:inline-block;width:100%}.files-view .mat-card .mat-card-subtitle{display:inline-block;width:100%;text-align:center}.closecard{position:absolute;top:-10px;right:-8px;background:#464545;height:25px;width:25px;border-radius:50%;border:1px solid #696969;color:#fff;text-align:center;box-shadow:0 2px 6px #00000070;cursor:pointer}.dayofweek{border:5px solid #663399;padding:10px}.closecard i{font-size:18px;line-height:27px}.date_wrapper .mat-checkbox{margin-right:15px}.desc_error{color:#d8000c;border:2px solid #d8000c;background-color:#ff97ce;padding:0 10px;display:inline-flex;align-items:center}.desc_error .mat-icon{margin-right:10px}table{border-collapse:collapse;width:100%;border:1px solid #ddd}td,th{text-align:left;padding:8px;border:1px solid #ddd;color:#0b0a41}tr:nth-child(even){background-color:#f2f2f2}th{background-color:#4caf50;color:#fff}.setting_formblock .text-field-new{background:#dde2e5;padding:5px;border:4px solid #646d73;width:350px;height:32px}.setting_formblock .text-field-new-div{display:inline-block;margin:0 20px;position:relative;text-align:left}"]}]}],De.ctorParameters=function(){return[{type:ee.AmazingTimePickerService},{type:re},{type:J.DatePipe},{type:W.CookieService},{type:Z.FormBuilder},{type:$.Router},{type:Y.MatSnackBar},{type:Q.MatDialog}]},De.propDecorators={config:[{type:X.Input}]},De);function De(e,t,a,r,n,i,o,s){this.atp=e,this.newsService=t,this.datepipe=a,this.cookieService=r,this.formBuilder=n,this.router=i,this.snackBar=o,this.dialog=s,this.header_name="Newsletter",this.buttonText="SAVE",this.group_name_array=[],this.sender_name_array=[],this.frequency_flag=!1,this.days_array=[]}var je=(Object.defineProperty(Ee.prototype,"config",{set:function(e){this.configData=e},enumerable:!0,configurable:!0}),Ee.prototype.onNoClick=function(){this.dialogRef.close()},Ee.prototype.selectOption=function(e){},Ee.prototype.testMailSubmit=function(e,t,a,r,n){this.data.title=e,this.data.subject=t,this.data.content=a,this.data.testMail=this.testMail,this.data.flag=n,this.dialogRef.close(this.data)},Ee.decorators=[{type:X.Component,args:[{selector:"app-preview",template:'<h1 mat-dialog-title>Newsletter Preview</h1>\n<div mat-dialog-content>\n\n   \x3c!-- <div>\n      <span>Newsletter Title :</span>\n      <span><b>{{ data.msg[0] }}</b></span>\n   </div> <br> --\x3e\n\n   <div>\n      \x3c!-- <span>Newsletter Subject :</span> --\x3e\n      <span><b>{{ data.msg[1] }}</b></span>\n   </div><br>\n\n\n   <div>\n      \x3c!-- <span>Newsletter Description :</span> --\x3e\n      <span><b [innerHTML]=\'data.msg[7]\'></b></span>\n   </div>\n\n   <div>\n      <mat-form-field>\n         <mat-label>Select E-mail Address:</mat-label>\n         <mat-select matNativeControl required  multiple (change)="selectOption($event.target.value)"\n         [(ngModel)]="testMail" >\n           \x3c!-- <mat-option value=0>Select a group</mat-option> --\x3e\n           <mat-option *ngFor="let i of data.test_mail" [value]="i._id">{{ i.email }}</mat-option>\n           </mat-select>\n       </mat-form-field>\n   </div>\n\n\n\n<span class="newsbtnclass">\n   <button class="submitbtn" mat-raised-button\n   color="primary" (click)="testMailSubmit(data.msg[0],data.msg[1],data.msg[7],testMail,\'yes\')" cdkFocusInitial>Send</button>\n <button class="submitbtn" mat-dialog-close="no" cdkFocusInitial mat-raised-button color="primary">Cancel</button>\n</span>\n\n</div>\n',styles:[".example-container{display:flex;flex-direction:column}.example-container>*{width:100%}.main-class .submitbtn{display:block;width:170px;margin:10px auto;background:#3f50b5!important;color:#fff}.main-class .material-icons{cursor:pointer}.formspan{background-color:#e7e9ea;border:6px solid #fff;border-bottom:10px solid #fff;display:inline-block;width:100%;position:relative;z-index:9}.formspan .example-container{display:flex;flex-direction:column;width:98%;padding:14px;margin-bottom:0}.formspan .form-field-span,.formspan .mat-form-field{display:inline-block;position:relative;text-align:left;width:98%;background:#fff;margin-bottom:9px;padding:1px 14px}.formspan .form-field-span .mat-checkbox,.formspan .form-field-span .mat-radio-button{padding-right:15px;padding-bottom:15px;display:inline-block}.formspan .mat-form-field-wrapper{padding-bottom:0!important}.form-field-span .mat-error{font-size:13px!important}.mat-error{color:#f44336;font-size:13px!important}button.submitbtn.mat-raised-button.mat-primary{margin-right:15px}h1{color:#3f50b4}.files-view{background-repeat:no-repeat;background-size:cover;background-position:center;height:auto!important;width:82%;margin:20px auto;border-radius:10px;display:flex;justify-content:center;align-items:stretch;flex-wrap:wrap}.files-view .mat-card{z-index:9;margin:10px!important;display:flex;flex-wrap:wrap;justify-content:center;width:27%;position:relative}.files-view .mat-card .mat-card-actions,.files-view .mat-card .mat-card-titlt{display:inline-block;width:100%}.files-view .mat-card .mat-card-subtitle{display:inline-block;width:100%;text-align:center}.closecard{position:absolute;top:-10px;right:-8px;background:#464545;height:25px;width:25px;border-radius:50%;border:1px solid #696969;color:#fff;text-align:center;box-shadow:0 2px 6px #00000070;cursor:pointer}.dayofweek{border:5px solid #663399;padding:10px}.closecard i{font-size:18px;line-height:27px}.date_wrapper .mat-checkbox{margin-right:15px}.desc_error{color:#d8000c;border:2px solid #d8000c;background-color:#ff97ce;padding:0 10px;display:inline-flex;align-items:center}.desc_error .mat-icon{margin-right:10px}table{border-collapse:collapse;width:100%;border:1px solid #ddd}td,th{text-align:left;padding:8px;border:1px solid #ddd;color:#0b0a41}tr:nth-child(even){background-color:#f2f2f2}th{background-color:#4caf50;color:#fff}.setting_formblock .text-field-new{background:#dde2e5;padding:5px;border:4px solid #646d73;width:350px;height:32px}.setting_formblock .text-field-new-div{display:inline-block;margin:0 20px;position:relative;text-align:left}"]}]}],Ee.ctorParameters=function(){return[{type:Q.MatDialogRef},{type:undefined,decorators:[{type:X.Inject,args:[Q.MAT_DIALOG_DATA]}]},{type:re},{type:W.CookieService}]},Ee.propDecorators={config:[{type:X.Input}]},Ee);function Ee(e,t,a,r){this.dialogRef=e,this.data=t,this.newsService=a,this.cookieService=r}var Te=(Object.defineProperty(Me.prototype,"config",{set:function(e){this.newsConfigForm={apiUrl:e.apiBaseUrl,listEndPoint:e.listEndPoint,datasource:e.datasource,tableName:e.tableName,listArray_skip:["_id","userId","created_at","id","updated_at","title_search","publishdate_normal_format","subject_search"],listArray_modify_header:{title:"Title",subject:"Subject",userGroup:"User Group",time:"Publish Time",publishdate:"Publish Date",status:"Status","date added":"Date Added"},admintablenameTableName:"admin",status:[{val:1,name:"Active"},{val:0,name:"Inactive"}],updateurl:e.updateEndpoint,editUrl:e.editUrl,jwtToken:e.jwtToken,deleteEndPoint:e.deleteEndPoint,view:e.view,detail_header:["_id","publishdate_normal_format","title_search"],date_search_source:e.view,date_search_endpoint:"datalist",search_settings:{textsearch:[{label:"Search by title...",field:"title_search"},{label:"Search by subject...",field:"subject_search"}],selectsearch:[{label:"Search By Status",field:"status",values:[{val:1,name:"Active"},{val:0,name:"Inactive"}]}],datesearch:[{startdatelabel:"Start Date",enddatelabel:"End Date",submit:"Search By Date",field:"publishdate_normal_format"}]}},this.loader=!1},enumerable:!0,configurable:!0}),Me.prototype.ngOnInit=function(){},Me.decorators=[{type:X.Component,args:[{selector:"lib-listing-newsletterlib",template:'<mat-card *ngIf="loader==true">\n  <mat-spinner class="spinner"></mat-spinner>\n</mat-card>\n\n\n\n\x3c!-- ------------------------lib listing being called------------------------ --\x3e\n<mat-card *ngIf="loader==false">\n  <lib-listing class="formfilterdiv"\n      *ngIf="newsConfigForm.datasource !=null && newsConfigForm.datasource.length > 0"\n      [datasource]="newsConfigForm.datasource" \n      [skip]="newsConfigForm.listArray_skip"\n      [modify_header_array]="newsConfigForm.listArray_modify_header" \n      [sourcedata]="newsConfigForm.tableName"\n      [statusarr]="newsConfigForm.status" \n      [jwttoken]="newsConfigForm.jwtToken"\n      [apiurl]="newsConfigForm.apiUrl" \n      [editroute]="newsConfigForm.editUrl"\n      [deleteendpoint]="newsConfigForm.deleteEndPoint"\n      [date_search_source]="newsConfigForm.view"\n      [date_search_endpoint]="newsConfigForm.listEndPoint"\n      [search_settings]="newsConfigForm.search_settings"\n      [detail_skip_array]="newsConfigForm.detail_header">\n  </lib-listing>\n\x3c!-- -----------------------------------------------------------------------------\x3e\n\n\n  <h2 *ngIf="newsConfigForm.datasource.length == 0">No record found.</h2>\n</mat-card>',styles:[""]}]}],Me.ctorParameters=function(){return[]},Me.propDecorators={config:[{type:X.Input}]},Me);function Me(){this.loader=!0}var Ie=(Ne.prototype.ngOnInit=function(){switch(this.generateForm(),this.configData.action){case"add":break;case"edit":this.buttonText="UPDATE",this.successMessage="One row updated!!!",this.setDefaultValue(this.configData.defaultData),this.header_name="Edit Sender's Information"}},Ne.prototype.generateForm=function(){this.senderForm=this.formBuilder.group({name:["",[Z.Validators.required]],email:["",[Z.Validators.required,Z.Validators.email]]})},Object.defineProperty(Ne.prototype,"config",{set:function(e){this.configData=e},enumerable:!0,configurable:!0}),Ne.prototype.openDialog=function(e){this.dialogRef=this.dialog.open(Ue,{width:"250px",data:{msg:e}}),this.dialogRef.afterClosed().subscribe(function(e){})},Ne.prototype.inputBlur=function(e){this.senderForm.controls[e].markAsUntouched()},Ne.prototype.setDefaultValue=function(e){this.senderForm.patchValue({name:e.name,email:e.email})},Ne.prototype.onSubmit=function(){var t=this;for(var e in this.senderForm.controls)this.senderForm.controls[e].markAsTouched();if(!this.senderForm.invalid){var a={source:this.configData.source,data:Object.assign(this.senderForm.value,this.configData.condition)};this.newsService.addData(this.configData.endpoint,a).subscribe(function(e){"success"==e.status?(t.openDialog(t.successMessage),setTimeout(function(){t.dialogRef.close()},2e3),t.router.navigate([t.configData.callBack])):alert("Some error occurred. Please try angain.")},function(e){alert("Some error occurred. Please try angain.")})}},Ne.decorators=[{type:X.Component,args:[{selector:"lib-add-edit-sender",template:'<mat-card>\n  <mat-toolbar color="primary" style="justify-content: center; align-items: center;">\n    <h2 class="headerSpan">{{ header_name }}</h2>\n  </mat-toolbar>\n  <span class="formspan">\n    <mat-card-content class="example-container">\n      <form autocomplete="off" [formGroup]="senderForm">\n        \x3c!-- Senders name --\x3e\n        <mat-form-field>\n          <mat-label>Sender\'s Name</mat-label>\n          <input matInput formControlName="name" (blur)="inputBlur(\'name\')">\n          <mat-error *ngIf="!senderForm.controls[\'name\'].valid\n          && senderForm.controls[\'name\'].errors.required" > Name is required.</mat-error>\n        </mat-form-field>\n\n        \x3c!-- Sender\'s email  --\x3e\n        <mat-form-field>\n          <mat-label>Email</mat-label>\n          <input matInput formControlName="email" (blur)="inputBlur(\'email\')">\n          <mat-error *ngIf="!senderForm.controls[\'email\'].valid\n          && senderForm.controls[\'email\'].errors.required" > Email is required.</mat-error>\n          <mat-error *ngIf="!senderForm.controls[\'email\'].valid\n          && senderForm.controls[\'email\'].errors.email" > Email is not Valid.</mat-error>\n        </mat-form-field>\n\n\n        \x3c!-- Button  --\x3e\n        <button type="submit" class="submitbtn" class="submitbtn" mat-raised-button color="primary"\n          (click)="onSubmit()">{{buttonText}}</button>\n        <button type="reset" class="submitbtn" class="submitbtn" mat-raised-button color="primary">RESET</button>\n\n      </form>\n    </mat-card-content>\n  </span>\n</mat-card>',styles:[".example-container{display:flex;flex-direction:column}.example-container>*{width:100%}.main-class .submitbtn{display:block;width:170px;margin:10px auto;background:#3f50b5!important;color:#fff}.main-class .material-icons{cursor:pointer}.formspan{background-color:#e7e9ea;border:6px solid #fff;border-bottom:10px solid #fff;display:inline-block;width:100%;position:relative;z-index:9}.formspan .example-container{display:flex;flex-direction:column;width:98%;padding:14px;margin-bottom:0}.formspan .form-field-span,.formspan .mat-form-field{display:inline-block;position:relative;text-align:left;width:98%;background:#fff;margin-bottom:9px;padding:1px 14px}.formspan .form-field-span .mat-checkbox,.formspan .form-field-span .mat-radio-button{padding-right:15px;padding-bottom:15px;display:inline-block}.formspan .mat-form-field-wrapper{padding-bottom:0!important}.form-field-span .mat-error{font-size:13px!important}.mat-error{color:#f44336;font-size:13px!important}button.submitbtn.mat-raised-button.mat-primary{margin-right:15px}h1{color:#3f50b4}.files-view{background-repeat:no-repeat;background-size:cover;background-position:center;height:auto!important;width:82%;margin:20px auto;border-radius:10px;display:flex;justify-content:center;align-items:stretch;flex-wrap:wrap}.files-view .mat-card{z-index:9;margin:10px!important;display:flex;flex-wrap:wrap;justify-content:center;width:27%;position:relative}.files-view .mat-card .mat-card-actions,.files-view .mat-card .mat-card-titlt{display:inline-block;width:100%}.files-view .mat-card .mat-card-subtitle{display:inline-block;width:100%;text-align:center}.closecard{position:absolute;top:-10px;right:-8px;background:#464545;height:25px;width:25px;border-radius:50%;border:1px solid #696969;color:#fff;text-align:center;box-shadow:0 2px 6px #00000070;cursor:pointer}.closecard i{font-size:18px;line-height:27px}"]}]}],Ne.ctorParameters=function(){return[{type:Z.FormBuilder},{type:re},{type:$.Router},{type:Q.MatDialog}]},Ne.propDecorators={config:[{type:X.Input}]},Ne);function Ne(e,t,a,r){this.formBuilder=e,this.newsService=t,this.router=a,this.dialog=r,this.buttonText="SUBMIT",this.header_name="Add Sender",this.successMessage="Submitted Successfully!!!"}var Ue=(qe.prototype.onNoClick=function(){this.dialogRef.close()},qe.decorators=[{type:X.Component,args:[{selector:"app-modal",template:"<h1 mat-dialog-title>MESSAGE</h1>\n<div mat-dialog-content>\n   <p>{{ data.msg }}</p>\n</div>\n\n"}]}],qe.ctorParameters=function(){return[{type:Q.MatDialogRef},{type:undefined,decorators:[{type:X.Inject,args:[Q.MAT_DIALOG_DATA]}]}]},qe);function qe(e,t){this.dialogRef=e,this.data=t}var Ae=(Object.defineProperty(Pe.prototype,"config",{set:function(e){this.senderConfigForm2={apiUrl:e.apiUrl,listEndPoint:e.listEndPoint,datasource:e.datasource,tableName:e.tableName,listArray_skip:["_id","userId","created_at","id","updated_at"],listArray_modify_header:{name:"Sender's Name",email:"Sender's Email",date:"Date"},admintablenameTableName:"admin",statusarr:[{val:1,name:"Active"},{val:0,name:"Inactive"}],updateurl:e.updateEndpoint,editUrl:e.editUrl,jwtToken:e.jwtToken,deleteEndPoint:e.deleteEndPoint,view:e.view,detail_header:["_id"]},this.loader=!1},enumerable:!0,configurable:!0}),Pe.prototype.ngOnInit=function(){},Pe.decorators=[{type:X.Component,args:[{selector:"lib-listing-sender",template:'<mat-card *ngIf="loader==true">\n  <mat-spinner class="spinner"></mat-spinner>\n</mat-card>\n\n\n\n\x3c!-- ------------------------lib listing being called------------------------ --\x3e\n<mat-card *ngIf="loader==false">\n  <lib-listing class="formfilterdiv"\n      *ngIf="senderConfigForm2.datasource !=null && senderConfigForm2.datasource.length > 0"\n      [datasource]="senderConfigForm2.datasource" [skip]="senderConfigForm2.listArray_skip"\n      [modify_header_array]="senderConfigForm2.listArray_modify_header" [sourcedata]="senderConfigForm2.tableName"\n      [statusarr]="senderConfigForm2.statusarr" [jwttoken]="senderConfigForm2.jwtToken"\n      [apiurl]="senderConfigForm2.apiUrl" [editroute]="senderConfigForm2.editUrl"\n      [deleteendpoint]="senderConfigForm2.deleteEndPoint"\n      [detail_skip_array]="senderConfigForm2.detail_header">\n  </lib-listing>\n\x3c!-- -----------------------------------------------------------------------------\x3e\n\n\n  <h2 *ngIf="senderConfigForm2.datasource.length == 0">No record found.</h2>\n</mat-card>',styles:[".sender_message{width:100%}"]}]}],Pe.ctorParameters=function(){return[{type:W.CookieService}]},Pe.propDecorators={config:[{type:X.Input}]},Pe);function Pe(e){this.cookieService=e,this.loader=!0}var Le=(Be.prototype.ngOnInit=function(){switch(this.generateForm(),this.configData.action){case"add":break;case"edit":this.buttonText="UPDATE",this.successMessage="One row updated!!!",this.setDefaultValue(this.configData.defaultData),this.header_name="Edit sender's Information"}},Be.prototype.generateForm=function(){this.senderFormTest=this.formBuilder.group({name:["",[Z.Validators.required]],email:["",[Z.Validators.required,Z.Validators.email]]})},Object.defineProperty(Be.prototype,"config",{set:function(e){this.configData=e},enumerable:!0,configurable:!0}),Be.prototype.openDialog=function(e){this.dialogRef=this.dialog.open(Oe,{width:"250px",data:{msg:e}}),this.dialogRef.afterClosed().subscribe(function(e){})},Be.prototype.setDefaultValue=function(e){this.senderFormTest.patchValue({name:e.name,email:e.email})},Be.prototype.inputBlur=function(e){this.senderFormTest.controls[e].markAsUntouched()},Be.prototype.onSubmit=function(){var t=this;for(var e in this.senderFormTest.controls)this.senderFormTest.controls[e].markAsTouched();if(!this.senderFormTest.invalid){var a={source:this.configData.source,data:Object.assign(this.senderFormTest.value,this.configData.condition)};this.newsService.addData(this.configData.endpoint,a).subscribe(function(e){"success"==e.status?(console.log(e.status),t.openDialog(t.successMessage),setTimeout(function(){t.dialogRef.close()},2e3),t.router.navigate([t.configData.callBack])):alert("Some error occurred. Please try angain.")},function(e){alert("Some error occurred. Please try angain.")})}},Be.decorators=[{type:X.Component,args:[{selector:"lib-add-edit-testemaillib",template:'<mat-card>\n  <mat-toolbar color="primary" style="justify-content: center; align-items: center;">\n    <h2 class="headerSpan">{{ header_name }}</h2>\n  </mat-toolbar>\n  <span class="formspan">\n    <mat-card-content class="example-container">\n      <form autocomplete="off" [formGroup]="senderFormTest">\n        \x3c!-- Senders name --\x3e\n        <mat-form-field>\n          <mat-label>Sender\'s Name</mat-label>\n          <input matInput formControlName="name" (blur)="inputBlur(\'name\')">\n          <mat-error *ngIf="!senderFormTest.controls[\'name\'].valid\n          && senderFormTest.controls[\'name\'].errors.required" > Name is required.</mat-error>\n        </mat-form-field>\n\n        \x3c!-- Sender\'s email  --\x3e\n        <mat-form-field>\n          <mat-label>Email</mat-label>\n          <input matInput formControlName="email" (blur)="inputBlur(\'email\')">\n          <mat-error *ngIf="!senderFormTest.controls[\'email\'].valid\n          && senderFormTest.controls[\'email\'].errors.required" > Email is required.</mat-error>\n          <mat-error *ngIf="!senderFormTest.controls[\'email\'].valid\n          && senderFormTest.controls[\'email\'].errors.email" > Email is not valid.</mat-error>\n        </mat-form-field>\n\n\n        \x3c!-- Button  --\x3e\n        <button type="submit" class="submitbtn" class="submitbtn" mat-raised-button color="primary"\n          (click)="onSubmit()">{{buttonText}}</button>\n        <button type="reset" class="submitbtn" class="submitbtn" mat-raised-button color="primary">RESET</button>\n\n      </form>\n    </mat-card-content>\n  </span>\n</mat-card>',styles:[".example-container{display:flex;flex-direction:column}.example-container>*{width:100%}.main-class .submitbtn{display:block;width:170px;margin:10px auto;background:#3f50b5!important;color:#fff}.main-class .material-icons{cursor:pointer}.formspan{background-color:#e7e9ea;border:6px solid #fff;border-bottom:10px solid #fff;display:inline-block;width:100%;position:relative;z-index:9}.formspan .example-container{display:flex;flex-direction:column;width:98%;padding:14px;margin-bottom:0}.formspan .form-field-span,.formspan .mat-form-field{display:inline-block;position:relative;text-align:left;width:98%;background:#fff;margin-bottom:9px;padding:1px 14px}.formspan .form-field-span .mat-checkbox,.formspan .form-field-span .mat-radio-button{padding-right:15px;padding-bottom:15px;display:inline-block}.formspan .mat-form-field-wrapper{padding-bottom:0!important}.form-field-span .mat-error{font-size:13px!important}.mat-error{color:#f44336;font-size:13px!important}button.submitbtn.mat-raised-button.mat-primary{margin-right:15px}h1{color:#3f50b4}.files-view{background-repeat:no-repeat;background-size:cover;background-position:center;height:auto!important;width:82%;margin:20px auto;border-radius:10px;display:flex;justify-content:center;align-items:stretch;flex-wrap:wrap}.files-view .mat-card{z-index:9;margin:10px!important;display:flex;flex-wrap:wrap;justify-content:center;width:27%;position:relative}.files-view .mat-card .mat-card-actions,.files-view .mat-card .mat-card-titlt{display:inline-block;width:100%}.files-view .mat-card .mat-card-subtitle{display:inline-block;width:100%;text-align:center}.closecard{position:absolute;top:-10px;right:-8px;background:#464545;height:25px;width:25px;border-radius:50%;border:1px solid #696969;color:#fff;text-align:center;box-shadow:0 2px 6px #00000070;cursor:pointer}.closecard i{font-size:18px;line-height:27px}"]}]}],Be.ctorParameters=function(){return[{type:Z.FormBuilder},{type:re},{type:$.Router},{type:Q.MatDialog}]},Be.propDecorators={config:[{type:X.Input}]},Be);function Be(e,t,a,r){this.formBuilder=e,this.newsService=t,this.router=a,this.dialog=r,this.buttonText="SUBMIT",this.header_name="Add Sender(Test)",this.successMessage="Submitted Successfully!!!"}var Oe=(Ve.prototype.onNoClick=function(){this.dialogRef.close()},Ve.decorators=[{type:X.Component,args:[{selector:"app-modal",template:"<h1 mat-dialog-title>MESSAGE</h1>\n<div mat-dialog-content>\n   <p>{{ data.msg }}</p>\n</div>\n\n"}]}],Ve.ctorParameters=function(){return[{type:Q.MatDialogRef},{type:undefined,decorators:[{type:X.Inject,args:[Q.MAT_DIALOG_DATA]}]}]},Ve);function Ve(e,t){this.dialogRef=e,this.data=t}var ze=(Object.defineProperty(Re.prototype,"config",{set:function(e){this.senderConfigForm={apiUrl:e.apiBaseUrl,listEndPoint:e.listEndPoint,datasource:e.datasource,tableName:e.tableName,listArray_skip:["_id","userId","created_at","id","updated_at"],listArray_modify_header:{name:"Sender's Name",email:"Sender's Email"},admintablenameTableName:"admin",statusarr:[{val:1,name:"Active"},{val:0,name:"Inactive"}],updateurl:e.updateEndpoint,editUrl:e.editUrl,jwtToken:e.jwtToken,deleteEndPoint:e.deleteEndPoint,view:e.view,detail_header:["_id"]},this.loader=!1},enumerable:!0,configurable:!0}),Re.prototype.ngOnInit=function(){},Re.decorators=[{type:X.Component,args:[{selector:"lib-listing-testemaillib",template:'<mat-card *ngIf="loader==true">\n  <mat-spinner class="spinner"></mat-spinner>\n</mat-card>\n\n\n\n\x3c!-- ------------------------lib listing being called------------------------ --\x3e\n<mat-card *ngIf="loader==false">\n  <lib-listing class="formfilterdiv"\n      *ngIf="senderConfigForm.datasource !=null && senderConfigForm.datasource.length > 0"\n      [datasource]="senderConfigForm.datasource" [skip]="senderConfigForm.listArray_skip"\n      [modify_header_array]="senderConfigForm.listArray_modify_header" [sourcedata]="senderConfigForm.tableName"\n      [statusarr]="senderConfigForm.statusarr" [jwttoken]="senderConfigForm.jwtToken"\n      [apiurl]="senderConfigForm.apiUrl" [editroute]="senderConfigForm.editUrl"\n      [deleteendpoint]="senderConfigForm.deleteEndPoint"\n      [detail_skip_array]="senderConfigForm.detail_header">\n  </lib-listing>\n\x3c!-- -----------------------------------------------------------------------------\x3e\n\n  <h2 *ngIf="senderConfigForm.datasource.length == 0">No record found.</h2>\n</mat-card>',styles:[""]}]}],Re.ctorParameters=function(){return[]},Re.propDecorators={config:[{type:X.Input}]},Re);function Re(){this.loader=!0}var Ge=(He.decorators=[{type:X.NgModule,args:[{declarations:[Oe,_e,be,se,de,me,ge,xe,we,Fe,Te,Ie,Ae,Ue,Le,ze,je],imports:[ce,Z.ReactiveFormsModule,Z.FormsModule,R.BrowserAnimationsModule,J.CommonModule,G.ListingModule,$.RouterModule,H.HttpClientModule,ee.AmazingTimePickerModule,te.CKEditorModule,ae.MomentModule],exports:[Ie,Fe,we,be,se,me,ge,xe,Le,ze,Te,Ae],schemas:[X.CUSTOM_ELEMENTS_SCHEMA],providers:[ie,J.DatePipe],entryComponents:[je,Oe,Ue,se,de,be,_e]}]}],He);function He(){}e.NewsTitleService=re,e.NewsTitleComponent=se,e.modalData=de,e.NewsTitleModule=Ge,e.ɵd=we,e.ɵe=_e,e.ɵh=me,e.ɵj=Fe,e.ɵk=je,e.ɵl=Te,e.ɵm=Ie,e.ɵn=Ue,e.ɵo=Ae,e.ɵf=ge,e.ɵg=be,e.ɵi=xe,e.ɵb=Le,e.ɵc=Oe,e.ɵp=ze,e.ɵa=ie,e.ɵq=ce,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=news-title-lib-influxiq.umd.min.js.map