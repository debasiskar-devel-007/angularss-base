{"version":3,"sources":["ng://service-lib-influxiq/lib/servicelib.service.ts","ng://service-lib-influxiq/lib/servicelib.component.ts","ng://service-lib-influxiq/lib/modules/material-module.ts","ng://service-lib-influxiq/lib/Component/addedit-service/addedit-service.component.ts","ng://service-lib-influxiq/lib/servicelib.module.ts"],"names":["ServicelibService","prototype","isTokenExpired","addData","endpoint","requestdata","httpOptions","headers","HttpHeaders","Content-Type","Authorization","this","accesstoken","_http","post","serverUrl","JSON","stringify","pipe","map","res","UpdateData","getData","deleteSingleData","deleteMultipleData","UpdateStatusForSingleData","UpdateStatusForMultipleData","CustomRequest","Injectable","args","providedIn","HttpClient","CookieService","_authHttp","cookieService","progress","uploaderror","get","fileservername","getdata_endpointUrl","ServicelibComponent","Object","defineProperty","receivedData","serviceListConfig","apiUrl","apiBaseUrl","listEndPoint","datasource","tableName","listArray_skip","listArray_modify_header","service title","priority","status","bulletarr","date added","image","admintablenameTableName","statusarr","val","name","updateurl","updateEndpoint","editUrl","jwtToken","deleteEndPoint","view","search_settings","textsearch","label","field","selectsearch","values","detail_header","loader","ngOnInit","Component","selector","template","Input","DemoMaterialModule","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","AddeditServiceComponent","generateForm","configData","action","addBulletList","buttonText","flag","flag2","header_name","successMessage","setDefaultValue","defaultData","additional_img","getConfig","imageConfigData","getConfig2","imageConfigData2","serviceForm","formBuilder","group","service_title","Validators","required","description","additional_details","array","service_img","defaultValue","_this","forEach","element","bullet_title","bullet_desc","patchValue","i","setData","length","img_var","basepath","image_name","image_type","type","images_array_edit","push","images_array","img_var2","image_name2","image_type2","a","b","controls","deleteBulletList","removeAt","trackByFn","index","openModaltest","openDialog","onSubmit","x","markAsTouched","loop","files","concat","upload","data","path","value","ErrCode2","img_missing","invalid","postData","source","assign","condition","token","servicehttp","subscribe","response","setTimeout","dialogRef","close","router","navigateByUrl","callBack","alert","error","dialog","open","Modal","width","msg","panelClass","afterClosed","result","resetserviceForm","reset","inputBlur","markAsUntouched","clear_image","pop","splice","clear_image2","FormBuilder","Router","MatDialog","img_arr","ErrCode","editorconfig","extraAllowedContent","onNoClick","MatDialogRef","Inject","MAT_DIALOG_DATA","ServicelibModule","declarations","imports","HttpClientModule","RouterModule","CKEditorModule","FormsModule","ReactiveFormsModule","CommonModule","BrowserModule","ListingModule","FileUploadModule","entryComponents","providers"],"mappings":"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","sourcesContent":["\n\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpClientModule } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { CookieService } from 'ngx-cookie-service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicelibService {\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress: any = [];\n  public uploadtype;\n  public uploaderror: any = '';\n  public accesstoken: any = this.cookieService.get('jwtToken');;\n  public fileservername: any = [];\n  public serverUrl: any = '';\n  public addendpointUrl: any;\n  public updateendpointUrl: any;\n  public deletesingle_endpointUrl: any;\n  public updatestatus_single_endpointUrl: any;\n  public deletemultiple_endpointUrl: any;\n  public updatestatus_multiple_endpointUrl: any;\n  public getdata_endpointUrl: any = 'datalist';\n\n  constructor(private _http: HttpClient, private _authHttp: HttpClient,private cookieService : CookieService) { }\n\n  isTokenExpired() {\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n  }\n\n  addData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  getData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteSingleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteMultipleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForSingleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForMultipleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint + 'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  CustomRequest(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'lib-servicelib',\n  templateUrl: './servicelib.component.html',\n  styleUrls: ['./servicelib.component.css']\n})\nexport class ServicelibComponent implements OnInit {\n\n  // ==============================================declaration============================================\n  public serviceListConfig: any;\n  public loader: boolean = true;\n  // =====================================================================================================\n\n\n  // =============================================Input For Lib Listing================================\n  @Input()\n  set config(receivedData: any) {\n    this.serviceListConfig = {\n      apiUrl: receivedData.apiBaseUrl,\n      listEndPoint: receivedData.listEndPoint,\n      datasource: receivedData.datasource,\n      tableName: receivedData.tableName,\n      listArray_skip: [\"_id\", \"userId\", \"id\", \"updated_at\", \"service_desc\",\"additional_img\",\"description_html\",'service_title_search','additional_description'],\n      listArray_modify_header: { \"service title\": \"Service title\", \"priority\": \"Priority\", \n      \"status\": \"Status\", \"bulletarr\": \"Number of Bullets\",\"date added\":\"Date Added\",\"image\":\"Image\" },\n      admintablenameTableName: \"admin\",\n      statusarr: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }],\n      updateurl: receivedData.updateEndpoint,\n      editUrl: receivedData.editUrl,\n      jwtToken: receivedData.jwtToken,\n      deleteEndPoint: receivedData.deleteEndPoint,\n      view: receivedData.view,\n\n      /*Search settings in the Listing*/\n      search_settings: {\n        textsearch: [{ label: \"Search by title\", field: 'service_title_search' }],\n        selectsearch: [{ label: 'Search By Status', field: 'status', values: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }] }], // this is use for  select search\n      },\n\n      /*Showing Image in the Modal*/\n      // pendingmodelapplicationarray_detail_datatype:[{\n      //   key: \"images\",\n      //   value: 'image',\n      //   fileurl: 'https://s3.us-east-2.amazonaws.com/crmfiles.influxhostserver/services/'    \n      // }],\n      detail_header:['_id','additional_details']\n\n    }\n    this.loader = false;\n  }\n\n  // ====================================================================================================\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license */","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { FormControl, FormGroup, FormArray, FormBuilder, Validators } from '@angular/forms';\nimport { ServicelibService } from '../../servicelib.service';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CookieService } from 'ngx-cookie-service';\nexport interface DialogData {\n  msg: string;\n}\n\n\n@Component({\n  selector: 'lib-addedit-service',\n  templateUrl: './addedit-service.component.html',\n  styleUrls: ['./addedit-service.component.css']\n})\nexport class AddeditServiceComponent implements OnInit {\n\n\n\n  // public editorData = '<p>Write description...</p>';\n\n  /**ckeditor for descripiton start here*/\n  // public Editor = ClassicEditor;\n  // editorConfig = {\n  //   placeholder: 'Write description...',\n  // };\n  // public model = {\n  //   editorData: ''\n  // };\n\n\n /** ckeditor for additional description **/\n  // public Editor2 = ClassicEditor;  //for ckeditor\n  // editorConfig2 = {\n  //   placeholder: 'Please provide additional details...',\n  // };\n  // public model2 = {\n  //   editorData: ''\n  // };\n  /**ckeditor end here*/\n\n\n\n  // ===========================================Declaration section================================\n  serviceForm: FormGroup;\n  loader: boolean = false;\n  configData: any;\n  imageConfigData: any;\n  buttonText = \"SUBMIT\";\n  successMessage: string = \"Service Added!!!\";\n  dialogRef: any;\n  img_arr: any = [];\n  ErrCode: boolean = false;\n  flag: boolean;\n  img_var: any;\n  header_name: any;\n  image_name: any;\n  image_type: any;\n  getConfig2: any;\n  imageConfigData2: any;\n  img_var2: any;\n  image_name2: any;\n  image_type2: any;\n  flag2: boolean;\n  ErrCode2:boolean = false;\n  img_missing: boolean = false;\n  public editorconfig : any = {};\n  public images_array:any=[];\n  public setData: any;\n  public images_array_edit:any=[];\n  // ==============================================================================================\n\n\n\n  constructor(private formBuilder: FormBuilder, private servicehttp: ServicelibService,\n    private router: Router, public dialog: MatDialog , public cookieService : CookieService) { \n      this.editorconfig.extraAllowedContent = '*[class](*),span;ul;li;table;td;style;*[id];*(*);*{*}';\n    }\n\n  ngOnInit() {\n\n\n    this.loader = false;\n    this.generateForm();\n\n    if (this.configData.action != 'edit')\n      this.addBulletList('', '');\n\n\n    // =========================================SWITCH CASES==========================================\n    switch (this.configData.action) {\n      case 'add':\n        /* Button text */\n        this.buttonText = \"SUBMIT\";\n        this.flag = false;\n        this.flag2 = false;\n        this.header_name = \"Add Service\";\n        break;\n      case 'edit':\n        /* Button text */\n        this.buttonText = \"UPDATE\";\n        this.successMessage = \"Service Edited!!!\";\n        this.setDefaultValue(this.configData.defaultData);\n        this.header_name = \"Edit Service\";\n        this.flag = true;\n        this.flag2 = true;\n        if (this.configData.defaultData.additional_img == false)\n          this.flag2 = false;\n        break;\n    }\n    // ===============================================================================================\n\n  }\n\n\n  @Input()\n  set config(getConfig: any) {\n    this.configData = getConfig;\n    \n  }\n  @Input()\n  set imageUpload(getConfig: any) {\n    this.imageConfigData = getConfig;\n  }\n  @Input()\n  set imageUpload2(getConfig2: any) {\n    this.imageConfigData2 = getConfig2;\n  }\n\n\n\n  // =============================================form generation====================================\n  generateForm() {\n    this.serviceForm = this.formBuilder.group({\n      service_title: ['', [Validators.required]],\n      description: ['', [Validators.required]],\n      additional_details:[''],\n      priority: ['', [Validators.required]],\n      status: [true,],\n      bulletarr: this.formBuilder.array([]),\n      service_img: [''],\n      additional_img: ['']\n    });\n  }\n  // =================================================================================================\n\n\n\n\n\n  // ===============================================Default value======================================\n  setDefaultValue(defaultValue) {\n\n    defaultValue.bulletarr.forEach(element => {\n      this.addBulletList(element.bullet_title, element.bullet_desc);\n    });\n\n    this.serviceForm.patchValue({\n      service_title: defaultValue.service_title,\n      description: defaultValue.description,\n      additional_details: defaultValue.additional_details,\n      priority: defaultValue.priority,\n      status: defaultValue.status,\n      service_img: defaultValue.service_img,\n      additional_img: defaultValue.additional_img,\n    });\n    /** Service image **/\n    // this.img_var = defaultValue.service_img.basepath + defaultValue.service_img.image;\n    // this.image_name = defaultValue.service_img.name;\n    // this.image_type = defaultValue.service_img.type\n\n    /*Image works*/\n        for (let i = 0; i < this.setData.service_img.length; i++) {\n          this.img_var = this.setData.service_img[i].basepath + this.setData.service_img[i].image;\n          this.image_name = this.setData.service_img[i].name;\n          this.image_type = this.setData.service_img[i].type;\n          this.images_array_edit.push({ 'img_var': this.img_var, 'image_name': this.image_name, 'image_type': this.image_type });\n          this.images_array.push({\n            \"basepath\": this.setData.service_img[i].basepath,\n            \"image\": this.setData.service_img[i].image,\n            \"name\": this.setData.service_img[i].name,\n            \"type\": this.setData.service_img[i].type\n          });\n        }\n\n    /** Additional image **/\n    this.img_var2 = defaultValue.additional_img.basepath + defaultValue.additional_img.image;\n    this.image_name2 = defaultValue.additional_img.name;\n    this.image_type2 = defaultValue.additional_img.type\n  }\n  // ==================================================================================================\n\n\n\n\n\n\n\n\n\n  // ==========================================FORM ARRAY FUNCTIONS===================================\n  addBulletList(a: any, b: any) {\n    const bl = this.serviceForm.controls.bulletarr as FormArray;\n    bl.push(this.formBuilder.group({\n      bullet_title: [a],\n      bullet_desc: [b],\n    }));\n  }\n\n  deleteBulletList() {\n    const bl = this.serviceForm.controls.bulletarr as FormArray;\n    bl.removeAt(1);\n  }\n\n  \n\n  trackByFn(index) {\n    return index;\n  }\n  // ==================================================================================================\n  openModaltest(){\n    this.openDialog('Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry');\n  }\n\n  // ================================================SUBMIT============================================\n  onSubmit() {\n   \n      /** marking as untouched **/\n      for (let x in this.serviceForm.controls) {\n        this.serviceForm.controls[x].markAsTouched();\n      }\n\n \n    // Service File Upload Works \n    // if (this.imageConfigData.files) {\n\n    //   if (this.imageConfigData.files.length > 1) { this.ErrCode = true;this.img_missing = false; return; }\n\n    //   this.serviceForm.value.service_img =\n    //     {\n    //       \"basepath\": this.imageConfigData.files[0].upload.data.basepath + '/' + this.imageConfigData.path + '/',\n    //       \"image\": this.imageConfigData.files[0].upload.data.data.fileservername,\n    //       \"name\": this.imageConfigData.files[0].name,\n    //       \"type\": this.imageConfigData.files[0].type\n    //     };\n    //     this.img_missing = false;\n    // } else {\n\n    //   if( this.serviceForm.value.service_img == null ||  this.serviceForm.value.service_img == '')\n    //   {\n    //   this.img_missing = true;\n    //   this.ErrCode = false;\n    //   }\n    // }\n\n    /*__________________________IMAGE UPLOADER________________________________________*/\n    if (this.imageConfigData) {\n      // console.log(\"image path\",this.imageConfigData);\n      for (const loop in this.imageConfigData.files) {\n        this.images_array =\n          this.images_array.concat({\n            \"basepath\": this.imageConfigData.files[loop].upload.data.basepath + '/' + this.imageConfigData.path + '/',\n            \"image\": this.imageConfigData.files[loop].upload.data.data.fileservername,\n            \"name\": this.imageConfigData.files[loop].name,\n            \"type\": this.imageConfigData.files[loop].type\n          });\n      }\n      this.serviceForm.value.service_img = this.images_array;\n    } else {\n      this.serviceForm.value.service_img = false;\n    }\n\n\n\n\n\n\n\n    /** Additional Image  **/\n    if (this.imageConfigData2.files) {\n      //console.log(\"length\",this.imageConfigData2.files.length); \n      if (this.imageConfigData2.files.length > 1) { this.ErrCode2 = true; return; }\n      this.serviceForm.value.additional_img =\n        {\n          \"basepath\": this.imageConfigData2.files[0].upload.data.basepath + '/' + this.imageConfigData2.path + '/',\n          \"image\": this.imageConfigData2.files[0].upload.data.data.fileservername,\n          \"name\": this.imageConfigData2.files[0].name,\n          \"type\": this.imageConfigData2.files[0].type\n        };\n    }\n\n\n    for (let i in this.serviceForm.controls) {\n      this.serviceForm.controls[i].markAsTouched();\n    }\n\n    this.loader = true;\n     if(this.img_missing==true){return;}\n    if (this.serviceForm.invalid) {\n      return;\n    } else {\n      if (this.serviceForm.value.status) {\n        this.serviceForm.value.status = 1;\n      } else {\n        this.serviceForm.value.status =0;\n      }\n\n      /* start process to submited data */\n      let postData: any = {\n        source: this.configData.source,\n        data: Object.assign(this.serviceForm.value, this.configData.condition),\n        token: this.configData.jwtToken\n      };\n      this.servicehttp.addData(this.configData.endpoint, postData).subscribe((response: any) => {\n        if (response.status == \"success\") {\n          this.openDialog(this.successMessage);\n          setTimeout(() => {\n            this.dialogRef.close();\n          }, 3000);\n          this.router.navigateByUrl(this.configData.callBack);\n        } else {\n          alert(\"Some error occurred. Please try again.\");\n        }\n      }, (error) => {\n        alert(\"Some error occurred. Please try again.\");\n      });\n    }\n\n  }\n  // ================================================================================================== \n\n\n\n  // =========================================MODAL functions==========================================\n  openDialog(x: any): void {\n    this.dialogRef = this.dialog.open(Modal, {\n      width: '250px',\n      data: { msg: x },\n      panelClass:'success_modal_service'\n    });\n    this.dialogRef.afterClosed().subscribe(result => {\n    });\n  }\n  // =================================================================================================\n\n\n\n  resetserviceForm() {\n    this.serviceForm.reset();\n  }\n\n  inputBlur(val: any) {\n    this.serviceForm.controls[val].markAsUntouched();\n  }\n\n  // ================================================================================================\n  // clear_image() {\n  //   this.flag = false;\n  //   this.img_missing = true;\n  // }\n  clear_image(index) {\n    this.images_array.pop(this.setData.service_img[index]);\n    this.images_array_edit.splice(index, 1);\n  }\n\n  clear_image2() {\n    this.flag2 = false;\n    this.serviceForm.value.additional_img = false;\n  }\n  // ================================================================================================\n}\n\n\n\n\n\n\n\n\n\n\n// ============================================MODAL COMPONENT===========================================\n@Component({\n  selector: 'app-modal',\n  templateUrl: 'modal.html',\n})\nexport class Modal {\n\n  constructor(\n    public dialogRef: MatDialogRef<Modal>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n// ======================================================================================================\n","import { NgModule } from '@angular/core';\nimport { ServicelibComponent } from './servicelib.component';\nimport { DemoMaterialModule } from './modules/material-module';\nimport { AddeditServiceComponent ,Modal} from './Component/addedit-service/addedit-service.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { CKEditorModule } from 'ngx-ckeditor';\nimport { ReactiveFormsModule , FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ListingModule } from 'listing-angular7';\nimport { FileUploadModule } from 'file-upload-lib-influxiq';\nimport { CookieService } from 'ngx-cookie-service';\n\n@NgModule({\n  declarations: [ServicelibComponent,AddeditServiceComponent,Modal],\n  imports: [\n    DemoMaterialModule,\n    HttpClientModule,\n    RouterModule,\n    CKEditorModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    BrowserModule,\n    ListingModule,\n    FileUploadModule\n  ],\n  exports: [ServicelibComponent,AddeditServiceComponent,Modal],\n  entryComponents:[Modal],\n  providers:[CookieService]\n})\nexport class ServicelibModule { }\n"]}